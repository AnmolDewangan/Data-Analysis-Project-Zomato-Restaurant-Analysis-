<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0310.1044                               -->
<workbook original-version='18.1' source-build='2023.1.0 (20231.23.0310.1044)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <BasicButtonObject />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Zomato analysis (Final)' inline='true' name='federated.0r4rb7e0d8z1kb14xzf160m5w5mt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Zomato analysis (Final)' name='excel-direct.1ggh8hd0g8gufe1bt2sai0yks0er'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/anmol/DA/Project (Zomato analysis)/Zomato analysis (Final).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1ggh8hd0g8gufe1bt2sai0yks0er' name='Copy of main' table='[&apos;Copy of main$&apos;]' type='table'>
          <columns gridOrigin='A1:W9552:no:A1:W9552:0' header='yes' outcome='2'>
            <column datatype='integer' name='RestaurantID' ordinal='0' />
            <column datatype='string' name='RestaurantName' ordinal='1' />
            <column datatype='integer' name='CountryCode' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='Address' ordinal='4' />
            <column datatype='string' name='Locality' ordinal='5' />
            <column datatype='string' name='LocalityVerbose' ordinal='6' />
            <column datatype='real' name='Longitude' ordinal='7' />
            <column datatype='real' name='Latitude' ordinal='8' />
            <column datatype='string' name='Cuisines' ordinal='9' />
            <column datatype='string' name='Currency' ordinal='10' />
            <column datatype='string' name='Has_Table_booking' ordinal='11' />
            <column datatype='string' name='Has_Online_delivery' ordinal='12' />
            <column datatype='string' name='Is_delivering_now' ordinal='13' />
            <column datatype='string' name='Switch_to_order_menu' ordinal='14' />
            <column datatype='integer' name='Price_range' ordinal='15' />
            <column datatype='integer' name='Votes' ordinal='16' />
            <column datatype='integer' name='Average_Cost_for_two' ordinal='17' />
            <column datatype='real' name='USD_conversion' ordinal='18' />
            <column datatype='string' name='bucket_avg_cost' ordinal='19' />
            <column datatype='real' name='Rating' ordinal='20' />
            <column datatype='string' name='Avg_rating' ordinal='21' />
            <column datatype='string' name='Datekey_Opening' ordinal='22' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.1ggh8hd0g8gufe1bt2sai0yks0er' name='Copy of main' table='[&apos;Copy of main$&apos;]' type='table'>
            <columns gridOrigin='A1:W9552:no:A1:W9552:0' header='yes' outcome='2'>
              <column datatype='integer' name='RestaurantID' ordinal='0' />
              <column datatype='string' name='RestaurantName' ordinal='1' />
              <column datatype='integer' name='CountryCode' ordinal='2' />
              <column datatype='string' name='City' ordinal='3' />
              <column datatype='string' name='Address' ordinal='4' />
              <column datatype='string' name='Locality' ordinal='5' />
              <column datatype='string' name='LocalityVerbose' ordinal='6' />
              <column datatype='real' name='Longitude' ordinal='7' />
              <column datatype='real' name='Latitude' ordinal='8' />
              <column datatype='string' name='Cuisines' ordinal='9' />
              <column datatype='string' name='Currency' ordinal='10' />
              <column datatype='string' name='Has_Table_booking' ordinal='11' />
              <column datatype='string' name='Has_Online_delivery' ordinal='12' />
              <column datatype='string' name='Is_delivering_now' ordinal='13' />
              <column datatype='string' name='Switch_to_order_menu' ordinal='14' />
              <column datatype='integer' name='Price_range' ordinal='15' />
              <column datatype='integer' name='Votes' ordinal='16' />
              <column datatype='integer' name='Average_Cost_for_two' ordinal='17' />
              <column datatype='real' name='USD_conversion' ordinal='18' />
              <column datatype='string' name='bucket_avg_cost' ordinal='19' />
              <column datatype='real' name='Rating' ordinal='20' />
              <column datatype='string' name='Avg_rating' ordinal='21' />
              <column datatype='string' name='Datekey_Opening' ordinal='22' />
            </columns>
          </relation>
          <relation connection='excel-direct.1ggh8hd0g8gufe1bt2sai0yks0er' name='Q1.1-Country map' table='[&apos;Q1#1-Country map$&apos;]' type='table'>
            <columns gridOrigin='A1:D16:no:A1:D16:0' header='yes' outcome='6'>
              <column datatype='integer' name='CountryCode' ordinal='0' />
              <column datatype='real' name='Longitude' ordinal='1' />
              <column datatype='real' name='Latitude' ordinal='2' />
              <column datatype='string' name='Country Name' ordinal='3' />
            </columns>
          </relation>
          <relation connection='excel-direct.1ggh8hd0g8gufe1bt2sai0yks0er' name='Q1.2-Currency map' table='[&apos;Q1#2-Currency map$&apos;]' type='table'>
            <columns gridOrigin='A1:E16:no:A1:E16:0' header='yes' outcome='6'>
              <column datatype='integer' name='CountryCode' ordinal='0' />
              <column datatype='string' name='Countryname' ordinal='1' />
              <column datatype='string' name='Currency' ordinal='2' />
              <column datatype='real' name='1_INR' ordinal='3' />
              <column datatype='real' name='1_usd' ordinal='4' />
            </columns>
          </relation>
          <relation connection='excel-direct.1ggh8hd0g8gufe1bt2sai0yks0er' name='Q2-Calendar Table' table='[&apos;Q2-Calendar Table$&apos;]' type='table'>
            <columns gridOrigin='A1:M9552:no:A1:M9552:0' header='yes' outcome='6'>
              <column datatype='string' name='Datekey_Opening' ordinal='0' />
              <column datatype='string' name='Date' ordinal='1' />
              <column datatype='integer' name='Year' ordinal='2' />
              <column datatype='integer' name='monthno' ordinal='3' />
              <column datatype='string' name='monthname' ordinal='4' />
              <column datatype='integer' name='Quarter' ordinal='5' />
              <column datatype='string' name='YYYY-mmm' ordinal='6' />
              <column datatype='integer' name='Weekno' ordinal='7' />
              <column datatype='integer' name='Weekdayno' ordinal='8' />
              <column datatype='string' name='Weekdayname' ordinal='9' />
              <column datatype='string' name='Finac Month' ordinal='10' />
              <column datatype='integer' name='Finan Qtr' ordinal='11' />
              <column datatype='string' name='Weekend' ordinal='12' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[1_INR]' value='[Q1.2-Currency map].[1_INR]' />
          <map key='[1_usd]' value='[Q1.2-Currency map].[1_usd]' />
          <map key='[Address]' value='[Copy of main].[Address]' />
          <map key='[Average_Cost_for_two]' value='[Copy of main].[Average_Cost_for_two]' />
          <map key='[Avg_rating]' value='[Copy of main].[Avg_rating]' />
          <map key='[City]' value='[Copy of main].[City]' />
          <map key='[Country Name]' value='[Q1.1-Country map].[Country Name]' />
          <map key='[CountryCode (Q1.1-Country map)]' value='[Q1.1-Country map].[CountryCode]' />
          <map key='[CountryCode (Q1.2-Currency map)]' value='[Q1.2-Currency map].[CountryCode]' />
          <map key='[CountryCode]' value='[Copy of main].[CountryCode]' />
          <map key='[Countryname]' value='[Q1.2-Currency map].[Countryname]' />
          <map key='[Cuisines]' value='[Copy of main].[Cuisines]' />
          <map key='[Currency (Q1.2-Currency map)]' value='[Q1.2-Currency map].[Currency]' />
          <map key='[Currency]' value='[Copy of main].[Currency]' />
          <map key='[Date]' value='[Q2-Calendar Table].[Date]' />
          <map key='[Datekey_Opening (Q2-Calendar Table)]' value='[Q2-Calendar Table].[Datekey_Opening]' />
          <map key='[Datekey_Opening]' value='[Copy of main].[Datekey_Opening]' />
          <map key='[Finac Month]' value='[Q2-Calendar Table].[Finac Month]' />
          <map key='[Finan Qtr]' value='[Q2-Calendar Table].[Finan Qtr]' />
          <map key='[Has_Online_delivery]' value='[Copy of main].[Has_Online_delivery]' />
          <map key='[Has_Table_booking]' value='[Copy of main].[Has_Table_booking]' />
          <map key='[Is_delivering_now]' value='[Copy of main].[Is_delivering_now]' />
          <map key='[Latitude (Q1.1-Country map)]' value='[Q1.1-Country map].[Latitude]' />
          <map key='[Latitude]' value='[Copy of main].[Latitude]' />
          <map key='[LocalityVerbose]' value='[Copy of main].[LocalityVerbose]' />
          <map key='[Locality]' value='[Copy of main].[Locality]' />
          <map key='[Longitude (Q1.1-Country map)]' value='[Q1.1-Country map].[Longitude]' />
          <map key='[Longitude]' value='[Copy of main].[Longitude]' />
          <map key='[Price_range]' value='[Copy of main].[Price_range]' />
          <map key='[Quarter]' value='[Q2-Calendar Table].[Quarter]' />
          <map key='[Rating]' value='[Copy of main].[Rating]' />
          <map key='[RestaurantID]' value='[Copy of main].[RestaurantID]' />
          <map key='[RestaurantName]' value='[Copy of main].[RestaurantName]' />
          <map key='[Switch_to_order_menu]' value='[Copy of main].[Switch_to_order_menu]' />
          <map key='[USD_conversion]' value='[Copy of main].[USD_conversion]' />
          <map key='[Votes]' value='[Copy of main].[Votes]' />
          <map key='[Weekdayname]' value='[Q2-Calendar Table].[Weekdayname]' />
          <map key='[Weekdayno]' value='[Q2-Calendar Table].[Weekdayno]' />
          <map key='[Weekend]' value='[Q2-Calendar Table].[Weekend]' />
          <map key='[Weekno]' value='[Q2-Calendar Table].[Weekno]' />
          <map key='[YYYY-mmm]' value='[Q2-Calendar Table].[YYYY-mmm]' />
          <map key='[Year]' value='[Q2-Calendar Table].[Year]' />
          <map key='[bucket_avg_cost]' value='[Copy of main].[bucket_avg_cost]' />
          <map key='[monthname]' value='[Q2-Calendar Table].[monthname]' />
          <map key='[monthno]' value='[Q2-Calendar Table].[monthno]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Copy of main]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:W9552:no:A1:W9552:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Q1.1-Country map]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D16:no:A1:D16:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Q1.2-Currency map]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E16:no:A1:E16:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Q2-Calendar Table]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M9552:no:A1:M9552:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RestaurantID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RestaurantID]</local-name>
            <parent-name>[Copy of main]</parent-name>
            <remote-alias>RestaurantID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of main_0E55014CB3864729AF5644CD95E6E5ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RestaurantName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RestaurantName]</local-name>
            <parent-name>[Copy of main]</parent-name>
            <remote-alias>RestaurantName</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of main_0E55014CB3864729AF5644CD95E6E5ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryCode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CountryCode]</local-name>
            <parent-name>[Copy of main]</parent-name>
            <remote-alias>CountryCode</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of main_0E55014CB3864729AF5644CD95E6E5ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Copy of main]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of main_0E55014CB3864729AF5644CD95E6E5ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Address</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Address]</local-name>
            <parent-name>[Copy of main]</parent-name>
            <remote-alias>Address</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of main_0E55014CB3864729AF5644CD95E6E5ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Locality</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Locality]</local-name>
            <parent-name>[Copy of main]</parent-name>
            <remote-alias>Locality</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of main_0E55014CB3864729AF5644CD95E6E5ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalityVerbose</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalityVerbose]</local-name>
            <parent-name>[Copy of main]</parent-name>
            <remote-alias>LocalityVerbose</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of main_0E55014CB3864729AF5644CD95E6E5ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Copy of main]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of main_0E55014CB3864729AF5644CD95E6E5ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Copy of main]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of main_0E55014CB3864729AF5644CD95E6E5ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cuisines</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Cuisines]</local-name>
            <parent-name>[Copy of main]</parent-name>
            <remote-alias>Cuisines</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of main_0E55014CB3864729AF5644CD95E6E5ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Currency</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Currency]</local-name>
            <parent-name>[Copy of main]</parent-name>
            <remote-alias>Currency</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of main_0E55014CB3864729AF5644CD95E6E5ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Has_Table_booking</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Has_Table_booking]</local-name>
            <parent-name>[Copy of main]</parent-name>
            <remote-alias>Has_Table_booking</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of main_0E55014CB3864729AF5644CD95E6E5ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Has_Online_delivery</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Has_Online_delivery]</local-name>
            <parent-name>[Copy of main]</parent-name>
            <remote-alias>Has_Online_delivery</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of main_0E55014CB3864729AF5644CD95E6E5ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Is_delivering_now</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Is_delivering_now]</local-name>
            <parent-name>[Copy of main]</parent-name>
            <remote-alias>Is_delivering_now</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of main_0E55014CB3864729AF5644CD95E6E5ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Switch_to_order_menu</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Switch_to_order_menu]</local-name>
            <parent-name>[Copy of main]</parent-name>
            <remote-alias>Switch_to_order_menu</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of main_0E55014CB3864729AF5644CD95E6E5ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price_range</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Price_range]</local-name>
            <parent-name>[Copy of main]</parent-name>
            <remote-alias>Price_range</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of main_0E55014CB3864729AF5644CD95E6E5ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Votes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Votes]</local-name>
            <parent-name>[Copy of main]</parent-name>
            <remote-alias>Votes</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of main_0E55014CB3864729AF5644CD95E6E5ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average_Cost_for_two</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Average_Cost_for_two]</local-name>
            <parent-name>[Copy of main]</parent-name>
            <remote-alias>Average_Cost_for_two</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of main_0E55014CB3864729AF5644CD95E6E5ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>USD_conversion</remote-name>
            <remote-type>5</remote-type>
            <local-name>[USD_conversion]</local-name>
            <parent-name>[Copy of main]</parent-name>
            <remote-alias>USD_conversion</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of main_0E55014CB3864729AF5644CD95E6E5ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bucket_avg_cost</remote-name>
            <remote-type>130</remote-type>
            <local-name>[bucket_avg_cost]</local-name>
            <parent-name>[Copy of main]</parent-name>
            <remote-alias>bucket_avg_cost</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of main_0E55014CB3864729AF5644CD95E6E5ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Rating]</local-name>
            <parent-name>[Copy of main]</parent-name>
            <remote-alias>Rating</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of main_0E55014CB3864729AF5644CD95E6E5ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg_rating</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Avg_rating]</local-name>
            <parent-name>[Copy of main]</parent-name>
            <remote-alias>Avg_rating</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of main_0E55014CB3864729AF5644CD95E6E5ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Datekey_Opening</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Datekey_Opening]</local-name>
            <parent-name>[Copy of main]</parent-name>
            <remote-alias>Datekey_Opening</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of main_0E55014CB3864729AF5644CD95E6E5ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryCode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CountryCode (Q1.1-Country map)]</local-name>
            <parent-name>[Q1.1-Country map]</parent-name>
            <remote-alias>CountryCode</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Q1.1-Country map_9F2981E3714B4E6DB8099E0B9947FE13]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude (Q1.1-Country map)]</local-name>
            <parent-name>[Q1.1-Country map]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Q1.1-Country map_9F2981E3714B4E6DB8099E0B9947FE13]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude (Q1.1-Country map)]</local-name>
            <parent-name>[Q1.1-Country map]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Q1.1-Country map_9F2981E3714B4E6DB8099E0B9947FE13]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[Q1.1-Country map]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Q1.1-Country map_9F2981E3714B4E6DB8099E0B9947FE13]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryCode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CountryCode (Q1.2-Currency map)]</local-name>
            <parent-name>[Q1.2-Currency map]</parent-name>
            <remote-alias>CountryCode</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Q1.2-Currency map_0FB038307DF848AAAFFA9D2B1FE1F676]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Countryname</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Countryname]</local-name>
            <parent-name>[Q1.2-Currency map]</parent-name>
            <remote-alias>Countryname</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Q1.2-Currency map_0FB038307DF848AAAFFA9D2B1FE1F676]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Currency</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Currency (Q1.2-Currency map)]</local-name>
            <parent-name>[Q1.2-Currency map]</parent-name>
            <remote-alias>Currency</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Q1.2-Currency map_0FB038307DF848AAAFFA9D2B1FE1F676]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1_INR</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1_INR]</local-name>
            <parent-name>[Q1.2-Currency map]</parent-name>
            <remote-alias>1_INR</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Q1.2-Currency map_0FB038307DF848AAAFFA9D2B1FE1F676]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1_usd</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1_usd]</local-name>
            <parent-name>[Q1.2-Currency map]</parent-name>
            <remote-alias>1_usd</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Q1.2-Currency map_0FB038307DF848AAAFFA9D2B1FE1F676]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Datekey_Opening</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Datekey_Opening (Q2-Calendar Table)]</local-name>
            <parent-name>[Q2-Calendar Table]</parent-name>
            <remote-alias>Datekey_Opening</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Q2-Calendar Table_D1871838FFFB47ADA4BA21DF19C3C605]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Q2-Calendar Table]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Q2-Calendar Table_D1871838FFFB47ADA4BA21DF19C3C605]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Q2-Calendar Table]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Q2-Calendar Table_D1871838FFFB47ADA4BA21DF19C3C605]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>monthno</remote-name>
            <remote-type>20</remote-type>
            <local-name>[monthno]</local-name>
            <parent-name>[Q2-Calendar Table]</parent-name>
            <remote-alias>monthno</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Q2-Calendar Table_D1871838FFFB47ADA4BA21DF19C3C605]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>monthname</remote-name>
            <remote-type>130</remote-type>
            <local-name>[monthname]</local-name>
            <parent-name>[Q2-Calendar Table]</parent-name>
            <remote-alias>monthname</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Q2-Calendar Table_D1871838FFFB47ADA4BA21DF19C3C605]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quarter</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quarter]</local-name>
            <parent-name>[Q2-Calendar Table]</parent-name>
            <remote-alias>Quarter</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Q2-Calendar Table_D1871838FFFB47ADA4BA21DF19C3C605]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YYYY-mmm</remote-name>
            <remote-type>130</remote-type>
            <local-name>[YYYY-mmm]</local-name>
            <parent-name>[Q2-Calendar Table]</parent-name>
            <remote-alias>YYYY-mmm</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Q2-Calendar Table_D1871838FFFB47ADA4BA21DF19C3C605]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weekno</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Weekno]</local-name>
            <parent-name>[Q2-Calendar Table]</parent-name>
            <remote-alias>Weekno</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Q2-Calendar Table_D1871838FFFB47ADA4BA21DF19C3C605]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weekdayno</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Weekdayno]</local-name>
            <parent-name>[Q2-Calendar Table]</parent-name>
            <remote-alias>Weekdayno</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Q2-Calendar Table_D1871838FFFB47ADA4BA21DF19C3C605]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weekdayname</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Weekdayname]</local-name>
            <parent-name>[Q2-Calendar Table]</parent-name>
            <remote-alias>Weekdayname</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Q2-Calendar Table_D1871838FFFB47ADA4BA21DF19C3C605]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finac Month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Finac Month]</local-name>
            <parent-name>[Q2-Calendar Table]</parent-name>
            <remote-alias>Finac Month</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Q2-Calendar Table_D1871838FFFB47ADA4BA21DF19C3C605]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finan Qtr</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finan Qtr]</local-name>
            <parent-name>[Q2-Calendar Table]</parent-name>
            <remote-alias>Finan Qtr</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Q2-Calendar Table_D1871838FFFB47ADA4BA21DF19C3C605]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weekend</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Weekend]</local-name>
            <parent-name>[Q2-Calendar Table]</parent-name>
            <remote-alias>Weekend</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Q2-Calendar Table_D1871838FFFB47ADA4BA21DF19C3C605]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='1 Inr' datatype='real' name='[1_INR]' role='measure' type='quantitative' />
      <column caption='1 Usd' datatype='real' name='[1_usd]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[Average Cost for two (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='4' formula='[Average_Cost_for_two]' peg='0' size='43715' />
      </column>
      <column caption='Average Cost for two' datatype='integer' name='[Average_Cost_for_two]' role='measure' type='quantitative' />
      <column caption='Avg rating' datatype='string' name='[Avg_rating]' role='dimension' type='nominal' />
      <column caption='Calculation1' datatype='integer' name='[Calculation_1184446719096381441]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Case [Weekdayname]&#13;&#10;when &quot;Mon&quot; then 01&#13;&#10;when &quot;Tue&quot; then 02&#13;&#10;when &quot;Wed&quot; then 03&#13;&#10;when &quot;Thurs&quot; then 04&#13;&#10;when &quot;Fri&quot; then 05&#13;&#10;when &quot;Sat&quot; then 06&#13;&#10;when &quot;Sun&quot; then 07&#13;&#10;END' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[CountryCode (Q1.1-Country map)]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[CountryCode (Q1.2-Currency map)]' role='dimension' type='ordinal' />
      <column caption='Country Code' datatype='integer' name='[CountryCode]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Countryname]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Cuisines]' role='dimension' type='nominal' />
      <column caption='Datekey Opening (Q2-Calendar Table)' datatype='string' name='[Datekey_Opening (Q2-Calendar Table)]' role='dimension' type='nominal' />
      <column caption='Datekey Opening' datatype='string' name='[Datekey_Opening]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Finan Qtr]' role='dimension' type='quantitative' />
      <column caption='Has Online delivery' datatype='string' name='[Has_Online_delivery]' role='dimension' type='nominal' />
      <column caption='Has Table booking' datatype='string' name='[Has_Table_booking]' role='dimension' type='nominal' />
      <column caption='Is delivering now' datatype='string' name='[Is_delivering_now]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude (Q1.1-Country map)]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Locality Verbose' datatype='string' name='[LocalityVerbose]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Longitude (Q1.1-Country map)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Price range' datatype='integer' name='[Price_range]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Quarter]' role='dimension' type='quantitative' />
      <column caption='Restaurant ID' datatype='integer' name='[RestaurantID]' role='dimension' type='ordinal' />
      <column caption='Restaurant Name' datatype='string' name='[RestaurantName]' role='dimension' type='nominal' />
      <column caption='Switch to order menu' datatype='string' name='[Switch_to_order_menu]' role='dimension' type='nominal' />
      <column aggregation='None' caption='USD conversion (bin)' datatype='integer' name='[USD conversion (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='1' formula='[USD_conversion]' peg='0' size='50' />
      </column>
      <column caption='USD conversion' datatype='real' name='[USD_conversion]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Copy of main' datatype='table' name='[__tableau_internal_object_id__].[Copy of main_0E55014CB3864729AF5644CD95E6E5ED]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Q1.1-Country map' datatype='table' name='[__tableau_internal_object_id__].[Q1.1-Country map_9F2981E3714B4E6DB8099E0B9947FE13]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Q1.2-Currency map' datatype='table' name='[__tableau_internal_object_id__].[Q1.2-Currency map_0FB038307DF848AAAFFA9D2B1FE1F676]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Q2-Calendar Table' datatype='table' name='[__tableau_internal_object_id__].[Q2-Calendar Table_D1871838FFFB47ADA4BA21DF19C3C605]' role='measure' type='quantitative' />
      <column caption='Bucket Avg Cost' datatype='string' name='[bucket_avg_cost]' role='dimension' type='nominal' />
      <column caption='Monthname' datatype='string' name='[monthname]' role='dimension' type='nominal' />
      <column caption='Monthno' datatype='integer' name='[monthno]' role='measure' type='quantitative' />
      <column-instance column='[Countryname]' derivation='None' name='[none:Countryname:nk]' pivot='key' type='nominal' />
      <column-instance column='[Cuisines]' derivation='None' name='[none:Cuisines:nk]' pivot='key' type='nominal' />
      <column-instance column='[Has_Online_delivery]' derivation='None' name='[none:Has_Online_delivery:nk]' pivot='key' type='nominal' />
      <column-instance column='[Has_Table_booking]' derivation='None' name='[none:Has_Table_booking:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Bucket Avg Cost)' hidden='true' name='[Action (Bucket Avg Cost)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[bucket_avg_cost]' />
        </groupfilter>
      </group>
      <group caption='Action (Country Name)' hidden='true' name='[Action (Country Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country Name]' />
        </groupfilter>
      </group>
      <group caption='Action (USD conversion (bin))' hidden='true' name='[Action (USD conversion (bin))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[USD conversion (bin)]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country Name, City'>
          <field>[Country Name]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Cuisines:nk]' type='palette'>
            <map to='#073e92'>
              <bucket>&quot;North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Chinese, Fast Food&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;American, Asian, Burger&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;American, Breakfast, Vegetarian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;American, Desserts&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;American, International, Southwestern&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;American, North Indian, European, Asian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Andhra, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Asian, Chinese, Thai, Vietnamese&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Asian, Seafood&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Awadhi, North Indian, Mughlai&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bakery, Desserts, Fast Food, Pizza, Burger, Finger Food&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bakery, Street Food&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bengali, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Biryani, Kerala&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazilian, Steak&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British, Burger, Cafe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burger, Desserts, Fast Food&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burger, Seafood, Steak&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cafe, Bakery, Fast Food&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cafe, Coffee and Tea, Modern Australian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cafe, Continental, Italian, Pizza&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cafe, Fast Food, Desserts&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cafe, Italian, Continental, Chinese&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cafe, Italian, Pizza, European, Bakery, Deli&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cafe, North Indian, Chinese, South Indian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cafe, Tea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chinese, Cafe, North Indian, Desserts&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chinese, Italian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chinese, Naga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chinese, North Indian, Seafood&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chinese, Sushi, Thai&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chinese, Thai, Sushi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Continental, American, Asian, North Indian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Continental, Cafe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Continental, Chinese, Thai, Mughlai, North Indian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Continental, Italian, Asian, Indian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Continental, Mexican&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Continental, North Indian, Chinese, Italian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Continental, Seafood, Burger, South African, Finger Food, Grill&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Desserts, Bí_rek&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Desserts, Sandwich, Southern&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;European, Desserts&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;European, Sushi, Italian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fast Food, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fast Food, North Indian, Beverages&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fast Food, Street Food, Beverages&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Finger Food, Italian, Spanish, Greek&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Goan, American, Portuguese&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gujarati, South Indian, North Indian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Healthy Food, North Indian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ice Cream, Desserts, Beverages&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Indian, Mughlai, South Indian, Biryani&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;International, Southern&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italian, Continental, Chinese&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italian, Fast Food, South Indian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italian, Mexican, Continental, North Indian, Finger Food&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italian, Seafood, Mediterranean, Desserts, Cafe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Japanese, Sushi, Asian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kashmiri, North Indian, Mughlai, South Indian, Maharashtrian, Gujarati&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Latin American, Mexican&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malaysian, Indonesian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mediterranean, Mexican, North Indian, American&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexican, North Indian, European, Chinese, Italian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mithai, North Indian, South Indian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mithai, Street Food, North Indian, South Indian, Chinese&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mughlai, Lucknowi, Awadhi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Indian, Afghani&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Indian, Cafe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Indian, Chinese, Continental, Thai&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Indian, Chinese, Mediterranean&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Indian, Chinese, South Indian, Seafood, Chettinad&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Indian, Continental, Chinese, Fast Food&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Indian, Continental, Lebanese&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Indian, Fast Food, Biryani&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Indian, Hyderabadi, Kashmiri, Chinese&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Indian, Kashmiri&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Indian, Middle Eastern, Pizza&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Indian, Mughlai, Chinese, Raw Meats&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Indian, Rajasthani&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Indian, South Indian, Chinese, Street Food&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Indian, South Indian, Street Food, Fast Food, Mithai&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pakistani, Chinese, Indian, Afghani&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pizza, Fast Food, Bakery&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rajasthani, North Indian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seafood&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seafood, Mughlai, North Indian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Indian, Chinese, Continental, Italian, North Indian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Indian, North Indian, Chinese, Mughlai&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Steak, Seafood, Grill&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Street Food, Mithai, South Indian, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Taiwanese, Street Food&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tibetan, Chinese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;American, BBQ, Southern&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;American, Chinese, North Indian, Italian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;American, Fast Food, Steak, Beverages&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;American, Italian, Seafood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;American, Seafood, Sushi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Asian, Breakfast, Hawaiian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Asian, Japanese, Korean, Thai, Chinese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Asian, Vietnamese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bakery, Desserts, Beverages&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bakery, Healthy Food&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BBQ, Caribbean, Seafood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Beverages, Salad, Beverages&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brazilian, Bar Food, Beverages&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Breakfast, Mexican, Southwestern&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burger, American, Grill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burger, Izgara&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cafe, American, Italian, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cafe, Chinese, Continental&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cafe, Continental, Italian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cafe, European, Mexican&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cafe, Healthy Food, North Indian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cafe, Italian, Mexican, Bakery&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cafe, Mexican, Italian, Fast Food&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cafe, Pizza, Burger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chinese, Asian, Mediterranean, Continental&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chinese, Fast Food, Bakery&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chinese, Japanese, Thai, Malaysian, Vietnamese, Asian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chinese, North Indian, Italian, Continental, Fast Food&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chinese, Seafood, North Indian, Biryani&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chinese, Thai, Malaysian, Indonesian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Coffee and Tea, Tapas, Australian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Continental, American, Tex-Mex, North Indian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Continental, Chinese, Mexican, North Indian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Continental, Finger Food&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Continental, Italian, North Indian, Mughlai&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Continental, North Indian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Continental, North Indian, Italian, Seafood, Goan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Desserts, American&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Desserts, Latin American, Argentine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;European, Cafe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;European, North Indian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fast Food, Cafe, Desserts, Bakery&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fast Food, Italian, Pizza&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fast Food, Pizza, Burger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Finger Food, Continental, North Indian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;French, Italian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greek, Mediterranean&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Healthy Food, Continental, North Indian, Salad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hyderabadi, Fast Food&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Indian, Cafe, Curry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Indian, South Indian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Italian, Chinese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Italian, Continental, North Indian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Italian, Mediterranean, Pizza&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Italian, Pizza, Bakery&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Japanese, Chinese, Thai&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Juices, Desserts&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kerala, South Indian, Continental, North Indian, Seafood, Chinese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lebanese, North Indian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mediterranean, Continental, North Indian, Italian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mexican, Grill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mithai, Bakery, Street Food, Chinese, South Indian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mithai, South Indian, Chinese, Street Food&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mughlai, Chinese, Cafe, BBQ, Cajun&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepalese, Tibetan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Indian, Bengali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Indian, Chinese, Continental, Italian, Burger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Indian, Chinese, Italian, Finger Food&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Indian, Chinese, Seafood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Indian, Chinese, Tibetan, Italian, Fast Food&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Indian, Continental, Fast Food&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Indian, European, Continental&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Indian, Fast Food, South Indian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Indian, Italian, Continental, Chinese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Indian, Mediterranean, Asian, Continental&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Indian, Mughlai, Biryani, Bengali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Indian, Mughlai, Mexican, Thai&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Indian, South Indian, Chinese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Indian, South Indian, Gujarati, Rajasthani&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Indian, Street Food, South Indian, Fast Food, Chinese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pizza, Bar Food&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pizza, Sandwich&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Restaurant Cafe, Turkish, Desserts&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seafood, Continental, European, German&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Indian, Fast Food, Street Food&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Southern, Cajun, Soul Food&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Street Food, Continental, South Indian, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sunda, Indonesian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thai, Chinese, Asian, Malaysian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vietnamese, Fish and Chips&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Afghani, North Indian, Pakistani, Arabian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American, Breakfast, Desserts&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American, Continental, Italian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American, Greek, Seafood&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American, Mexican&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American, Tapas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Asian, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Asian, North Indian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Awadhi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bakery, Desserts, Fast Food, Beverages&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bakery, Mithai, Fast Food&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bengali&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Biryani&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brazilian, Italian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Breakfast, Spanish, Tapas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burger, Bar Food, Vegetarian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burger, Pizza, Fast Food&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cafe, Australian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cafe, Chinese, Fast Food, Seafood&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cafe, Continental, Italian, Fast Food&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cafe, Fast Food, Bakery&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cafe, Italian, Chinese, Continental&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cafe, Italian, Mexican, North Indian, Continental&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cafe, North Eastern&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cafe, Spanish, Turkish, Greek&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chinese&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chinese, Beverages&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chinese, Fast Food, North Indian, South Indian, Street Food, Mithai&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chinese, Mexican, Italian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chinese, North Indian, Mithai, Street Food&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chinese, South Indian, Fast Food&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chinese, Thai, North Indian, South Indian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Contemporary, Italian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Continental, Asian, North Indian, Italian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Continental, Chinese, North Indian, Mughlai&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Continental, Indian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Continental, Kashmiri, Italian, North Indian, Moroccan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Continental, North Indian, Chinese, Arabian, Thai&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Continental, North Indian, Mughlai, Italian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Desserts, Bakery, Western&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Desserts, North Indian, Chinese, South Indian, Fast Food, Street Food&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;European, Contemporary&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;European, Pizza&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fast Food, Chinese, Bengali&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fast Food, Mughlai&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fast Food, South Indian, Chinese&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Finger Food, European, North Indian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;French, Western&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grill, Steak, Burger, Sushi, Tapas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Healthy Food, Italian, Juices, Beverages&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ice Cream, Bakery&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Indian, Grill&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;International, Indian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italian, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italian, European&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italian, Mexican, Cafe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italian, Pizza, Lebanese&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Japanese, Seafood, Sushi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kashmiri, Chinese&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Korean, Chinese&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lucknowi, Mughlai&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mediterranean, Italian, American&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mexican, Italian, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mithai, Fast Food&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mithai, Street Food, Chinese&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mughlai, Fast Food, North Indian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Eastern, Continental, South Indian, Fast Food&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Indian, Biryani, Chinese, Fast Food&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Indian, Chinese, Continental, Mughlai&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Indian, Chinese, Italian, Mexican, Lebanese&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Indian, Chinese, South Indian, Chinese&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Indian, Continental, Asian, Chinese, Thai&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Indian, Continental, Italian, Asian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Indian, European, South Indian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Indian, French, Continental&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Indian, Italian, Mexican, Asian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Indian, Mediterranean, European, Asian, Chinese, Pizza&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Indian, Mughlai, Chinese, Continental, Fast Food&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Indian, Mughlai, South Indian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Indian, South Indian, Chinese, Healthy Food, Bakery&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Indian, South Indian, Mughlai&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Indian, Tibetan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pizza, Chinese&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Portuguese, African, Lebanese&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sandwich, Seafood, Cajun&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Seafood, Italian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Indian, Chettinad, North Indian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Indian, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Steak&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Street Food, Fast Food, Chinese, South Indian, North Indian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sushi, Japanese, Cantonese&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thai, European, Mexican, North Indian, Chinese, Cafe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;World Cuisine, Mexican, Italian&quot;</bucket>
            </map>
            <map to='#68ceee'>
              <bucket>&quot;North Indian, Mughlai, Chinese&quot;</bucket>
            </map>
            <map to='#762f3d'>
              <bucket>&quot;Mughlai&quot;</bucket>
            </map>
            <map to='#7719e3'>
              <bucket>&quot;Pizza, Fast Food&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;American, Bakery, European, Burger, Fusion&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;American, Burger, Cajun&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;American, European&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;American, Italian, Cafe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;American, Sandwich, Salad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Arabian, Mexican&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asian, Continental, Fast Food&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asian, Sushi, Thai&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bakery, Beverages, Fast Food&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bakery, Desserts, North Indian, Bengali, South Indian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bar Food, Sandwich, Seafood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Beverages, Bar Food, Fast Food&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Biryani, North Indian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Breakfast, Cajun&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;British, French&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burger, Fast Food, Chinese&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cafe, Belgian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cafe, Continental, Chinese&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cafe, Continental, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cafe, Fast Food, Italian, Mexican&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cafe, Italian, Continental, Mexican, Mediterranean&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cafe, Korean&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cafe, North Indian, Fast Food&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cajun&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chinese, Continental, Mexican&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chinese, Italian, North Indian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chinese, North Indian, Continental&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chinese, North Indian, South Indian, Street Food&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chinese, Thai, Asian, Malaysian, Vietnamese, Japanese&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chinese, Tibetan, Fast Food&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Continental, American, Italian, Bakery&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Continental, Cafe, Spanish, Italian, European, Greek, Mediterranean&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Continental, European, North Indian, French&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Continental, Italian, Mediterranean, Asian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Continental, Mexican, Burger, American, Pizza, Tex-Mex&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Continental, North Indian, European&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Continental, Seafood, North Indian, Asian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Desserts, Fast Food, Chinese&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;European&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;European, Italian, Cafe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fast Food, American, Italian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fast Food, Desserts, Ice Cream, Beverages&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fast Food, North Indian, Chinese, South Indian, Ice Cream&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fast Food, Turkish&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Finger Food, North Indian, Continental, Italian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Goan, Seafood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Healthy Food&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Healthy Food, North Indian, Italian, Salad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ice Cream, Desserts, North Indian, Street Food&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indian, North Indian, Mughlai, Biryani&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Italian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Italian, Continental, Fast Food, Chinese&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Italian, French, European, Cafe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Italian, North Indian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Japanese&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Japanese, Thai, Chinese&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kebab, Turkish Pizza&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lebanese, Arabian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malwani, North Indian, Chinese, Seafood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mediterranean, Turkish&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mexican, Tex-Mex&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mithai, North Indian, South Indian, Chinese, Street Food&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Modern Australian, Australian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mughlai, North Indian, South Indian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Indian, American, Italian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Indian, Chinese, Bakery&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Indian, Chinese, Fast Food, Mithai&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Indian, Chinese, Mexican, Italian, Thai, Lebanese&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Indian, Chinese, Street Food&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Indian, Continental, Chinese, Italian, Thai, Mughlai&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Indian, Continental, Salad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Indian, Fast Food, Chinese, Japanese, Asian, Italian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Indian, Italian, Asian, South Indian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Indian, Lebanese, European, Mexican&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Indian, Mithai, South Indian, Street Food, Chinese&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Indian, Mughlai, Continental, Chinese&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Indian, Seafood, Bengali&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Indian, South Indian, Chinese, Street Food, Mithai&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Indian, Street Food, Beverages&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Parsi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pizza, Italian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Raw Meats, Fast Food, North Indian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seafood, Asian, Filipino, Indian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seafood, Steak&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Indian, Chinese, Mughlai&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Indian, North Indian, Street Food, Chinese, Mithai&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Street Food, Beverages&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Street Food, North Indian, Mithai&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tea, Cafe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tibetan, South Indian, North Indian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;American, Asian, European, Seafood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;American, British, Continental&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;American, Desserts, Diner&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;American, International, Sushi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;American, North Indian, Thai, Continental&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Andhra, North Indian, Chinese, Seafood, Biryani&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Asian, Chinese, Tibetan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Asian, Sushi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bakery, Desserts, Fast Food, Street Food, Chinese, Beverages&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bar Food&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bengali, Seafood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Biryani, Lucknowi, North Indian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Breakfast&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;British, Cafe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burger, Desserts, Sandwich&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burger, Steak, Seafood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cafe, Bakery, Italian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cafe, Coffee and Tea, Sandwich&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cafe, Continental, Italian, Street Food&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cafe, Fast Food, Healthy Food&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cafe, Italian, Continental, Desserts&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cafe, Italian, Salad&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cafe, North Indian, Continental&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cafe, Tea, Desserts&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chinese, Canadian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chinese, Italian, Continental&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chinese, North Eastern&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chinese, North Indian, South Indian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chinese, Thai&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chinese, Thai, Tibetan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Continental, American, Cafe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Continental, Cafe, Desserts, Bakery&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Continental, European&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Continental, Italian, Chinese&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Continental, Mexican, American, Fast Food, Italian, Chinese&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Continental, North Indian, Chinese, Italian, Finger Food&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Continental, Seafood, Chinese, North Indian, Biryani&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Desserts, Cafe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Desserts, Street Food&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;European, German&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fast Food, Continental, Italian, Bakery&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fast Food, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fast Food, Street Food, Chinese&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Finger Food, North Indian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Goan, Chinese, Indian, North Indian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hawaiian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Healthy Food, North Indian, Beverages&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ice Cream, Desserts, Cafe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Indian, North Indian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;International, Southern, Vegetarian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italian, Continental, Chinese, Mexican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italian, French&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italian, Mexican, Lebanese, Continental&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italian, Seafood, Vegetarian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Japanese, Sushi, Ramen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kebab&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Latin American, Mexican, Southwestern&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malaysian, North Indian, Sri Lankan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mediterranean, Mughlai, Thai, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mexican, Southwestern, Sushi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mithai, North Indian, South Indian, Chinese&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mithai, Street Food, North Indian, South Indian, Chinese, Fast Food, Beverages&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mughlai, North Indian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Indian, Afghani, Mughlai&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Indian, Cafe, Italian, Mexican, Continental&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Indian, Chinese, Fast Food&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Indian, Chinese, Mediterranean, Asian, Continental&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Indian, Chinese, South Indian, Street Food, Fast Food, Mithai&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Indian, Continental, Chinese, Italian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Indian, Continental, Mexican, Italian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Indian, Fast Food, Chinese&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Indian, Indian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Indian, Kashmiri, Chinese, Thai, Korean&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Indian, Mithai&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Indian, Mughlai, Chinese, Seafood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Indian, Rajasthani, Asian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Indian, South Indian, Chinese, Street Food, Fast Food&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Indian, South Indian, Street Food, Mithai&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pakistani, Indian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pizza, Fast Food, Chinese&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ramen, Japanese&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Seafood, African, Sushi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Seafood, North Indian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Indian, Chinese, Fast Food&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Indian, North Indian, Chinese, Street Food, Fast Food&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Steak, Tapas, Bar Food&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Street Food, Mughlai&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tapas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tibetan, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;African&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;American, Breakfast, Diner&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;American, Continental, Italian, Bakery&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;American, Grill&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;American, Mexican, Burger&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;American, Tex-Mex&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Asian, Chinese, Thai&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Asian, North Indian, Continental&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Awadhi, Mughlai&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bakery, Desserts, Fast Food, Mithai&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bakery, North Indian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bengali, Chinese&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Biryani, Andhra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brazilian, Mineira&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Breakfast, Vegetarian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Burger, Coffee and Tea, Modern Australian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Burger, Pizza, Sandwich&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cafe, Bakery&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cafe, Chinese, Italian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cafe, Continental, Italian, Mexican&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cafe, Fast Food, Beverages&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cafe, Italian, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cafe, Italian, Mexican, Salad, Desserts&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cafe, North Indian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cafe, Sri Lankan, Continental, American&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chinese, Biryani, North Indian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chinese, Fast Food, Pizza&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chinese, Mithai&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chinese, North Indian, Mughlai&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chinese, South Indian, North Indian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chinese, Thai, Seafood&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Contemporary, Sushi, Grill, Italian, Steak&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Continental, Asian, Sushi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Continental, Chinese, Thai&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Continental, Italian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Continental, Kerala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Continental, North Indian, Chinese, Asian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Continental, North Indian, South Indian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Desserts, Bar Food&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Desserts, Pizza, Ice Cream&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;European, Continental&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;European, South African&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fast Food, Chinese, Burger&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fast Food, Mughlai, Armenian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fast Food, South Indian, Chinese, Mithai&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Finger Food, Italian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;German&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gujarati&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Healthy Food, Juices&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ice Cream, Beverages&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Indian, International, Vegetarian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;International, Italian, Southern&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italian, Continental&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italian, European, Cafe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italian, Mexican, Chinese&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italian, Pizza, Sandwich&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japanese, Steak&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kashmiri, Chinese, Mughlai&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Korean, Japanese, Chinese, Asian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lucknowi, Mughlai, North Indian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mediterranean, Italian, Continental, Spanish, North Indian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mexican, Italian, North Indian, Continental, Asian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mithai, North Indian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mithai, Street Food, Fast Food&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mughlai, Hyderabadi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Eastern, North Indian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Indian, Biryani, Fast Food&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Indian, Chinese, Continental, Pizza&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Indian, Chinese, Italian, Street Food, Desserts&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Indian, Chinese, South Indian, Fast Food&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Indian, Continental, Asian, Italian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Indian, Continental, Italian, Chinese&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Indian, Greek, Mughlai&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Indian, Italian, Mexican, Chettinad, Chinese, Lebanese&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Indian, Mexican, Chinese, Italian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Indian, Mughlai, Chinese, Fast Food&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Indian, Mughlai, South Indian, Chinese&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Indian, South Indian, Chinese, Mithai&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Indian, South Indian, Street Food&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oriya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pizza, Continental, Beverages&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pub Food&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sandwich, Seafood, Steak&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Seafood, Japanese, Sushi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Indian, Chettinad, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Indian, North Indian, Chinese, Continental&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Steak, American&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Street Food, Fast Food, North Indian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sushi, Japanese, Healthy Food&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thai, Japanese&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;World Cuisine, Patisserie, Cafe&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Fast Food&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;American, BBQ, Sandwich&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;American, Caribbean, Seafood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;American, Fast Food, Desserts, Steak&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;American, Italian, North Indian, European, Thai&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;American, Seafood, Southern&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Asian Fusion, Pub Food, Fusion, Asian, Filipino, Malaysian, Thai&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Asian, Japanese&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Asian, Vegetarian, Vietnamese&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bakery, Fast Food, Street Food&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BBQ, Burger, Seafood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Beverages, Juices&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brazilian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Breakfast, French&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Burger, American, Fast Food&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Burger, Greek, Sandwich&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cafe, American, Italian, Continental&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cafe, Charcoal Grill, Steak&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cafe, Continental, Fast Food&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cafe, Desserts, Healthy Food, Juices&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cafe, Healthy Food, Continental&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cafe, Italian, Lebanese&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cafe, Mexican, Continental&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cafe, Patisserie, Bakery, Desserts&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chinese, Dim Sum&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chinese, Japanese, Thai&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chinese, North Indian, Italian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chinese, Seafood, Cantonese, Dim Sum&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chinese, Thai, Japanese, Asian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Coffee and Tea, Modern Australian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Continental, American, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Continental, Chinese, Italian, Finger Food&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Continental, Fast Food, North Indian, Asian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Continental, Italian, North Indian, Lebanese&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Continental, Middle Eastern, Asian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Continental, North Indian, Italian, Asian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cuisine Varies&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Desserts, Ice Cream, Pizza&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;European, Asian, Mediterranean, Modern Indian, Desserts, Finger Food&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;European, Mediterranean, Contemporary&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fast Food, Burger&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fast Food, Italian, Desserts, Beverages&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fast Food, North Indian, South Indian, Chinese, Street Food, Mithai&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Finger Food, Continental, Italian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French, Brazilian, Beverages&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greek, Italian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Healthy Food, Continental, Juices, Beverages, Italian, Salad, Lebanese&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hyderabadi, Biryani&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indian, Asian, Durban, International, Desserts&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indian, Rajasthani&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Italian, Cafe, Chinese, Continental&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Italian, Continental, Mexican, Lebanese&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Italian, Mediterranean&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Italian, North Indian, South Indian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Japanese, Chinese, Asian, Thai&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Juices, Beverages, Fast Food&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kerala, South Indian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lebanese, Mediterranean, Arabian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mediterranean, Continental&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mexican, American, Tex-Mex, Burger&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mithai, Bakery, North Indian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mithai, North Indian, Street Food, Chinese, South Indian, Indian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mughlai, Biryani&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Naga, Tibetan, Chinese, Bakery&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Indian, Asian, Italian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Indian, Chinese, Continental, Goan, Seafood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Indian, Chinese, Italian, Continental&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Indian, Chinese, Mughlai, South Indian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Indian, Chinese, Thai, Mexican, Italian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Indian, Continental, European, American, Mediterranean&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Indian, European, Asian, Mediterranean&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Indian, Fast Food, Mithai&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Indian, Italian, Continental&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Indian, Mediterranean, Asian, Arabian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Indian, Mughlai, Awadhi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Indian, Mughlai, Lebanese&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Indian, South Indian, Bakery, Italian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Indian, South Indian, Fast Food, Street Food, Chinese, Mithai&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Indian, Street Food, Mithai&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Peruvian, Latin American&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pizza, North Indian, Continental&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Restaurant Cafe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Seafood, Chinese, Thai&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Singaporean, Chinese, Seafood, Malay, Indian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Indian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Indian, Fast Food, Chinese&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Indian, Street Food, Mithai&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Street Food, Chinese, North Indian, Mithai&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Street Food, South Indian, Chinese&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Thai, Chinese&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Turkish, Mediterranean, Middle Eastern&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghani&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;American, BBQ, Steak&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;American, Chinese, Sushi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;American, Finger Food&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;American, Japanese, Singaporean&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;American, Southern&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Asian, Burmese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Asian, Japanese, Sushi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Assamese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bakery, Desserts, Cafe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bakery, Italian, Chinese, Mexican&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BBQ, Grill, Brazilian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Beverages, Street Food&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brazilian, Cafe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Breakfast, Modern Australian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burger, Bar Food&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burger, Juices, Finger Food&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cafe, American, Mexican, Italian, Thai&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cafe, Chinese, Continental, Italian, Desserts, Beverages&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cafe, Continental, Italian, Bakery&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cafe, Fast Food&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cafe, Italian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cafe, Italian, Mexican, Chinese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cafe, Mexican, Italian, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cafe, Pizza, Italian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chinese, Asian, Thai&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chinese, Fast Food, Ice Cream&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chinese, Lucknowi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chinese, North Indian, Italian, Fast Food&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chinese, Seafood, Thai&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chinese, Thai, Malaysian, Vietnamese, Korean, Indonesian, Asian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coffee and Tea, Tea, Modern Australian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Continental, Asian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Continental, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Continental, Finger Food, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Continental, Italian, Pizza, Asian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Continental, North Indian, American, Italian, Mexican&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Continental, North Indian, Mexican&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Desserts, Bakery&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Desserts, Middle Eastern, Turkish&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;European, Cafe, Italian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;European, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fast Food, Cafe, Italian, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fast Food, Maharashtrian, North Indian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fast Food, Raw Meats&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Finger Food, Continental, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;French, Japanese, Desserts&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greek, Mediterranean, Middle Eastern&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Healthy Food, European, Continental, Salad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hyderabadi, North Indian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Indian, Chinese, Continental&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Indian, Street Food&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Italian, Chinese, Continental, Thai, Mediterranean, Lebanese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Italian, Continental, North Indian, Cafe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Italian, Mediterranean, Sushi, Desserts&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Italian, Pizza, Beverages, Desserts, Grill, Seafood&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japanese, Chinese, Thai, Malaysian, Burmese, Asian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Juices, Fast Food&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kiwi, European&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanese, North Indian, Fast Food&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mediterranean, European&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mexican, Italian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mithai, Beverages&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mithai, South Indian, Chinese, Street Food, North Indian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mughlai, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;New American&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Indian, Beverages&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Indian, Chinese, Continental, Italian, Mexican&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Indian, Chinese, Italian, Lebanese, Mexican&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Indian, Chinese, Seafood, Chettinad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Indian, Chinese, Turkish&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Indian, Continental, Finger Food&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Indian, European, Continental, Finger Food&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Indian, Fast Food, Street Food&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Indian, Italian, Fast Food&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Indian, Mediterranean, Asian, Fast Food&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Indian, Mughlai, Mughlai&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Indian, South Indian, Chinese, Fast Food&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Indian, South Indian, Italian, Chinese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Indian, Street Food, South Indian, Mithai&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pizza, Bar Food, Sandwich&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pizza, Sandwich, Vegetarian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Salad, Continental&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Seafood, Continental, Goan, Asian, Andhra&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Indian, Andhra&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Indian, Kerala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Spanish, Italian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Street Food, Desserts&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sushi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thai, Chinese, Japanese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Western, Asian, Cafe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;American, BBQ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;American, Burger, Sandwich&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;American, Fast Food, Burger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;American, Italian, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;American, Seafood, Cajun&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Asian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Asian, European, Seafood&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Asian, Thai, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bakery, Chinese, Fast Food&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bakery, Fast Food, Desserts&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BBQ, Breakfast, Southern&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Beverages, Ice Cream&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Biryani, North Indian, Mughlai&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Breakfast, Diner, Sandwich&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Burger, American&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Burger, Finger Food, Pizza&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cafe, American, Desserts, Italian, Bakery&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cafe, Burger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cafe, Continental, Desserts, Ice Cream, Italian, Beverages&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cafe, Desserts, Bakery&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cafe, French&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cafe, Italian, Fast Food&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cafe, Mexican&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cafe, North Indian, Lebanese, Continental&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Caribbean, Seafood, Steak&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chinese, Continental, Singaporean&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chinese, Japanese, Korean, Asian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chinese, North Indian, Fast Food, Italian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chinese, Seafood&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chinese, Thai, Fast Food&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Coffee and Tea, Desserts, Beverages&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Continental, American, Italian, Seafood, North Indian, Cafe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Continental, Chinese, Italian, Bakery&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Continental, Fast Food, Desserts, Indian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Continental, Italian, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Continental, Mexican, Mediterranean&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Continental, North Indian, Finger Food&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Continental, Thai, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Desserts, Ice Cream, Fast Food&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;European, Asian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;European, Italian, Thai, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fast Food, Beverages, Desserts&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fast Food, Italian, Beverages&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fast Food, North Indian, South Indian, Chinese&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Finger Food&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Finger Food, North Indian, Italian, European, Continental&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gourmet Fast Food, Burger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Healthy Food, Continental&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hyderabadi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indian, Pakistani, Curry&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Italian, Burger, Charcoal Grill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Italian, Continental, Mexican, Cafe, Bakery&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Italian, Lebanese, Mexican&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Italian, North Indian, Desserts&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Japanese, Chinese&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Juices&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kerala, Fast Food&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lebanese, Chinese, Fast Food&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mediterranean, Cafe, European&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexican, American, Italian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mithai&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mithai, North Indian, South Indian, Street Food, Chinese&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Naga, Chinese&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Indian, Asian, Continental&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Indian, Chinese, Continental, Desserts, Fast Food, Sandwich&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Indian, Chinese, Italian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Indian, Chinese, Mughlai, Fast Food&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Indian, Chinese, Thai, Continental&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Indian, Continental, Chinese, South Indian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Indian, European&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Indian, Fast Food, Italian, Asian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Indian, Italian, Chinese, Mexican&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Indian, Mangalorean, Chinese&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Indian, Mughlai, Armenian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Indian, Mughlai, Italian, Chinese&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Indian, South Indian, Asian, Continental&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Indian, South Indian, Fast Food, Street Food, Chinese, Beverages, Mithai&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Indian, Street Food, Fast Food&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Peranakan, Indonesian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pizza, Mexican, Chinese, Italian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Raw Meats, North Indian, Fast Food&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Seafood, Chinese, Japanese, Sushi, Thai&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Seafood, Western&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Indian, Desserts, Beverages&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Indian, Street Food, Chinese&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Street Food, Chinese, Mithai&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Street Food, North Indian, South Indian, Mithai&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thai&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turkish, Arabian, Middle Eastern&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;African, Portuguese&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;American, Breakfast, Greek&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;American, Continental, Italian, North Indian, Asian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;American, Hawaiian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;American, Mexican, Finger Food&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;American, Tex-Mex, Italian, Mexican, North Indian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Asian, Chinese, Thai, Japanese&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Asian, North Indian, Japanese&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Awadhi, Mughlai, North Indian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bakery, Desserts, Fast Food, North Indian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bakery, Pizza&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bengali, Fast Food&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Biryani, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazilian, North Eastern&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;British&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burger, Desserts&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burger, Sandwich, Seafood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cafe, Bakery, American, Italian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cafe, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cafe, Continental, Italian, Mexican, Chinese, American&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cafe, Fast Food, Chinese&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cafe, Italian, Coffee and Tea, Western, Indonesian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cafe, Italian, North Indian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cafe, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cafe, Street Food&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chinese, Cafe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chinese, Healthy Food&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chinese, Mughlai&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chinese, North Indian, Mughlai, Continental&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chinese, Steak&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chinese, Thai, Seafood, Naga&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Continental&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Continental, Burger, American&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Continental, Chinese, Thai, Malaysian, North Indian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Continental, Italian, American&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Continental, Lebanese, Mexican&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Continental, North Indian, Chinese, Cafe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Continental, North Indian, South Indian, Italian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Desserts, Beverages&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Desserts, Sandwich&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European, Continental, North Indian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European, South African, Steak&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fast Food, Chinese, Italian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fast Food, North Indian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fast Food, South Indian, Mithai&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Finger Food, Italian, Middle Eastern&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;German, Ice Cream&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gujarati, Rajasthani&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Healthy Food, Juices, Salad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ice Cream, Beverages, Fast Food&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Indian, Mediterranean, Middle Eastern&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;International, Mediterranean, Sandwich&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Italian, Continental, American&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Italian, Fast Food&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Italian, Mexican, Chinese, Thai, North Indian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Italian, Pizza, Seafood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Japanese, Steak, Sushi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kashmiri, Mughlai&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Latin American&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maharashtrian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mediterranean, Italian, European&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mexican, Lebanese, Italian, Continental, Thai&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mithai, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mithai, Street Food, North Indian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mughlai, Italian, Finger Food, Middle Eastern&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Eastern, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Indian, Biryani, Fast Food, Chinese&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Indian, Chinese, Continental, Rajasthani&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Indian, Chinese, Italian, Thai&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Indian, Chinese, South Indian, Italian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Indian, Continental, Beverages, Italian, Burger, Healthy Food, Mediterranean&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Indian, Continental, Italian, Finger Food&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Indian, Fast Food, Afghani&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Indian, Healthy Food, Rajasthani&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Indian, Italian, Parsi, Asian, Kerala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Indian, Mexican, Italian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Indian, Mughlai, Chinese, Italian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Indian, Mughlai, South Indian, Rajasthani, Street Food&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Indian, South Indian, Chinese, Mithai, Fast Food&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Indian, South Indian, Street Food, Bakery&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pakistani&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pizza, Desserts&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rajasthani&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sandwich, Sushi, Tapas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Seafood, Kiwi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Indian, Chinese&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Indian, North Indian, Chinese, Fast Food&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Steak, BBQ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Street Food, Mithai&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sushi, Teriyaki&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thai, Japanese, Chinese, Indonesian, Vietnamese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;American, Bar Food&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;American, Burger, Fast Food&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;American, European, North Indian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;American, Italian, Chinese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;American, Sandwich, Seafood&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Arabian, Middle Eastern&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Asian, Continental, Italian, North Indian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Asian, Sushi, Vegetarian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bakery, Cafe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bar Food, Seafood, Vegetarian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beverages, Desserts&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Biryani, North Indian, Chinese, Mughlai&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Breakfast, Coffee and Tea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;British, Scottish, Seafood&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burger, Fast Food, Chinese, Bakery&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cafe, American&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cafe, Beverages&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cafe, Continental, Chinese, Italian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cafe, Continental, North Indian, Chinese, Mexican&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cafe, Fast Food, North Indian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cafe, Italian, Desserts&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cafe, Korean, Desserts&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cafe, North Indian, Italian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Caribbean&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chinese, Continental, North Indian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chinese, Italian, North Indian, Mexican, Mediterranean, Thai&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chinese, North Indian, Continental, Italian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chinese, North Indian, Street Food&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chinese, Thai, Burmese, Vietnamese, Tibetan, Japanese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chinese, Tibetan, Japanese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Continental, American, Italian, Mediterranean&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Continental, Chinese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Continental, Fast Food&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Continental, Italian, Mexican&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Continental, Mexican, Fast Food, Chinese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Continental, North Indian, European, Asian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Continental, South African, Beverages, Desserts, Seafood, Grill, Ice Cream, International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Desserts, Fast Food, Ice Cream&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;European, American&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;European, Italian, Desserts&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fast Food, American, Salad, Healthy Food&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fast Food, French&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fast Food, North Indian, Desserts, Ice Cream&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Filipino&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finger Food, North Indian, Continental, Italian, Mediterranean&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Goan, Seafood, Chinese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Healthy Food, American, Burger, Salad&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Healthy Food, Salad&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ice Cream, Fast Food, Beverages&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indian, North Indian, South Indian, Chinese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Italian, American, Lebanese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Italian, Continental, Fast Food, North Indian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Italian, Fusion, Cafe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Italian, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Japanese, American, North Indian, Fast Food&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Japanese, Thai, Italian, Asian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kebab, Turkish Pizza, Dí_ner&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lebanese, Arabian, Middle Eastern&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mediterranean&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mexican&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mexican, Vegetarian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mithai, North Indian, South Indian, Chinese, Street Food, Bakery&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Modern Indian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mughlai, Pakistani, North Indian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Indian, Andhra, Chettinad, Bengali, Mughlai, Chinese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Indian, Chinese, Biryani&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Indian, Chinese, Fast Food, South Indian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Indian, Chinese, Mexican, Lebanese, Italian, Fast Food&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Indian, Chinese, Street Food, Fast Food&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Indian, Continental, Chinese, Japanese, Italian, Thai&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Indian, Continental, South Indian, Chinese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Indian, Fast Food, Chinese, Mithai&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Indian, Italian, Chinese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Indian, Lebanese, Mexican, Asian, Italian, American, European&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Indian, Mithai, South Indian, Street Food, Fast Food&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Indian, Mughlai, Fast Food&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Indian, Seafood, Continental&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Indian, South Indian, Continental, Fast Food&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Indian, Street Food, Chinese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Parsi, Iranian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pizza, Italian, Beverages, Desserts&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Raw Meats, North Indian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Seafood, Asian, Grill, Sushi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Seafood, Steak, Vegetarian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Indian, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Indian, Pizza, Chinese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Street Food, Burger, American, Finger Food, German&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Street Food, North Indian, South Indian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tea, Fast Food&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tibetan, Street Food&quot;</bucket>
            </map>
            <map to='#c11c2f'>
              <bucket>&quot;Ice Cream&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Bakery&quot;</bucket>
            </map>
            <map to='#ce6716'>
              <bucket>&quot;Street Food&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;American, Bar Food, BBQ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;American, Burger, Grill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;American, European, Sandwich&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;American, Italian, Chinese, North Indian, Cafe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;American, Sandwich, Tea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Arabian, North Indian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Asian, Continental, Seafood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Asian, Thai&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bakery, Cafe, Fast Food&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bakery, Fast Food, Beverages&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bar Food, Steak&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Beverages, Fast Food&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Biryani, North Indian, Fast Food&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Breakfast, Coffee and Tea, Modern Australian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;British, Steak&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burger, Fast Food, Desserts, Beverages&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cafe, American, Continental, Armenian, Fast Food&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cafe, Beverages, Desserts, Pizza&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cafe, Continental, Chinese, North Indian, Italian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cafe, Continental, North Indian, Italian, Chinese, Bakery, Desserts, Finger Food&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cafe, Fast Food, Pizza&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cafe, Italian, Desserts, Fast Food, Chinese, Tea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cafe, Lebanese, Italian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cafe, North Indian, Italian, Chinese&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Caribbean, Mexican, Cajun&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chinese, Continental, North Indian, Mexican&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chinese, Japanese&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chinese, North Indian, Continental, Mexican&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chinese, North Indian, Thai&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chinese, Thai, Continental, Fast Food, North Indian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Coffee and Tea, Cuban, Latin American&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Continental, American, Italian, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Continental, Chinese, Biryani, North Indian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Continental, Fast Food, Asian, Italian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Continental, Italian, North Indian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Continental, Mexican, Fast Food, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Continental, North Indian, European, Finger Food&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Continental, South Indian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Desserts, Greek, Sandwich&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;European, American, Street Food&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;European, Italian, Mediterranean&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fast Food, Bakery&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fast Food, Healthy Food&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fast Food, North Indian, Mughlai&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Filipino, Japanese, Asian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Finger Food, North Indian, Italian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Goan, Seafood, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Healthy Food, Beverages&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Healthy Food, Salad, Italian, Continental&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ice Cream, Mithai, North Indian, Street Food&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indian, North Indian, Street Food&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italian, American, Pizza&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italian, Continental, Finger Food&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italian, German, Continental&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italian, North Indian, Chinese, Mughlai&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Japanese, Asian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Japanese, Thai, Sushi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kerala&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lebanese, Arabian, Moroccan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mediterranean, American, Asian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mexican, American&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Middle Eastern, Arabian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mithai, North Indian, South Indian, Fast Food, Street Food, Chinese&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Modern Indian, Asian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mughlai, Street Food&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Indian, Andhra, Mughlai&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Indian, Chinese, Cafe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Indian, Chinese, Fast Food, Street Food&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Indian, Chinese, Mughlai&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Indian, Chinese, Street Food, Mithai&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Indian, Continental, Chinese, Mexican, Italian, Desserts&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Indian, Continental, South Indian, Chinese, Thai, Asian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Indian, Fast Food, Chinese, South Indian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Indian, Italian, Chinese, American&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Indian, Lucknowi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Indian, Mithai, Street Food&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Indian, Mughlai, Fast Food, South Indian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Indian, Seafood, South Indian, Italian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Indian, South Indian, Fast Food&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Indian, Street Food, Chinese, South Indian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Parsi, North Indian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pizza, Italian, Cafe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Raw Meats, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Seafood, Bar Food, Brazilian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Seafood, Sushi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Indian, Chinese, Street Food, Mithai&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Indian, Seafood, Kerala&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Street Food, Burger, Desserts, Italian, Pizza, North Indian, European, Finger Food&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Street Food, North Indian, South Indian, Chinese&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tea, Modern Australian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkish&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;American, BBQ, Burger&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;American, Cafe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;American, Fast Food, Desserts&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;American, Italian, North Indian, Chinese, Lebanese&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;American, Seafood, Italian, Japanese, Thai&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Asian Fusion, Cafe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Asian, Indonesian, Western&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Asian, Thai, Vegetarian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bakery, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bakery, Fast Food, Pizza&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BBQ, Burger, Desserts&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Beverages, International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Biryani, Pizza, Fast Food, Healthy Food&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Breakfast, Diner, Southern&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Burger, American, Beverages&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Burger, German, Sandwich&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cafe, American, Italian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cafe, Burger, Tapas, South African, European, Grill&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cafe, Continental, European, Beverages&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cafe, Desserts, Beverages&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cafe, Grill&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cafe, Italian, Japanese, Continental&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cafe, Mexican, American, Italian, Lebanese, Continental&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cafe, Patisserie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Charcoal Grill, Italian, North Indian, European, Indonesian, Thai&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chinese, Continental, Thai&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chinese, Japanese, Sushi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chinese, North Indian, Fast Food, Street Food&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chinese, Seafood, Asian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chinese, Thai, Japanese&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Coffee and Tea, Mediterranean&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Continental, American, North Indian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Continental, Chinese, Italian, Cafe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Continental, Fast Food, Italian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Continental, Italian, North Indian, Chinese, Lebanese&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Continental, Mexican, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Continental, North Indian, Italian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cuban, Spanish&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Desserts, Ice Cream, North Indian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;European, Asian, Indian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;European, Lebanese, Mediterranean&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fast Food, Biryani&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fast Food, Italian, Chinese&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fast Food, North Indian, South Indian, Chinese, Bakery&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Finger Food, American, Continental, North Indian, Italian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greek&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Healthy Food, Continental, Italian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hyderabadi, Awadhi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indian, Asian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indian, Persian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Italian, Cafe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Italian, Continental, Mexican, Japanese, American, British&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Italian, Lebanese, North Indian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Italian, North Indian, Desserts, Continental&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Japanese, Chinese, Asian, Malaysian, Thai, Vietnamese&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Juices, Beverages&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kerala, Indian, Chinese, Bakery&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanese, Italian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mediterranean, Chinese, Continental&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mexican, American, Tex-Mex&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mithai, Bakery&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mithai, North Indian, Street Food&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mughlai, Afghani&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Naga, Tibetan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Indian, Asian, European&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Indian, Chinese, Continental, Fast Food&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Indian, Chinese, Italian, American, Middle Eastern&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Indian, Chinese, Mughlai, Italian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Indian, Chinese, Thai, Italian, Middle Eastern&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Indian, Continental, European&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Indian, European, Asian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Indian, Fast Food, Italian, Chinese, Cafe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Indian, Italian, Chinese, Thai&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Indian, Mediterranean, Asian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Indian, Mughlai, Asian, Continental&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Indian, Mughlai, Kashmiri&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Indian, South Indian, Bakery, Beverages&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Indian, South Indian, Fast Food, Street Food, Chinese, Desserts, Mithai&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Indian, Street Food, Fast Food, Chinese, South Indian, Mithai&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Persian, Arabian, Lebanese, North Indian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pizza, North Indian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Raw Meats, Street Food&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Seafood, Chinese, Japanese, Vietnamese, Asian, Thai&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singaporean, Australian, German&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Indian, Fast Food&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Indian, Street Food, Desserts&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Street Food, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Street Food, South Indian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thai, Asian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Turkish, Arabian, Moroccan, Lebanese&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;North Indian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;American, BBQ, Seafood&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;American, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;American, Fast Food, Salad, Healthy Food&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;American, Italian, Pizza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;American, Seafood, Steak&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asian, Bakery&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asian, Japanese, Chinese, Thai&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asian, Vegetarian, Vietnamese, Bubble Tea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bakery, Desserts, Bakery&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bakery, French&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BBQ, Caribbean, Cajun&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beverages, Salad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brazilian, Bar Food&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Breakfast, Mexican&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burger, American, Fast Food, Italian, Pizza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burger, Grill&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cafe, American, Italian, Filipino&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cafe, Chinese&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cafe, Continental, Fast Food, Italian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cafe, European&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cafe, Healthy Food, Continental, Italian, Asian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cafe, Italian, Lebanese, Continental, Mediterranean&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cafe, Mexican, Italian, Continental&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cafe, Pizza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chinese, Asian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chinese, Japanese, Thai, Asian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chinese, North Indian, Italian, Continental&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chinese, Seafood, Japanese&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chinese, Thai, Japanese, Tibetan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Coffee and Tea, Sandwich&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Continental, American, Seafood&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Continental, Chinese, Japanese, North Indian, Thai&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Continental, Fast Food, Tea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Continental, Italian, North Indian, Lebanese, Thai&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Continental, Modern Indian, Asian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Continental, North Indian, Italian, Chinese&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Desserts&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Desserts, Italian, Pizza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;European, Asian, North Indian, Italian, Continental, Pizza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;European, Mediterranean, North Indian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fast Food, Cafe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fast Food, Italian, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fast Food, Pizza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Finger Food, Continental, Italian, Chinese&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;French, Continental, North Indian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greek, Lebanese&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Healthy Food, Continental, Juices, Salad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hyderabadi, Biryani, North Indian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Indian, Cafe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Indian, Seafood&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italian, Cafe, Desserts&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italian, Continental, Mexican, North Indian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italian, Mediterranean, Continental, North Indian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italian, Pizza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Japanese, Chinese, Malaysian, Thai, Vietnamese&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Juices, Beverages, Healthy Food&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kerala, South Indian, Chinese, Biryani&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lebanese, Mediterranean, Middle Eastern, Arabian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mediterranean, Continental, Italian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mexican, Fast Food&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mithai, Bakery, Street Food&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mithai, South Indian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mughlai, Chinese&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nepalese&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Indian, Awadhi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Indian, Chinese, Continental, Italian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Indian, Chinese, Italian, Fast Food&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Indian, Chinese, Raw Meats&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Indian, Chinese, Tibetan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Indian, Continental, European, Chinese, Thai&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Indian, European, Chinese&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Indian, Fast Food, Mughlai&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Indian, Italian, Continental, Asian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Indian, Mediterranean, Asian, Chinese&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Indian, Mughlai, Biryani&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Indian, Mughlai, Lebanese, Arabian, Mediterranean&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Indian, South Indian, Bihari&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Indian, South Indian, Fast Food, Street Food, Mithai&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Indian, Street Food, Mughlai&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pizza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pizza, Salad, Finger Food&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Restaurant Cafe, Desserts&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Seafood, Continental, European&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South American&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Indian, Fast Food, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Southern&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Street Food, Continental, Burger, Grill&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Street Food, South Indian, Mithai&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thai, Chinese, Asian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vietnamese&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;American, Asian, Italian, Seafood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;American, Burger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;American, Desserts, Steak&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;American, Italian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;American, Pizza&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Arabian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asian, Chinese, Vegetarian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asian, Sushi, Seafood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bakery, Arabian, Middle Eastern&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bakery, Desserts, Healthy Food&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bar Food, Brazilian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bengali, South Indian, North Indian, Mughlai&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Biryani, Mughlai&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Breakfast, Burger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British, Chinese, Italian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burger, Desserts, Vegetarian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burmese, Chinese, Japanese, Malaysian, Thai&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cafe, Bakery, Parsi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cafe, Coffee and Tea, Western&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cafe, Continental, Mexican, Italian, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cafe, Fast Food, Italian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cafe, Italian, Continental, Fast Food&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cafe, Kiwi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cafe, North Indian, Continental, Chinese&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cafe, Tibetan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chinese, Continental&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chinese, Italian, Continental, North Indian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chinese, North Indian, South Indian, Fast Food&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chinese, Thai, Asian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chinese, Thai, Tibetan, Japanese&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Continental, American, Fast Food&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Continental, Cafe, Italian, Desserts&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Continental, European, Asian, North Indian, Chinese, Italian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Continental, Italian, Fast Food&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Continental, Mexican, American, Italian, North Indian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Continental, North Indian, Chinese, Mediterranean&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Continental, Seafood, Goan, Andhra, Kerala, Thai&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Desserts, Cafe, Mexican&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Desserts, Thai&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;European, International, Tapas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fast Food, American&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fast Food, Desserts&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fast Food, North Indian, Chinese, Desserts&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fast Food, Street Food, South Indian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finger Food, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Goan, Mangalorean, Continental, French&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hawaiian, Seafood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Healthy Food, North Indian, Chinese, Continental&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ice Cream, Desserts, Continental&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Indian, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;International, Tapas, Vegetarian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Italian, Continental, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Italian, French, Bakery, Cafe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Italian, Mexican, Mediterranean&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Italian, Tex-Mex, Continental, North Indian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japanese, Sushi, Teriyaki&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kebab, Desserts, Turkish Pizza&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latin American, Steak&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malaysian, Thai&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mediterranean, Seafood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mexican, Southwestern, Tex-Mex&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mithai, North Indian, South Indian, Chinese, Bakery&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mithai, Street Food&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mithai, Street Food, South Indian, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mughlai, North Indian, Bengali, Continental&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Indian, American, Asian, Biryani&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Indian, Chinese, Fast Food, Cafe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Indian, Chinese, Mexican, Beverages&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Indian, Chinese, South Indian, Street Food, Mithai&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Indian, Continental, Chinese, Italian, Lebanese&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Indian, Continental, Mughlai&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Indian, Fast Food, Chinese, Biryani, Mughlai&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Indian, Italian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Indian, Kashmiri, Mughlai&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Indian, Mithai, Chinese&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Indian, Mughlai, Chinese, South Indian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Indian, Rajasthani, Gujarati&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Indian, South Indian, Chinese, Street Food, Fast Food, Mithai&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Indian, Spanish, Mediterranean&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pakistani, Indian, Afghani, Curry&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pizza, Grill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Raw Meats&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Seafood, American&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Seafood, South Indian, Andhra, Hyderabadi, Goan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Indian, Chinese, Fast Food, Mithai&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Indian, North Indian, Fast Food&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Street Food, North Indian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tibetan, Fast Food&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;North Indian, Mughlai&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;American&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;American, Breakfast, Hawaiian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;American, Continental, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;American, Ice Cream, Desserts&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;American, Mexican, Seafood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Andhra&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Asian, Chinese, Thai, Malaysian, Indonesian, Burmese&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Asian, North Indian, Mughlai&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Awadhi, North Indian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakery, Desserts, Fast Food, Pizza, Burger, Continental&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakery, Sandwich, Brazilian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bengali, North Indian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Biryani, Hyderabadi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazilian, Seafood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;British, Bar Food, Sandwich&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burger, Desserts, Bar Food&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burger, Seafood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cafe, Bakery, Desserts&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cafe, Chinese, Thai, North Indian, Continental&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cafe, Continental, Italian, North Indian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cafe, Fast Food, Continental&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cafe, Italian, Continental&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cafe, Italian, Pizza&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cafe, North Indian, Chinese, Continental&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cafe, Tapas, South African, Beverages, Healthy Food, Desserts, Spanish&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chinese, Cafe, Fast Food&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chinese, Indian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chinese, Mughlai, North Indian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chinese, North Indian, Mughlai, Pizza&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chinese, Street Food&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chinese, Thai, Seafood, North Indian, Italian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Continental, American&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Continental, Burger, Pizza, North Indian, European, Finger Food&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Continental, Chinese, Thai, Mediterranean&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Continental, Italian, American, North Indian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Continental, Mediterranean, Italian, North Indian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Continental, North Indian, Chinese, European, Asian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Continental, North Indian, Thai, Chinese&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Desserts, Beverages, Juices&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Desserts, Sandwich, Ice Cream&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;European, Continental, Pizza&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;European, Spanish&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fast Food, Chinese, Mithai, Street Food&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fast Food, North Indian, Bakery&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fast Food, Street Food&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finger Food, Italian, North Indian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Goan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gujarati, Rajasthani, North Indian, Fast Food&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Healthy Food, Juices, Salad, Italian, Continental&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Indian, Middle Eastern&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;International, Pizza&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italian, Continental, Cafe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italian, Fast Food, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italian, Mexican, Continental&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italian, Pizza, Vegetarian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Japanese, Sushi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kashmiri, North Indian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Latin American, Italian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malaysian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mediterranean, Italian, Thai, European&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mexican, North Indian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mithai, North Indian, Chinese, Street Food&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mithai, Street Food, North Indian, South Indian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mughlai, Lucknowi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Indian, Biryani, Mughlai&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Indian, Chinese, Continental, Seafood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Indian, Chinese, Kashmiri&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Indian, Chinese, South Indian, Mithai&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Indian, Continental, Chinese&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Indian, Continental, Italian, Thai, Chinese&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Indian, Fast Food, Bihari&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Indian, Hyderabadi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Indian, Japanese, Italian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Indian, Mexican, Italian, Continental&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Indian, Mughlai, Chinese, Mangalorean&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Indian, North Eastern, Continental&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Indian, South Indian, Chinese, Mughlai&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Indian, South Indian, Street Food, Chinese, Fast Food, Mithai&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pakistani, Afghani, Indian, Hyderabadi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rajasthani, Gujarati, Mughlai&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Scottish, Cafe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Seafood, Mediterranean&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Indian, Chinese, Continental&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Indian, North Indian, Chinese, Fast Food, Street Food, Mithai&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Steak, Scottish, British&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Street Food, Mithai, North Indian, South Indian, Chinese&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sushi, Thai&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tibetan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Afghani, Mughlai, Chinese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;American, Breakfast&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;American, Coffee and Tea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;American, French&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;American, Japanese, Sushi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;American, Southern, Southwestern&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asian, Chinese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asian, Latin American, Vegetarian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Assamese, Chinese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bakery, Desserts, Chinese, Fast Food&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bakery, Fast Food&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bakery, Italian, Fast Food, Chinese, Continental&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BBQ, Sandwich&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bihari&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brazilian, Grill&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Breakfast, Pizza&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burger, Bar Food, Southern&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burger, Pizza&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cafe, American, Tea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cafe, Chinese, Fast Food&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cafe, Continental, Italian, Chinese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cafe, Fast Food, American&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cafe, Italian, Bakery&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cafe, Italian, Mexican, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cafe, Mexican, Italian, North Indian, Fast Food&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cafe, Sandwich, Southern&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chinese, Assamese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chinese, Fast Food, North Indian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chinese, Mangalorean&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chinese, North Indian, Italian, Mexican&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chinese, Seafood, Vegetarian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chinese, Thai, North Indian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Contemporary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Continental, Asian, Italian, Mediterranean, Burger&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Continental, Chinese, North Indian, Healthy Food&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Continental, Goan, Seafood, North Indian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Continental, Italian, Thai, Finger Food&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Continental, North Indian, Asian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Continental, North Indian, Mughlai, Burmese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Desserts, Bakery, Fast Food&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Desserts, Mithai&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;European, Chinese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;European, North Indian, Continental, Italian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fast Food, Chinese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fast Food, Mexican, Tex-Mex&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fast Food, Seafood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Finger Food, Continental, North Indian, Italian, Chinese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;French, Kiwi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greek, Mediterranean, Vegetarian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Healthy Food, Fast Food&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hyderabadi, North Indian, Biryani&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indian, Continental&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indonesian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Italian, Chinese, Fast Food, North Indian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Italian, Continental, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Italian, Mexican&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Italian, Pizza, Cafe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Japanese, French&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Juices, Healthy Food&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Korean&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lucknowi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mediterranean, European, American, North Indian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mexican, Italian, American&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mithai, Chinese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mithai, South Indian, Street Food&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mughlai, Continental, Chinese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New American, Tapas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Indian, Biryani&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Indian, Chinese, Continental, Italian, Mexican, Lebanese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Indian, Chinese, Italian, Mediterranean&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Indian, Chinese, South Indian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Indian, Continental&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Indian, Continental, Goan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Indian, European, Mediterranean&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Indian, Finger Food&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Indian, Italian, Finger Food&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Indian, Mediterranean, Chinese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Indian, Mughlai, Chinese, Bakery&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Indian, Mughlai, Nepalese, Tibetan, Korean&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Indian, South Indian, Chinese, Fast Food, Bakery, Mithai&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Indian, South Indian, Italian, Continental, Mediterranean, Lebanese, Desserts&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Indian, Thai, Continental&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pizza, Burger, Fast Food&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pizza, Seafood, Steak&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Salad, Healthy Food, Burger, Italian, Continental, Chinese, North Indian, Beverages&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seafood, Filipino, Asian, European&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Indian, Biryani&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Indian, Nepalese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spanish, Tapas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Street Food, Fast Food&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sushi, Asian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thai, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Western, Fusion, Fast Food&quot;</bucket>
            </map>
            <map to='#f56580'>
              <bucket>&quot;Bakery, Desserts&quot;</bucket>
            </map>
            <map to='#f5c062'>
              <bucket>&quot;Ice Cream, Desserts&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;American, Bar Food, Sandwich&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;American, Burger, Pizza, Cafe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;American, Fast Food&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;American, Italian, Mughlai, North Indian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;American, Seafood&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Argentine, American&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Asian, European&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Asian, Thai, Chinese&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bakery, Chinese&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bakery, Fast Food, Chinese&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BBQ&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Beverages, Healthy Food&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Biryani, North Indian, Hyderabadi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Breakfast, Diner&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burger&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burger, Fast Food, Grill&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cafe, American, Continental, Nepalese&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cafe, British&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cafe, Continental, Desserts&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cafe, Desserts&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cafe, Fast Food, Street Food&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cafe, Italian, European, Bakery&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cafe, Mediterranean&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cafe, North Indian, Italian, Japanese, Fast Food&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Caribbean, Seafood&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chinese, Continental, North Indian, Mughlai&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chinese, Japanese, Italian, Seafood&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chinese, North Indian, Fast Food&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chinese, Pizza&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chinese, Thai, Continental, North Indian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Coffee and Tea, Desserts&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Continental, American, Italian, North Indian, Chinese, Cafe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Continental, Chinese, Fast Food&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Continental, Fast Food, Chinese, Charcoal Grill, Mexican&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Continental, Italian, North Indian, American&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Continental, Mexican, Italian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Continental, North Indian, Fast Food, Street Food, South Indian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Continental, Tex-Mex&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Desserts, Ice Cream&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;European, Arabian, Japanese, Bakery, Desserts&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;European, Italian, North Indian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fast Food, Beverages&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fast Food, Italian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fast Food, North Indian, South Indian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Filipino, Mexican&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finger Food, North Indian, Italian, Continental, Thai, South Indian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Goan, Seafood, North Indian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Healthy Food, Cafe, Desserts, Italian, Bakery&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Healthy Food, Seafood, Beverages, Belgian, Contemporary, Desserts, Finger Food, International&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ice Cream, Street Food&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indian, Pakistani&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Italian, Bakery, Continental&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Italian, Continental, Goan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Italian, Lebanese, Fast Food, Bakery&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Italian, North Indian, Continental&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Japanese, Asian, Seafood, Sushi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Japanese, Tibetan, Vietnamese, Korean&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kerala, Biryani&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lebanese, Chinese&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mediterranean, Asian, Continental, North Indian, Arabian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mexican, American, Healthy Food&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Middle Eastern, Mediterranean, North Indian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mithai, North Indian, South Indian, Street Food&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Modern Indian, North Indian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Naga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Indian, Asian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Indian, Chinese, Continental&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Indian, Chinese, Finger Food&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Indian, Chinese, Mughlai, Continental&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Indian, Chinese, Thai&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Indian, Continental, Chinese, Seafood&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Indian, Continental, Thai, Chinese&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Indian, Fast Food, Continental&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Indian, Italian, Chinese, Fast Food&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Indian, Maharashtrian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Indian, Mughlai, Hyderabadi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Indian, South Indian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Indian, South Indian, Fast Food, Street Food, Chinese, Beverages, Desserts, Mithai&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Indian, Street Food, Chinese, South Indian, Mithai&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Patisserie, Coffee and Tea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pizza, Italian, Fast Food&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Raw Meats, North Indian, Chinese, Fast Food&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seafood, Chinese&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seafood, Tapas, Bar Food&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Indian, Desserts&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Indian, Street Food&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Street Food, Chinese&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Street Food, North Indian, South Indian, Chinese, Mithai&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tex-Mex, American&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turkish Pizza&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;North Indian, Fast Food&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;American, Asian, North Indian, Mexican, South Indian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;American, Burger, Cafe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;American, Diner, Southern&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;American, Italian, Bakery, Deli, Burger, Sandwich, Pizza&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;American, Pizza, Bar Food&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Arabian, Lebanese&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asian, Continental&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asian, Sushi, Tapas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bakery, Beverages&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bakery, Desserts, Ice Cream&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bar Food, Modern Australian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Beverages&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Biryani, Mughlai, Bengali, North Indian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Breakfast, Burger, Sandwich&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British, Contemporary&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burger, Fast Food&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burmese, Chinese, Thai&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cafe, Bakery, Tea, Vegetarian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cafe, Continental&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cafe, Continental, North Indian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cafe, Fast Food, Italian, Chinese&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cafe, Italian, Continental, Mexican&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cafe, Kiwi, Ice Cream, Desserts&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cafe, North Indian, Continental, Italian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cafe, Western&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chinese, Continental, Italian, North Indian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chinese, Italian, Fast Food&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chinese, North Indian, Cafe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chinese, North Indian, South Indian, Healthy Food&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chinese, Thai, Asian, Japanese, Korean, Seafood&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chinese, Tibetan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Continental, American, Italian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Continental, Cafe, Italian, Pizza, North Indian, Chinese, Bakery, Mughlai&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Continental, European, North Indian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Continental, Italian, Mediterranean&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Continental, Mexican, Beverages, Desserts, North Indian, Chinese, Rajasthani&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Continental, North Indian, Chinese, Mughlai, Asian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Continental, Seafood, North Indian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Desserts, Fast Food&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Drinks Only&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;European, Italian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fast Food, American, Burger&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fast Food, Desserts, Beverages&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fast Food, North Indian, Chinese, Desserts, Ice Cream&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fast Food, Tea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finger Food, North Indian, Continental, Chinese, Italian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Goan, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hawaiian, Seafood, Steak&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Healthy Food, North Indian, Continental&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ice Cream, Desserts, Fast Food&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indian, North Indian, Curry, Cafe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Irish&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Italian, Continental, European, Cafe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Italian, French, Cafe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Italian, Mexican, Spanish, Thai, Vietnamese, Indonesian, American&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Italian, World Cuisine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Japanese, Sushi, Thai&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kebab, Izgara&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanese&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malaysian, Thai, Kerala, Vietnamese, Sri Lankan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mediterranean, Tapas, Vegetarian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mexican, Spanish&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mithai, North Indian, South Indian, Chinese, Fast Food&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Modern Australian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mughlai, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Indian, American, Chinese&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Indian, Chinese, Arabian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Indian, Chinese, Fast Food, Desserts&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Indian, Chinese, Mexican, Italian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Indian, Chinese, Sri Lankan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Indian, Continental, Chinese, Italian, Mexican&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Indian, Continental, Mughlai, Asian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Indian, Fast Food, Chinese, Continental&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Indian, Italian, Asian, American&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Indian, Kerala, Chinese, Continental&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Indian, Mithai, Chinese, Street Food&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Indian, Mughlai, Continental&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Indian, Seafood&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Indian, South Indian, Chinese, Street Food, Fast Food, Mithai, Desserts&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Indian, Street Food&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pakistani, Indian, Mughlai&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pizza, Ice Cream&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Raw Meats, Fast Food&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seafood, American, Mediterranean, Japanese&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seafood, Southern&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Indian, Chinese, Mithai&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Indian, North Indian, Street Food&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Street Food, Bakery&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Street Food, North Indian, Chinese, Continental&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tea, Beverages, Fast Food&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tibetan, Nepalese&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Afghani, North Indian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American, Breakfast, Burger&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American, Continental, Burger&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American, Greek&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American, Mediterranean, Seafood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American, Steak&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Asian, Chinese, Japanese&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Asian, Mediterranean, North Indian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Australian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bakery, Desserts, Fast Food&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bakery, Mithai&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BBQ, Southern&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bihari, Lucknowi, North Indian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brazilian, Healthy Food, Juices, Pizza&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Breakfast, Sandwich&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burger, Bar Food, Steak&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burger, Pizza, Biryani&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cafe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cafe, Asian, Italian, North Indian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cafe, Chinese, Fast Food, Italian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cafe, Continental, Italian, Chinese, North Indian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cafe, Fast Food, Asian, Italian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cafe, Italian, Chinese&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cafe, Italian, Mexican, Continental&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cafe, Mughlai, North Indian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cafe, South Indian, North Indian, Bakery&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chinese, Bakery&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chinese, Fast Food, North Indian, South Indian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chinese, Mexican, Fast Food, Continental&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chinese, North Indian, Italian, Mughlai&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chinese, South Indian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chinese, Thai, North Indian, Japanese&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Contemporary, Burger, European&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Continental, Asian, North Indian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Continental, Chinese, North Indian, Indian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Continental, Healthy Food&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Continental, Juices, Cafe, Desserts, Salad, Italian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Continental, North Indian, Chinese&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Continental, North Indian, Mughlai, Chinese&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Desserts, Bakery, Pizza, Burger, Continental&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Desserts, North Indian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;European, Chinese, North Indian, Italian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;European, North Indian, Mediterranean, American&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fast Food, Chinese, Bakery&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fast Food, Mithai, Bakery&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fast Food, South Indian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Finger Food, European&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;French, Mediterranean, European&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grill, Burger&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Healthy Food, Fast Food, Salad&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indian, Curry&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italian, Chinese, Mexican, Thai, North Indian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italian, Deli&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italian, Mexican, American, Mediterranean&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italian, Pizza, Fast Food&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Japanese, Korean&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kashmiri&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Korean, Beverages, Desserts&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lucknowi, Biryani&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mediterranean, Italian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexican, Italian, Fast Food&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mithai, Chinese, Street Food&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mughlai, Fast Food&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Eastern&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Indian, Biryani, Chinese&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Indian, Chinese, Continental, Mediterranean, Asian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Indian, Chinese, Italian, Mexican&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Indian, Chinese, South Indian, Bakery&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Indian, Continental, Asian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Indian, Continental, Italian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Indian, European, Mediterranean, Asian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Indian, Finger Food, Italian, Chinese&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Indian, Italian, Mexican&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Indian, Mediterranean, Continental&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Indian, Mughlai, Chinese, Continental&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Indian, Mughlai, Seafood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Indian, South Indian, Chinese, Fast Food, Mithai&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Indian, South Indian, Mithai&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Indian, Thai, Italian, Chinese, Mexican&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pizza, Cafe, Italian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Portuguese, African&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sandwich&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seafood, French&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Indian, Chettinad&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Indian, North Indian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sri Lankan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Street Food, Fast Food, Beverages&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sushi, Japanese&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thai, Chinese, Seafood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;World Cuisine&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Countryname:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Srilanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Has_Table_booking:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;No&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yes&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Has_Online_delivery:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;No&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yes&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Copy of main' id='Copy of main_0E55014CB3864729AF5644CD95E6E5ED'>
            <properties context=''>
              <relation connection='excel-direct.1ggh8hd0g8gufe1bt2sai0yks0er' name='Copy of main' table='[&apos;Copy of main$&apos;]' type='table'>
                <columns gridOrigin='A1:W9552:no:A1:W9552:0' header='yes' outcome='2'>
                  <column datatype='integer' name='RestaurantID' ordinal='0' />
                  <column datatype='string' name='RestaurantName' ordinal='1' />
                  <column datatype='integer' name='CountryCode' ordinal='2' />
                  <column datatype='string' name='City' ordinal='3' />
                  <column datatype='string' name='Address' ordinal='4' />
                  <column datatype='string' name='Locality' ordinal='5' />
                  <column datatype='string' name='LocalityVerbose' ordinal='6' />
                  <column datatype='real' name='Longitude' ordinal='7' />
                  <column datatype='real' name='Latitude' ordinal='8' />
                  <column datatype='string' name='Cuisines' ordinal='9' />
                  <column datatype='string' name='Currency' ordinal='10' />
                  <column datatype='string' name='Has_Table_booking' ordinal='11' />
                  <column datatype='string' name='Has_Online_delivery' ordinal='12' />
                  <column datatype='string' name='Is_delivering_now' ordinal='13' />
                  <column datatype='string' name='Switch_to_order_menu' ordinal='14' />
                  <column datatype='integer' name='Price_range' ordinal='15' />
                  <column datatype='integer' name='Votes' ordinal='16' />
                  <column datatype='integer' name='Average_Cost_for_two' ordinal='17' />
                  <column datatype='real' name='USD_conversion' ordinal='18' />
                  <column datatype='string' name='bucket_avg_cost' ordinal='19' />
                  <column datatype='real' name='Rating' ordinal='20' />
                  <column datatype='string' name='Avg_rating' ordinal='21' />
                  <column datatype='string' name='Datekey_Opening' ordinal='22' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Q1.1-Country map' id='Q1.1-Country map_9F2981E3714B4E6DB8099E0B9947FE13'>
            <properties context=''>
              <relation connection='excel-direct.1ggh8hd0g8gufe1bt2sai0yks0er' name='Q1.1-Country map' table='[&apos;Q1#1-Country map$&apos;]' type='table'>
                <columns gridOrigin='A1:D16:no:A1:D16:0' header='yes' outcome='6'>
                  <column datatype='integer' name='CountryCode' ordinal='0' />
                  <column datatype='real' name='Longitude' ordinal='1' />
                  <column datatype='real' name='Latitude' ordinal='2' />
                  <column datatype='string' name='Country Name' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Q1.2-Currency map' id='Q1.2-Currency map_0FB038307DF848AAAFFA9D2B1FE1F676'>
            <properties context=''>
              <relation connection='excel-direct.1ggh8hd0g8gufe1bt2sai0yks0er' name='Q1.2-Currency map' table='[&apos;Q1#2-Currency map$&apos;]' type='table'>
                <columns gridOrigin='A1:E16:no:A1:E16:0' header='yes' outcome='6'>
                  <column datatype='integer' name='CountryCode' ordinal='0' />
                  <column datatype='string' name='Countryname' ordinal='1' />
                  <column datatype='string' name='Currency' ordinal='2' />
                  <column datatype='real' name='1_INR' ordinal='3' />
                  <column datatype='real' name='1_usd' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Q2-Calendar Table' id='Q2-Calendar Table_D1871838FFFB47ADA4BA21DF19C3C605'>
            <properties context=''>
              <relation connection='excel-direct.1ggh8hd0g8gufe1bt2sai0yks0er' name='Q2-Calendar Table' table='[&apos;Q2-Calendar Table$&apos;]' type='table'>
                <columns gridOrigin='A1:M9552:no:A1:M9552:0' header='yes' outcome='6'>
                  <column datatype='string' name='Datekey_Opening' ordinal='0' />
                  <column datatype='string' name='Date' ordinal='1' />
                  <column datatype='integer' name='Year' ordinal='2' />
                  <column datatype='integer' name='monthno' ordinal='3' />
                  <column datatype='string' name='monthname' ordinal='4' />
                  <column datatype='integer' name='Quarter' ordinal='5' />
                  <column datatype='string' name='YYYY-mmm' ordinal='6' />
                  <column datatype='integer' name='Weekno' ordinal='7' />
                  <column datatype='integer' name='Weekdayno' ordinal='8' />
                  <column datatype='string' name='Weekdayname' ordinal='9' />
                  <column datatype='string' name='Finac Month' ordinal='10' />
                  <column datatype='integer' name='Finan Qtr' ordinal='11' />
                  <column datatype='string' name='Weekend' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[CountryCode]' />
              <expression op='[CountryCode (Q1.1-Country map)]' />
            </expression>
            <first-end-point object-id='Copy of main_0E55014CB3864729AF5644CD95E6E5ED' />
            <second-end-point object-id='Q1.1-Country map_9F2981E3714B4E6DB8099E0B9947FE13' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[CountryCode]' />
              <expression op='[CountryCode (Q1.2-Currency map)]' />
            </expression>
            <first-end-point object-id='Copy of main_0E55014CB3864729AF5644CD95E6E5ED' />
            <second-end-point object-id='Q1.2-Currency map_0FB038307DF848AAAFFA9D2B1FE1F676' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Datekey_Opening]' />
              <expression op='[Datekey_Opening (Q2-Calendar Table)]' />
            </expression>
            <first-end-point object-id='Copy of main_0E55014CB3864729AF5644CD95E6E5ED' />
            <second-end-point object-id='Q2-Calendar Table_D1871838FFFB47ADA4BA21DF19C3C605' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Country Slicer' name='[Action1_15B19803771B4F7C9213EA0A6284EF87]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Country Slicer' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Country Slicer,Average Cost for 2 Slicer,Year Slicer' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Avg Cost for 2 Slicer' name='[Action2_E31DDA001ACC4B48ACBC1CCAB83A6B39]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Average Cost for 2 Slicer' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Country Slicer,Average Cost for 2 Slicer,Year Slicer' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Year Slicer' name='[Action3_F969517EE6C64CC69D22A230B309CB7D]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Year Slicer' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Country Slicer,Average Cost for 2 Slicer,Year Slicer' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Country Slicer 1' name='[Action4_34B6EFEE899A419792476529B24FC769]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1 (2)' type='sheet' worksheet='Country Slicer' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Country Slicer,Year Slicer' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1 (2)' />
      </command>
    </action>
    <action caption='Year Slicer 1' name='[Action6_3CA8F95509DA44B0B206D83F9F91EF45]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1 (2)' type='sheet' worksheet='Year Slicer' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Country Slicer,Year Slicer' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1 (2)' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action6_75D2E22BB84340609785853A55D6F768]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1 (2)' type='sheet' worksheet='Q6' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1 (2)' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action7_6BD1277BFB0C480FB0D03D7716C44F2A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Q4.1' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Average Cost for 2 Slicer'>
      <table>
        <view>
          <datasources>
            <datasource caption='Zomato analysis (Final)' name='federated.0r4rb7e0d8z1kb14xzf160m5w5mt' />
          </datasources>
          <datasource-dependencies datasource='federated.0r4rb7e0d8z1kb14xzf160m5w5mt'>
            <column caption='Bucket Avg Cost' datatype='string' name='[bucket_avg_cost]' role='dimension' type='nominal' />
            <column-instance column='[bucket_avg_cost]' derivation='None' name='[none:bucket_avg_cost:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='5' />
            <format attr='height' field='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:bucket_avg_cost:nk]' value='56' />
            <format attr='border-width' value='3' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
            <format attr='color' value='#b4b4b4' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='12' />
            <format attr='width' field='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:bucket_avg_cost:nk]' value='70' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='border-color' value='#000000' />
            <format attr='band-color' scope='cols' value='#b4b4b4' />
            <format attr='background-color' value='#40d0d0' />
            <format attr='band-color' scope='rows' value='#40d0d0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' scope='rows' value='center' />
            <format attr='vertical-align' scope='rows' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='border-color' value='#000000' />
            <format attr='band-color' scope='cols' value='#b4b4b4' />
            <format attr='background-color' value='#40d0d0' />
            <format attr='band-color' scope='rows' value='#40d0d0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
            <format attr='band-size' scope='rows' value='5' />
            <format attr='band-size' scope='cols' value='5' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
            <format attr='font-family' value='Tableau Bold' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='4' />
            <format attr='stroke-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-size' scope='rows' value='2' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:bucket_avg_cost:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{2D8DCB85-A695-42E2-A85C-E598A19AF9A1}' />
    </worksheet>
    <worksheet name='Country Slicer'>
      <table>
        <view>
          <datasources>
            <datasource caption='Zomato analysis (Final)' name='federated.0r4rb7e0d8z1kb14xzf160m5w5mt' />
          </datasources>
          <datasource-dependencies datasource='federated.0r4rb7e0d8z1kb14xzf160m5w5mt'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='None' caption='USD conversion (bin)' datatype='integer' name='[USD conversion (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[USD_conversion]' peg='0' size='50' />
            </column>
            <column caption='USD conversion' datatype='real' name='[USD_conversion]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (USD conversion (bin))]'>
            <groupfilter function='level-members' level='[USD conversion (bin)]' user:ui-action-filter='[Action6_75D2E22BB84340609785853A55D6F768]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (USD conversion (bin))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='86' />
            <format attr='height' value='5' />
            <format attr='width' field='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Country Name:nk]' value='64' />
            <format attr='text-align' data-class='total' scope='cols' value='center' />
            <format attr='vertical-align' data-class='total' scope='cols' value='center' />
            <format attr='border-style' scope='cols' value='solid' />
            <format attr='border-color' scope='rows' value='#000000' />
            <format attr='border-width' scope='rows' value='0' />
            <format attr='border-style' scope='rows' value='none' />
            <format attr='border-width' scope='cols' value='3' />
            <format attr='color' value='#666666' />
            <format attr='border-color' scope='cols' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width-header' value='34' />
            <format attr='border-style' scope='cols' value='solid' />
            <format attr='border-color' scope='cols' value='#000000' />
            <format attr='border-width' scope='cols' value='3' />
            <format attr='border-width' scope='rows' value='0' />
            <format attr='border-style' scope='rows' value='none' />
            <format attr='border-width' data-class='subtotal' scope='rows' value='0' />
            <format attr='border-style' data-class='subtotal' scope='rows' value='none' />
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='background-color' value='#666666' />
            <format attr='band-color' scope='rows' value='#666666' />
          </style-rule>
          <style-rule element='label'>
            <format attr='vertical-align' scope='cols' value='center' />
            <format attr='text-align' scope='cols' value='center' />
            <format attr='font-family' scope='cols' value='Tableau Bold' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='wrap' scope='cols' value='auto' />
            <format attr='text-orientation' scope='cols' value='0' />
            <format attr='color' scope='rows' value='#666666' />
            <format attr='color' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' scope='cols' value='solid' />
            <format attr='border-width' scope='cols' value='4' />
            <format attr='border-color' scope='cols' value='#000000' />
            <format attr='border-color' scope='rows' value='#000000' />
            <format attr='border-width' scope='rows' value='0' />
            <format attr='border-style' scope='rows' value='none' />
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='background-color' value='#666666' />
            <format attr='band-color' scope='rows' value='#666666' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
            <format attr='band-size' scope='rows' value='5' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='5' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-size' scope='rows' value='3' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='3' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e6e6e6' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{402D47DB-9B65-4B30-824F-FF4164A9A2C2}' />
    </worksheet>
    <worksheet name='Q1.1 - Maps'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='10' underline='true'>Country Map</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Zomato analysis (Final)' name='federated.0r4rb7e0d8z1kb14xzf160m5w5mt' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0r4rb7e0d8z1kb14xzf160m5w5mt'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Countryname]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='None' caption='USD conversion (bin)' datatype='integer' name='[USD conversion (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[USD_conversion]' peg='0' size='50' />
            </column>
            <column caption='USD conversion' datatype='real' name='[USD_conversion]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column caption='Bucket Avg Cost' datatype='string' name='[bucket_avg_cost]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Countryname]' derivation='None' name='[none:Countryname:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Bucket Avg Cost)]'>
            <groupfilter function='level-members' level='[bucket_avg_cost]' user:ui-action-filter='[Action5_8326C0D723044EE88704BC0666281064]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Country Name)]'>
            <groupfilter function='level-members' level='[Country Name]' user:ui-action-filter='[Action4_34B6EFEE899A419792476529B24FC769]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (USD conversion (bin))]'>
            <groupfilter function='level-members' level='[USD conversion (bin)]' user:ui-action-filter='[Action6_75D2E22BB84340609785853A55D6F768]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-action-filter='[Action6_3CA8F95509DA44B0B206D83F9F91EF45]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Year)]</column>
            <column>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Bucket Avg Cost)]</column>
            <column>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Country Name)]</column>
            <column>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (USD conversion (bin))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Longitude (generated)]' field-type='quantitative' max='24318368.229012039' min='-17437627.209252872' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Latitude (generated)]' field-type='quantitative' max='13774709.422677398' min='-2190818.5377005138' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Countryname:nk]' />
              <text column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Countryname:nk]' />
              <text column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Latitude (generated)]</rows>
        <cols>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{46B02DAF-747E-485A-94B8-5F34B2A1DCB8}' />
    </worksheet>
    <worksheet name='Q1.1 - Table'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='20' underline='true'>Country Table</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Zomato analysis (Final)' name='federated.0r4rb7e0d8z1kb14xzf160m5w5mt' />
          </datasources>
          <datasource-dependencies datasource='federated.0r4rb7e0d8z1kb14xzf160m5w5mt'>
            <column datatype='integer' name='[CountryCode (Q1.2-Currency map)]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Countryname]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[CountryCode (Q1.2-Currency map)]' derivation='None' name='[none:CountryCode (Q1.2-Currency map):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Countryname]' derivation='None' name='[none:Countryname:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:CountryCode (Q1.2-Currency map):ok] / [federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Countryname:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{598413EC-5230-4163-903A-4BEF6C1550E7}' />
    </worksheet>
    <worksheet name='Q1.2 - Table'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='20' underline='true'>Currency Table</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Zomato analysis (Final)' name='federated.0r4rb7e0d8z1kb14xzf160m5w5mt' />
          </datasources>
          <datasource-dependencies datasource='federated.0r4rb7e0d8z1kb14xzf160m5w5mt'>
            <column caption='1 Inr' datatype='real' name='[1_INR]' role='measure' type='quantitative' />
            <column caption='1 Usd' datatype='real' name='[1_usd]' role='measure' type='quantitative' />
            <column datatype='integer' name='[CountryCode (Q1.2-Currency map)]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Countryname]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Currency (Q1.2-Currency map)]' role='dimension' type='nominal' />
            <column-instance column='[CountryCode (Q1.2-Currency map)]' derivation='None' name='[none:CountryCode (Q1.2-Currency map):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Countryname]' derivation='None' name='[none:Countryname:nk]' pivot='key' type='nominal' />
            <column-instance column='[Currency (Q1.2-Currency map)]' derivation='None' name='[none:Currency (Q1.2-Currency map):nk]' pivot='key' type='nominal' />
            <column-instance column='[1_INR]' derivation='Sum' name='[sum:1_INR:ok]' pivot='key' type='ordinal' />
            <column-instance column='[1_usd]' derivation='Sum' name='[sum:1_usd:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <natural-sort column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:CountryCode (Q1.2-Currency map):ok]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='5' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:CountryCode (Q1.2-Currency map):ok] / ([federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Countryname:nk] / ([federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Currency (Q1.2-Currency map):nk] / ([federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[sum:1_INR:ok] / [federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[sum:1_usd:ok]))))</rows>
        <cols />
      </table>
      <simple-id uuid='{F26EACA0-49CB-4248-A780-3FBD8C23A192}' />
    </worksheet>
    <worksheet name='Q2 - Table'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='20' underline='true'>Calendar Table</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Zomato analysis (Final)' name='federated.0r4rb7e0d8z1kb14xzf160m5w5mt' />
          </datasources>
          <datasource-dependencies datasource='federated.0r4rb7e0d8z1kb14xzf160m5w5mt'>
            <column datatype='string' name='[Date]' role='dimension' type='nominal' />
            <column datatype='string' name='[Finac Month]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Finan Qtr]' role='dimension' type='quantitative' />
            <column datatype='integer' name='[Quarter]' role='dimension' type='quantitative' />
            <column datatype='string' name='[Weekdayname]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Weekdayno]' role='measure' type='quantitative' />
            <column datatype='string' name='[YYYY-mmm]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Weekdayno]' derivation='Avg' name='[avg:Weekdayno:ok]' pivot='key' type='ordinal' />
            <column-instance column='[monthno]' derivation='Avg' name='[avg:monthno:ok]' pivot='key' type='ordinal' />
            <column caption='Monthname' datatype='string' name='[monthname]' role='dimension' type='nominal' />
            <column caption='Monthno' datatype='integer' name='[monthno]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finac Month]' derivation='None' name='[none:Finac Month:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finan Qtr]' derivation='None' name='[none:Finan Qtr:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Quarter]' derivation='None' name='[none:Quarter:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Weekdayname]' derivation='None' name='[none:Weekdayname:nk]' pivot='key' type='nominal' />
            <column-instance column='[YYYY-mmm]' derivation='None' name='[none:YYYY-mmm:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[monthname]' derivation='None' name='[none:monthname:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Year:ok] / ([federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[avg:monthno:ok] / ([federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:monthname:nk] / ([federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Quarter:ok] / ([federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:YYYY-mmm:nk] / ([federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Date:nk] / ([federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[avg:Weekdayno:ok] / ([federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Weekdayname:nk] / ([federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Finac Month:nk] / [federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Finan Qtr:ok])))))))))</rows>
        <cols />
        <table-calculations>
          <partitionable-measures>
            <column>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[sum:Calculation_1184446719096381441:ok]</column>
          </partitionable-measures>
        </table-calculations>
      </table>
      <simple-id uuid='{98717E71-5ABE-4EF2-8D95-486E4E7691F9}' />
    </worksheet>
    <worksheet name='Q3.1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='10' underline='true'>Restaurant By City</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Zomato analysis (Final)' name='federated.0r4rb7e0d8z1kb14xzf160m5w5mt' />
          </datasources>
          <datasource-dependencies datasource='federated.0r4rb7e0d8z1kb14xzf160m5w5mt'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Restaurant ID' datatype='integer' name='[RestaurantID]' role='dimension' type='ordinal' />
            <column-instance column='[RestaurantID]' derivation='Count' name='[cnt:RestaurantID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#f89500</color>
                <color>#f2a228</color>
                <color>#edae4f</color>
                <color>#e8ba74</color>
                <color>#e3c597</color>
                <color>#decfb9</color>
                <color>#d9d9d9</color>
                <color>#bcd6d7</color>
                <color>#a1d4d6</color>
                <color>#85d2d4</color>
                <color>#6ad0d3</color>
                <color>#50ced1</color>
                <color>#36cdd0</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' />
              <color column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' />
              <text column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:City:nk]' />
              <text column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F026E2A5-5C45-4020-ABC1-7A44508D10B5}' />
    </worksheet>
    <worksheet name='Q3.2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='10' underline='true'>Restaurant By Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Zomato analysis (Final)' name='federated.0r4rb7e0d8z1kb14xzf160m5w5mt' />
          </datasources>
          <datasource-dependencies datasource='federated.0r4rb7e0d8z1kb14xzf160m5w5mt'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Restaurant ID' datatype='integer' name='[RestaurantID]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column caption='Bucket Avg Cost' datatype='string' name='[bucket_avg_cost]' role='dimension' type='nominal' />
            <column-instance column='[RestaurantID]' derivation='Count' name='[cnt:RestaurantID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Bucket Avg Cost)]'>
            <groupfilter function='level-members' level='[bucket_avg_cost]' user:ui-action-filter='[Action2_E31DDA001ACC4B48ACBC1CCAB83A6B39]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Country Name)]'>
            <groupfilter function='level-members' level='[Country Name]' user:ui-action-filter='[Action1_15B19803771B4F7C9213EA0A6284EF87]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-action-filter='[Action3_F969517EE6C64CC69D22A230B309CB7D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Country Name)]</column>
            <column>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Year)]</column>
            <column>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Bucket Avg Cost)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#f89500</color>
                <color>#f2a228</color>
                <color>#edae4f</color>
                <color>#e8ba74</color>
                <color>#e3c597</color>
                <color>#decfb9</color>
                <color>#d9d9d9</color>
                <color>#bcd6d7</color>
                <color>#a1d4d6</color>
                <color>#85d2d4</color>
                <color>#6ad0d3</color>
                <color>#50ced1</color>
                <color>#36cdd0</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' />
              <color column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' />
              <text column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Country Name:nk]' />
              <text column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0F2CFBF8-E942-437C-B683-0B78955BDBA9}' />
    </worksheet>
    <worksheet name='Q4.1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='10' underline='true'>Resturants Opening By Year </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Zomato analysis (Final)' name='federated.0r4rb7e0d8z1kb14xzf160m5w5mt' />
          </datasources>
          <datasource-dependencies datasource='federated.0r4rb7e0d8z1kb14xzf160m5w5mt'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Restaurant ID' datatype='integer' name='[RestaurantID]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column caption='Bucket Avg Cost' datatype='string' name='[bucket_avg_cost]' role='dimension' type='nominal' />
            <column-instance column='[RestaurantID]' derivation='Count' name='[cnt:RestaurantID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Bucket Avg Cost)]'>
            <groupfilter function='level-members' level='[bucket_avg_cost]' user:ui-action-filter='[Action2_E31DDA001ACC4B48ACBC1CCAB83A6B39]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Country Name)]'>
            <groupfilter function='level-members' level='[Country Name]' user:ui-action-filter='[Action1_15B19803771B4F7C9213EA0A6284EF87]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-action-filter='[Action3_F969517EE6C64CC69D22A230B309CB7D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Country Name)]</column>
            <column>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Year)]</column>
            <column>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Bucket Avg Cost)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' field-type='quantitative' max='1250' min='-130' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' field='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' value='#1b1b1b' />
            <format attr='color' field='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Year:ok]' value='#1b1b1b' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' value='#000000' />
            <format attr='color' field='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Year:ok]' value='#1b1b1b' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#36cdd0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]</rows>
        <cols>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Year:ok]</cols>
      </table>
      <simple-id uuid='{471887E2-BEC2-4AE7-A858-D7E7CE5DD8D0}' />
    </worksheet>
    <worksheet name='Q4.1 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='10' underline='true'>Resturants Opening By Year </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Zomato analysis (Final)' name='federated.0r4rb7e0d8z1kb14xzf160m5w5mt' />
          </datasources>
          <datasource-dependencies datasource='federated.0r4rb7e0d8z1kb14xzf160m5w5mt'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Restaurant ID' datatype='integer' name='[RestaurantID]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column caption='Bucket Avg Cost' datatype='string' name='[bucket_avg_cost]' role='dimension' type='nominal' />
            <column-instance column='[RestaurantID]' derivation='Count' name='[cnt:RestaurantID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Bucket Avg Cost)]'>
            <groupfilter function='level-members' level='[bucket_avg_cost]' user:ui-action-filter='[Action2_E31DDA001ACC4B48ACBC1CCAB83A6B39]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Country Name)]'>
            <groupfilter function='level-members' level='[Country Name]' user:ui-action-filter='[Action1_15B19803771B4F7C9213EA0A6284EF87]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-action-filter='[Action3_F969517EE6C64CC69D22A230B309CB7D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Country Name)]</column>
            <column>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Year)]</column>
            <column>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Bucket Avg Cost)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' field-type='quantitative' max='1250' min='-130' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' field='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' value='#1b1b1b' />
            <format attr='color' field='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Year:ok]' value='#1b1b1b' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' value='#000000' />
            <format attr='color' field='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Year:ok]' value='#1b1b1b' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#36cdd0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]</rows>
        <cols>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Year:ok]</cols>
      </table>
      <simple-id uuid='{5F64FC69-7D0B-41C6-A79A-3F1E8A174767}' />
    </worksheet>
    <worksheet name='Q4.2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' underline='true'>Resturants Opening By Quarter</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Zomato analysis (Final)' name='federated.0r4rb7e0d8z1kb14xzf160m5w5mt' />
          </datasources>
          <datasource-dependencies datasource='federated.0r4rb7e0d8z1kb14xzf160m5w5mt'>
            <column datatype='integer' name='[Quarter]' role='dimension' type='quantitative' />
            <column caption='Restaurant ID' datatype='integer' name='[RestaurantID]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[RestaurantID]' derivation='Count' name='[cnt:RestaurantID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quarter]' derivation='None' name='[none:Quarter:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-action-filter='[Action7_6BD1277BFB0C480FB0D03D7716C44F2A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-weight' field='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' value='normal' />
            <format attr='color' field='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' value='#1b1b1b' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' value='#000000' />
            <format attr='font-size' field='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' value='9' />
            <format attr='color' field='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Quarter:ok]' value='#000000' />
            <format attr='font-family' field='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Quarter:ok]' value='Tableau Light' />
            <format attr='font-weight' field='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Quarter:ok]' value='normal' />
            <format attr='font-family' field='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' value='Tableau Book' />
            <format attr='font-weight' field='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' value='normal' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#ff9f18' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Quarter:ok]</rows>
        <cols>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]</cols>
      </table>
      <simple-id uuid='{EF226ACC-87B2-4C9A-BE0E-DF822DD79754}' />
    </worksheet>
    <worksheet name='Q4.3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' underline='true'>Resturants Opening By Month</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Zomato analysis (Final)' name='federated.0r4rb7e0d8z1kb14xzf160m5w5mt' />
          </datasources>
          <datasource-dependencies datasource='federated.0r4rb7e0d8z1kb14xzf160m5w5mt'>
            <column caption='Restaurant ID' datatype='integer' name='[RestaurantID]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[RestaurantID]' derivation='Count' name='[cnt:RestaurantID:qk]' pivot='key' type='quantitative' />
            <column caption='Monthname' datatype='string' name='[monthname]' role='dimension' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[monthname]' derivation='None' name='[none:monthname:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-action-filter='[Action7_6BD1277BFB0C480FB0D03D7716C44F2A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' field='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' value='#000000' />
            <format attr='color' field='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:monthname:nk]' value='#1b1b1b' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#36cdd0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]</rows>
        <cols>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:monthname:nk]</cols>
      </table>
      <simple-id uuid='{47D02EF1-4E87-4CED-B86F-D7C205066DA3}' />
    </worksheet>
    <worksheet name='Q5'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='10' underline='true'>Resturants by Average Rating</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Zomato analysis (Final)' name='federated.0r4rb7e0d8z1kb14xzf160m5w5mt' />
          </datasources>
          <datasource-dependencies datasource='federated.0r4rb7e0d8z1kb14xzf160m5w5mt'>
            <column caption='Avg rating' datatype='string' name='[Avg_rating]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Restaurant ID' datatype='integer' name='[RestaurantID]' role='dimension' type='ordinal' />
            <column aggregation='None' caption='USD conversion (bin)' datatype='integer' name='[USD conversion (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[USD_conversion]' peg='0' size='50' />
            </column>
            <column caption='USD conversion' datatype='real' name='[USD_conversion]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column caption='Bucket Avg Cost' datatype='string' name='[bucket_avg_cost]' role='dimension' type='nominal' />
            <column-instance column='[RestaurantID]' derivation='Count' name='[cnt:RestaurantID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Avg_rating]' derivation='None' name='[none:Avg_rating:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Bucket Avg Cost)]'>
            <groupfilter function='level-members' level='[bucket_avg_cost]' user:ui-action-filter='[Action2_E31DDA001ACC4B48ACBC1CCAB83A6B39]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Country Name)]'>
            <groupfilter function='level-members' level='[Country Name]' user:ui-action-filter='[Action1_15B19803771B4F7C9213EA0A6284EF87]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (USD conversion (bin))]'>
            <groupfilter function='level-members' level='[USD conversion (bin)]' user:ui-action-filter='[Action6_75D2E22BB84340609785853A55D6F768]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-action-filter='[Action3_F969517EE6C64CC69D22A230B309CB7D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Country Name)]</column>
            <column>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Year)]</column>
            <column>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Bucket Avg Cost)]</column>
            <column>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (USD conversion (bin))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='color' field='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' value='#1b1b1b' />
            <format attr='color' field='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Avg_rating:nk]' value='#1b1b1b' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#ff9f18' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Avg_rating:nk]</rows>
        <cols>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]</cols>
      </table>
      <simple-id uuid='{F3C64F5F-BACC-4B43-82D9-51C81E5CAD15}' />
    </worksheet>
    <worksheet name='Q6'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='10'>Resturants Falls in Each Buckets</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Zomato analysis (Final)' name='federated.0r4rb7e0d8z1kb14xzf160m5w5mt' />
          </datasources>
          <datasource-dependencies datasource='federated.0r4rb7e0d8z1kb14xzf160m5w5mt'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Restaurant ID' datatype='integer' name='[RestaurantID]' role='dimension' type='ordinal' />
            <column aggregation='None' caption='USD conversion (bin)' datatype='integer' name='[USD conversion (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[USD_conversion]' peg='0' size='50' />
            </column>
            <column caption='USD conversion' datatype='real' name='[USD_conversion]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[RestaurantID]' derivation='Count' name='[cnt:RestaurantID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[USD conversion (bin)]' derivation='None' name='[none:USD conversion (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Country Name)]'>
            <groupfilter function='level-members' level='[Country Name]' user:ui-action-filter='[Action4_34B6EFEE899A419792476529B24FC769]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-action-filter='[Action6_3CA8F95509DA44B0B206D83F9F91EF45]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Year)]</column>
            <column>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Country Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' field='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:USD conversion (bin):ok]' value='#1b1b1b' />
            <format attr='color' field='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' value='#1b1b1b' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#36cdd0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]</rows>
        <cols>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:USD conversion (bin):ok]</cols>
        <show-full-range>
          <column>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[USD conversion (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{3C380BCD-7146-4089-BC4E-F172CD4603EE}' />
    </worksheet>
    <worksheet name='Q7'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='10' underline='true'>Restaurant has Table Booking</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Zomato analysis (Final)' name='federated.0r4rb7e0d8z1kb14xzf160m5w5mt' />
          </datasources>
          <datasource-dependencies datasource='federated.0r4rb7e0d8z1kb14xzf160m5w5mt'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Has Table booking' datatype='string' name='[Has_Table_booking]' role='dimension' type='nominal' />
            <column caption='Restaurant ID' datatype='integer' name='[RestaurantID]' role='dimension' type='ordinal' />
            <column aggregation='None' caption='USD conversion (bin)' datatype='integer' name='[USD conversion (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[USD_conversion]' peg='0' size='50' />
            </column>
            <column caption='USD conversion' datatype='real' name='[USD_conversion]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column caption='Bucket Avg Cost' datatype='string' name='[bucket_avg_cost]' role='dimension' type='nominal' />
            <column-instance column='[RestaurantID]' derivation='Count' name='[cnt:RestaurantID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Has_Table_booking]' derivation='None' name='[none:Has_Table_booking:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[RestaurantID]' derivation='Count' name='[pcto:cnt:RestaurantID:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Bucket Avg Cost)]'>
            <groupfilter function='level-members' level='[bucket_avg_cost]' user:ui-action-filter='[Action2_E31DDA001ACC4B48ACBC1CCAB83A6B39]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Country Name)]'>
            <groupfilter function='level-members' level='[Country Name]' user:ui-action-filter='[Action1_15B19803771B4F7C9213EA0A6284EF87]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (USD conversion (bin))]'>
            <groupfilter function='level-members' level='[USD conversion (bin)]' user:ui-action-filter='[Action6_75D2E22BB84340609785853A55D6F768]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-action-filter='[Action3_F969517EE6C64CC69D22A230B309CB7D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Country Name)]</column>
            <column>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Year)]</column>
            <column>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Bucket Avg Cost)]</column>
            <column>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (USD conversion (bin))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Has_Table_booking:nk]' />
              <wedge-size column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' />
              <size column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' />
              <text column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[pcto:cnt:RestaurantID:qk]' />
              <text column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Has_Table_booking:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='12' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.6151933670043945' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E01B8683-A340-4ACC-BA5F-9251AF879A9F}' />
    </worksheet>
    <worksheet name='Q8'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='10' underline='true'>Restaurant has Online Delivery</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Zomato analysis (Final)' name='federated.0r4rb7e0d8z1kb14xzf160m5w5mt' />
          </datasources>
          <datasource-dependencies datasource='federated.0r4rb7e0d8z1kb14xzf160m5w5mt'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Has Online delivery' datatype='string' name='[Has_Online_delivery]' role='dimension' type='nominal' />
            <column caption='Restaurant ID' datatype='integer' name='[RestaurantID]' role='dimension' type='ordinal' />
            <column aggregation='None' caption='USD conversion (bin)' datatype='integer' name='[USD conversion (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[USD_conversion]' peg='0' size='50' />
            </column>
            <column caption='USD conversion' datatype='real' name='[USD_conversion]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column caption='Bucket Avg Cost' datatype='string' name='[bucket_avg_cost]' role='dimension' type='nominal' />
            <column-instance column='[RestaurantID]' derivation='Count' name='[cnt:RestaurantID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Has_Online_delivery]' derivation='None' name='[none:Has_Online_delivery:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[RestaurantID]' derivation='Count' name='[pcto:cnt:RestaurantID:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Bucket Avg Cost)]'>
            <groupfilter function='level-members' level='[bucket_avg_cost]' user:ui-action-filter='[Action2_E31DDA001ACC4B48ACBC1CCAB83A6B39]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Country Name)]'>
            <groupfilter function='level-members' level='[Country Name]' user:ui-action-filter='[Action1_15B19803771B4F7C9213EA0A6284EF87]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (USD conversion (bin))]'>
            <groupfilter function='level-members' level='[USD conversion (bin)]' user:ui-action-filter='[Action6_75D2E22BB84340609785853A55D6F768]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-action-filter='[Action3_F969517EE6C64CC69D22A230B309CB7D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Country Name)]</column>
            <column>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Year)]</column>
            <column>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (Bucket Avg Cost)]</column>
            <column>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (USD conversion (bin))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Has_Online_delivery:nk]' />
              <wedge-size column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' />
              <size column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' />
              <text column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[pcto:cnt:RestaurantID:qk]' />
              <text column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Has_Online_delivery:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='12' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.6151933670043945' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5F789B0D-6B9A-4004-AAE7-E8A0C03FF3E2}' />
    </worksheet>
    <worksheet name='Q9'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='10' underline='true'>Top 20 Cuisines</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Zomato analysis (Final)' name='federated.0r4rb7e0d8z1kb14xzf160m5w5mt' />
          </datasources>
          <datasource-dependencies datasource='federated.0r4rb7e0d8z1kb14xzf160m5w5mt'>
            <column datatype='string' name='[Cuisines]' role='dimension' type='nominal' />
            <column-instance column='[Cuisines]' derivation='Count' name='[cnt:Cuisines:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cuisines]' derivation='None' name='[none:Cuisines:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Cuisines:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Cuisines])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Cuisines:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Cuisines:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <color column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Cuisines:nk]' />
              <size column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:Cuisines:qk]' />
              <text column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Cuisines:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{84112918-6EA9-4009-A65B-6F9A591B2C90}' />
    </worksheet>
    <worksheet name='Year Slicer'>
      <table>
        <view>
          <datasources>
            <datasource caption='Zomato analysis (Final)' name='federated.0r4rb7e0d8z1kb14xzf160m5w5mt' />
          </datasources>
          <datasource-dependencies datasource='federated.0r4rb7e0d8z1kb14xzf160m5w5mt'>
            <column aggregation='None' caption='USD conversion (bin)' datatype='integer' name='[USD conversion (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[USD_conversion]' peg='0' size='50' />
            </column>
            <column caption='USD conversion' datatype='real' name='[USD_conversion]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (USD conversion (bin))]'>
            <groupfilter function='level-members' level='[USD conversion (bin)]' user:ui-action-filter='[Action6_75D2E22BB84340609785853A55D6F768]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[Action (USD conversion (bin))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='5' />
            <format attr='height' field='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Year:ok]' value='27' />
            <format attr='border-width' value='3' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
            <format attr='color' value='#b4b4b4' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Year:ok]' value='78' />
            <format attr='height-header' value='12' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='border-color' value='#000000' />
            <format attr='band-color' scope='cols' value='#b4b4b4' />
            <format attr='band-color' scope='rows' value='#ff9f18' />
            <format attr='background-color' value='#f89500' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' scope='rows' value='center' />
            <format attr='vertical-align' scope='rows' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='border-color' value='#000000' />
            <format attr='band-color' scope='cols' value='#b4b4b4' />
            <format attr='background-color' value='#f89500' />
            <format attr='background-color' data-class='subtotal' value='#f89500' />
            <format attr='band-color' scope='rows' value='#f89500' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
            <format attr='band-size' scope='rows' value='5' />
            <format attr='band-size' scope='cols' value='5' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
            <format attr='font-family' value='Tableau Bold' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='4' />
            <format attr='stroke-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-size' scope='rows' value='2' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Year:ok]</rows>
        <cols />
      </table>
      <simple-id uuid='{8CF77210-855A-4824-8804-8DF6B195DAD2}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#d4d4d4' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='37625' id='13' param='horz' type-v2='layout-flow' w='98400' x='800' y='10375'>
            <zone h='37625' id='3' param='horz' type-v2='layout-flow' w='98400' x='800' y='10375'>
              <zone fixed-size='278' h='37625' id='5' is-fixed='true' name='Q7' w='28600' x='800' y='10375'>
                <layout-cache cell-count-h='1' non-cell-size-h='33' type-h='cell' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='395' h='37625' id='56' is-fixed='true' param='horz' type-v2='layout-flow' w='39500' x='29400' y='10375'>
                <zone h='37625' id='58' name='Q3.2' w='39500' x='29400' y='10375'>
                  <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='37625' id='11' name='Q8' w='30300' x='68900' y='10375'>
                <layout-cache cell-count-w='1' type-h='fixed' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='9375' id='17' is-fixed='true' type-v2='layout-basic' w='81700' x='8800' y='1000'>
            <zone h='9375' id='14' param='horz' type-v2='layout-flow' w='81700' x='8800' y='1000'>
              <zone fixed-size='64' h='5625' id='15' is-fixed='true' type-v2='text' w='81700' x='8800' y='1000'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='20' underline='true'>Zomato Analysis Dashboard</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='43750' id='21' param='horz' type-v2='layout-flow' w='39200' x='800' y='55250'>
            <zone h='43750' id='57' name='Q4.1' w='39200' x='800' y='55250'>
              <layout-cache cell-count-w='9' minheight='193' non-cell-size-w='66' type-h='scalable' type-w='cell' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='9375' id='30' param='horz' type-v2='layout-flow' w='8000' x='800' y='1000'>
            <zone h='9375' id='31' is-centered='0' is-scaled='1' param='C:/Users/HP/Desktop/Zomato_logo.png' type-v2='bitmap' w='8000' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='9375' id='32' type-v2='dashboard-object' w='8700' x='90500' y='1000'>
            <button action='tabdoc:goto-sheet window-id=&quot;{237F6AA4-F573-4A1B-9DB4-2B5D12D090AC}&quot;'>
              <button-visual-state>
                <image-path>C:/Users/HP/Desktop/pngtree-calendar-icon-logo-2023-date-time-png-image_6310337.png</image-path>
              </button-visual-state>
            </button>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='43750' id='53' param='horz' type-v2='layout-flow' w='39900' x='59300' y='55250'>
            <zone h='43750' id='54' name='Q5' w='39900' x='59300' y='55250'>
              <layout-cache minwidth='180' type-h='cell' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='43750' id='59' param='horz' type-v2='layout-flow' w='19300' x='40000' y='55250'>
            <zone fixed-size='92' h='43750' id='63' is-fixed='true' name='Year Slicer' show-title='false' w='10000' x='40000' y='55250'>
              <layout-cache type-h='fixed' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='43750' id='64' param='horz' type-v2='layout-flow' w='8700' x='50000' y='55250'>
              <zone h='43500' id='69' name='Average Cost for 2 Slicer' show-title='false' w='8700' x='50000' y='55250'>
                <layout-cache fixed-size-h='340' fixed-size-w='79' type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone fixed-size='50' h='7250' id='62' is-fixed='true' name='Country Slicer' show-title='false' w='98400' x='800' y='48000'>
            <layout-cache type-h='fixed' type-w='fixed' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2300' minheight='2300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='81' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='80' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='67' h='9375' id='31' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/HP/Desktop/Zomato_logo.png' type-v2='bitmap' w='8000' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='64' h='5625' id='15' type-v2='text' w='81700' x='8800' y='1000'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='20' underline='true'>Zomato Analysis Dashboard</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9375' id='32' type-v2='dashboard-object' w='8700' x='90500' y='1000'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{237F6AA4-F573-4A1B-9DB4-2B5D12D090AC}&quot;'>
                    <button-visual-state>
                      <image-path>C:/Users/HP/Desktop/pngtree-calendar-icon-logo-2023-date-time-png-image_6310337.png</image-path>
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37625' id='5' is-fixed='true' name='Q7' w='28600' x='800' y='10375'>
                  <layout-cache cell-count-h='1' non-cell-size-h='33' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37625' id='58' is-fixed='true' name='Q3.2' w='39500' x='29400' y='10375'>
                  <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37625' id='11' is-fixed='true' name='Q8' w='30300' x='68900' y='10375'>
                  <layout-cache cell-count-w='1' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='50' h='7250' id='62' is-fixed='true' name='Country Slicer' show-title='false' w='98400' x='800' y='48000'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43750' id='57' is-fixed='true' name='Q4.1' w='39200' x='800' y='55250'>
                  <layout-cache cell-count-w='9' minheight='193' non-cell-size-w='66' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43750' id='63' is-fixed='true' name='Year Slicer' show-title='false' w='10000' x='40000' y='55250'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43500' id='69' is-fixed='true' name='Average Cost for 2 Slicer' show-title='false' w='8700' x='50000' y='55250'>
                  <layout-cache fixed-size-h='340' fixed-size-w='79' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43750' id='54' is-fixed='true' name='Q5' w='39900' x='59300' y='55250'>
                  <layout-cache minwidth='180' type-h='cell' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{EB7FA1B9-A37C-4D27-A324-7FB879B51AFC}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1 (2)'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#d4d4d4' />
        </style-rule>
      </style>
      <size maxheight='600' maxwidth='1000' minheight='600' minwidth='1000' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='37369' id='13' param='horz' type-v2='layout-flow' w='98400' x='800' y='10640'>
            <zone h='37369' id='3' param='horz' type-v2='layout-flow' w='98400' x='800' y='10640'>
              <zone fixed-size='234' h='37369' id='5' is-fixed='true' name='Q7' w='24200' x='800' y='10640'>
                <layout-cache cell-count-h='1' non-cell-size-h='33' type-h='cell' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='485' h='37369' id='56' is-fixed='true' param='horz' type-v2='layout-flow' w='48500' x='25000' y='10640'>
                <zone h='37369' id='78' name='Q1.1 - Maps' w='48500' x='25000' y='10640'>
                  <layout-cache has-max-size-h='true' maxheight='34' minheight='34' minwidth='202' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='37369' id='11' name='Q8' w='25700' x='73500' y='10640'>
                <layout-cache cell-count-w='1' type-h='fixed' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='9307' id='17' is-fixed='true' type-v2='layout-basic' w='81700' x='8800' y='1333'>
            <zone h='9307' id='14' param='horz' type-v2='layout-flow' w='81700' x='8800' y='1333'>
              <zone fixed-size='64' h='7500' id='15' is-fixed='true' type-v2='text' w='81700' x='8800' y='1333'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='20' underline='true'>Zomato Analysis Dashboard</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='43457' id='21' param='vert' type-v2='layout-flow' w='45100' x='800' y='55210'>
            <zone h='43457' id='79' name='Q6' w='45100' x='800' y='55210'>
              <layout-cache minheight='193' type-h='scalable' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='9307' id='30' param='horz' type-v2='layout-flow' w='8000' x='800' y='1333'>
            <zone h='9307' id='31' is-centered='0' is-scaled='1' param='C:/Users/HP/Desktop/Zomato_logo.png' type-v2='bitmap' w='8000' x='800' y='1333'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='9307' id='32' type-v2='dashboard-object' w='8700' x='90500' y='1333'>
            <button action='tabdoc:goto-sheet window-id=&quot;{237F6AA4-F573-4A1B-9DB4-2B5D12D090AC}&quot;'>
              <button-visual-state>
                <image-path>C:/Users/HP/Desktop/pngtree-calendar-icon-logo-2023-date-time-png-image_6310337.png</image-path>
              </button-visual-state>
            </button>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='43457' id='53' param='horz' type-v2='layout-flow' w='43600' x='55600' y='55210'>
            <zone h='43457' id='54' name='Q5' w='43600' x='55600' y='55210'>
              <layout-cache minwidth='180' type-h='cell' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='43457' id='59' param='horz' type-v2='layout-flow' w='9700' x='45900' y='55210'>
            <zone fixed-size='92' h='43457' id='63' is-fixed='true' name='Year Slicer' show-title='false' w='9700' x='45900' y='55210'>
              <layout-cache fixed-size-h='337' type-h='fixed' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone fixed-size='50' h='7201' id='62' is-fixed='true' name='Country Slicer' show-title='false' w='98400' x='800' y='48009'>
            <layout-cache type-h='fixed' type-w='fixed' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1700' minheight='1700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='83' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97334' id='82' param='vert' type-v2='layout-flow' w='98400' x='800' y='1333'>
                <zone fixed-size='48' h='9307' id='31' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/HP/Desktop/Zomato_logo.png' type-v2='bitmap' w='8000' x='800' y='1333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='64' h='7500' id='15' type-v2='text' w='81700' x='8800' y='1333'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='20' underline='true'>Zomato Analysis Dashboard</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9307' id='32' type-v2='dashboard-object' w='8700' x='90500' y='1333'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{237F6AA4-F573-4A1B-9DB4-2B5D12D090AC}&quot;'>
                    <button-visual-state>
                      <image-path>C:/Users/HP/Desktop/pngtree-calendar-icon-logo-2023-date-time-png-image_6310337.png</image-path>
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='216' h='37369' id='5' is-fixed='true' name='Q7' w='24200' x='800' y='10640'>
                  <layout-cache cell-count-h='1' non-cell-size-h='33' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='216' h='37369' id='78' is-fixed='true' name='Q1.1 - Maps' w='48500' x='25000' y='10640'>
                  <layout-cache has-max-size-h='true' maxheight='34' minheight='34' minwidth='202' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='216' h='37369' id='11' is-fixed='true' name='Q8' w='25700' x='73500' y='10640'>
                  <layout-cache cell-count-w='1' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='35' h='7201' id='62' is-fixed='true' name='Country Slicer' show-title='false' w='98400' x='800' y='48009'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='253' h='43457' id='79' is-fixed='true' name='Q6' w='45100' x='800' y='55210'>
                  <layout-cache minheight='193' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='253' h='43457' id='63' is-fixed='true' name='Year Slicer' show-title='false' w='9700' x='45900' y='55210'>
                  <layout-cache fixed-size-h='337' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='253' h='43457' id='54' is-fixed='true' name='Q5' w='43600' x='55600' y='55210'>
                  <layout-cache minwidth='180' type-h='cell' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5A44BEC7-6A1A-47C1-B453-EEAC6113DC8C}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#d4d4d4' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='49500' id='3' param='vert' type-v2='layout-flow' w='49200' x='800' y='10375'>
            <zone h='49500' id='5' name='Q4.1' w='49200' x='800' y='10375'>
              <layout-cache minheight='193' type-h='scalable' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='49500' id='6' name='Q4.3' w='49200' x='50000' y='10375'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='39125' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='59875'>
            <zone h='39125' id='8' name='Q4.2' w='98400' x='800' y='59875'>
              <layout-cache minwidth='180' type-h='fixed' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='9375' id='9' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone forceUpdate='true' h='9375' id='10' type-v2='text' w='98400' x='800' y='1000'>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='20' underline='true'>Restaurant By Year, Quarter And Month</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='46' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='45' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone forceUpdate='true' h='9375' id='10' type-v2='text' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='20' underline='true'>Restaurant By Year, Quarter And Month</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49500' id='5' is-fixed='true' name='Q4.1' w='49200' x='800' y='10375'>
                  <layout-cache minheight='193' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49500' id='6' is-fixed='true' name='Q4.3' w='49200' x='50000' y='10375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39125' id='8' is-fixed='true' name='Q4.2' w='98400' x='800' y='59875'>
                  <layout-cache minwidth='180' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{03310920-82C3-45B8-BAEA-AA43AC7917DE}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Q1.1 - Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:CountryCode (Q1.2-Currency map):ok]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Countryname:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AD80D71D-4C24-4EA0-9A9D-0BC61B622254}' />
    </window>
    <window class='worksheet' name='Q1.1 - Maps'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Countryname:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:City:nk]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Countryname:nk]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Currency:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E17513D1-36FE-4556-8729-68F137A871CE}' />
    </window>
    <window class='worksheet' name='Q1.2 - Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:CountryCode (Q1.2-Currency map):ok]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Countryname:nk]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Currency (Q1.2-Currency map):nk]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[sum:1_INR:ok]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[sum:1_usd:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CF29AD41-EE1B-4351-B511-12C347BB4AB2}' />
    </window>
    <window class='worksheet' name='Q3.2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:City:nk]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Country Name:nk]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:RestaurantID:ok]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:RestaurantName:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1723414A-AA31-48C2-B26A-A80BC02669FD}' />
    </window>
    <window class='worksheet' name='Q2 - Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Date:nk]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Finac Month:nk]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Finan Qtr:qk]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Quarter:qk]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Weekdayname:nk]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Weekend:nk]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:YYYY-mmm:nk]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Year:qk]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:monthname:nk]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[sum:Calculation_1184446719096381441:ok]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[sum:Weekdayno:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{950DF342-109E-4ACD-AAC8-38F209A8F856}' />
    </window>
    <window class='worksheet' name='Q3.1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:City:nk]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Country Name:nk]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:RestaurantID:ok]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:RestaurantName:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CD4B4A0A-6BAC-4465-8548-0FB343222B58}' />
    </window>
    <window class='worksheet' name='Q4.1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:City:nk]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Quarter:qk]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:RestaurantID:ok]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{574363DD-F54D-416D-AB5D-0A3690281FDA}' />
    </window>
    <window class='worksheet' name='Q4.1 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:City:nk]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Quarter:ok]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Quarter:qk]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:RestaurantID:ok]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Year:qk]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:monthname:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A3808CF7-B1A0-494A-A1BE-8E0BA23AA350}' />
    </window>
    <window class='worksheet' name='Q4.2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Quarter:qk]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:RestaurantID:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{84D18AE1-5438-44B4-9419-CADDE0B17964}' />
    </window>
    <window class='worksheet' name='Q4.3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:RestaurantID:ok]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:monthname:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4D426666-881E-41D8-955A-F9839569A016}' />
    </window>
    <window class='worksheet' name='Q5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Avg_rating:nk]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:RestaurantID:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4C400BD8-128F-494B-9043-DE488093868C}' />
    </window>
    <window class='worksheet' name='Q6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Average Cost for two (bin):qk]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:RestaurantID:ok]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:USD conversion (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{61DBB58C-FE75-4D1B-8384-776D7655979C}' />
    </window>
    <window class='worksheet' name='Q7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Has_Table_booking:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Has_Online_delivery:nk]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Has_Table_booking:nk]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:RestaurantID:ok]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:bucket_avg_cost:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{02B5BCC6-A0CE-40A0-B1B3-F55766813271}' />
    </window>
    <window class='worksheet' name='Q8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Has_Online_delivery:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[cnt:RestaurantID:qk]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Has_Online_delivery:nk]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Has_Table_booking:nk]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:RestaurantID:ok]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:bucket_avg_cost:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C5A2E866-50B7-4CD7-980C-CBEC62050E23}' />
    </window>
    <window class='worksheet' name='Q9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Cuisines:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Cuisines:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{979B87F3-F431-4647-85D6-5055892E6F9A}' />
    </window>
    <window class='worksheet' name='Country Slicer'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Avg_rating:nk]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Country Name:nk]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Year:ok]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7D316417-E55E-4369-B547-FBF8F944A8E8}' />
    </window>
    <window class='worksheet' name='Year Slicer'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2021B059-CC60-4BE8-B447-0F786D938C01}' />
    </window>
    <window class='worksheet' name='Average Cost for 2 Slicer'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:Year:qk]</field>
            <field>[federated.0r4rb7e0d8z1kb14xzf160m5w5mt].[none:bucket_avg_cost:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7296AD5A-C582-4076-9713-434D4D065AFF}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Average Cost for 2 Slicer' />
        <viewpoint name='Country Slicer' />
        <viewpoint name='Q3.2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q4.1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q5'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q7'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q8'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Year Slicer' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{DDDD671F-76A7-4668-8B13-018589543C00}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1 (2)'>
      <viewpoints>
        <viewpoint name='Country Slicer' />
        <viewpoint name='Q1.1 - Maps'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q5'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q6'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q7'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q8'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Year Slicer' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{C74254B6-E627-4C53-9D04-52F45B3C8BCF}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Q4.1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q4.2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q4.3'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{237F6AA4-F573-4A1B-9DB4-2B5D12D090AC}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average Cost for 2 Slicer' width='79'>
      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
      42JGiYzNAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='49' name='Country Slicer' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1 (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q1.1 - Maps' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q1.1 - Table' width='192'>
      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
      I/4HZqN7Z/j2FX4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q1.2 - Table' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOydd2BUVdqHn+klM0kmvfdK6EWqNAUFRRAsiF1EXde266669rL66a7rWkFU
      moL0LiUQCD20hEBII6T3OpneZ74/wIprcFcgyDx/wc2595575r73lPd33lfg8Xg8ePFyhSK8
      1BXw4uVSIv72H2azGbvdfinr4sXLRec7A7Db7VgslktZFy9eLjreIZCXKxqvAXi5ovEagJcr
      Gq8BeLmi8RqAlysarwF4uaLxGoCXKxqvAXi5ovEagJcrGq8BeLmi8RqAlysarwF4uaIR//SA
      y+XCarVeirp48XLROccABAIBUqn0UtTFi5eLzjkGIBQKEQq9IyMvVwbeN93LFUNbbRFljcYf
      HevSAJx2A4cyl/LorMfYUdJ8wSp3oTiw8k0WH6z/hRJNfP3mF1QaLJw+VYbN6b5odbvc2L7k
      NdYca/qFEvUsemMBtXojZWUVOF3nt928uWQHTz8yk2efe5Z3Pl1Jk9Hx21T4B9g7T7FuXS4y
      lYyPnpvCk39+hudeeOs8egCPB3V4NAJtPUa76zev2IXGrG+h0+LEYbVgMhro1Gqx2F14PG6s
      JgPazg5amtqxu5y0t7Xjcnuwmg1oO7QYLTa8IQO+x9TZit7ixG4xn23LTqyOM21pMenRdnbQ
      2tyB3Wmnvb0Dt8eNxXSmLU0WO263C6PZhEnfiU5vxOk+07guu5HwgZN5+63XSLAXs6ekCbvF
      itPtwe1yYLU6cDmsGM/+fmab88zvZzag/a4OHmxn/2+xO/G4nRh0nWg79didbsoPHUac2pto
      lRinOoKnXnidp29NOncO8FPEMl969O6Bj+TyHi3lLP6Ene1ifE3l6MJv4w83KFg0dw0EyajV
      uXA52tm9bTtJGankb19HblkTOo+Uh/74JLF+XTbTFcXOuf/iqMcPWdsp7En3cP8IO4sWbkUY
      JKbOJMFmamDXzr306hnH7g3rOFndil6kYtbtE/jH7DkMT4rhcGEVUx57ldFJft9f2OXEbLOh
      kbjY+eFCQmbdTXTnMTZsdzM8qZAvsjuIUjroUCYxc1Iftq3fTIfZhCRsJPdOjWfV5yvQOmy4
      Agdy9zArn64uQR2gYdxNM6isaiRuzHXf38vjxqQ3XElzABnpw2/gT49Px1nZREVRPpLB03nm
      qQdI16i+K+W0mmloakCr11JxqoA2vTdQwLnI6TPmZp74w1SslU0UF5wgcMxdPPPUfSSqFd+V
      spuNNDY3otVpKSspoNPkBFU4tz7wONcPDKa50/xd2aKsxdx/111UhY7jmh6hP3vX+P7jePK5
      F/GzFXF0zxYyc0rp0BnRttRTfzyblYfKaNfp0VY3YhX7gEBCSGgYvgoxnU4rKtmZ1U1jVT5v
      /OVhnl1c13UP4LKbaWtrxmyzo21vw2gLQSW7HL+IAkQiIQKhAAGgVKkwHaugvjaMTvv3Y05T
      ey2FOgWPPHwbSz7/16WrbrfmbFsKhAgAtY8SXXUl9TW+6BzO70oZm8spcwTzh0du44tP3z9z
      UChCLBQgFAp+dMUe18zgziFK5m8spKq1J2KphbrKWuxNp9GTAIBZ3059RT56iz/hMfGk9g5g
      1v3X47Y5kNtL6Zk6iFkP34DIakes8DDtpgBOHdjK5v2JxEqVdJosgC+quL785fYnOLxmKaJX
      X331VQCr1YrT6eSnWNvLWLN8O+q4BGzaNtQRyYT7yS9Is14IBEIRgeFJRAYo8Q+PJNhXiVDu
      T6+r+iFpzedwpYmU1B6kpMWhkvuQlNELP0szRypM9OiZQmJCCmqZ6FI/RrdAIBQSEplEmL+C
      wKhoAlRyxAoN/Yb0wVmbS26dnfT0DJLTYlApfEnJ6IWss4ZjtQ569UomMSEZX5WKpJhIhEIh
      gaExBKulgBCFbzDpfa4iKdBJTYeIfv3DyN17GFFECr3iY5Fay8jKKaa13cLEO++nX3oKAdST
      tScXhzyMHn0HESOpJ3t/HkZREElhQg7uycGojGPidcMJczVyuEnIwJRIhEIx8amDGDS4B4Jv
      I8N1dnZ6w6J46bY0FmyjwJrI+EGJ/9X5blszqxdsJu3m6fQK/X6Y5jUAL1cMRm0jZmEAIX6y
      746dM5h3Op2YTKaLWjEvXi4KQiUyrOh032vdzjEAkUiEr6/vRa2XFy+Xip8Vw3nxcimwWywg
      lSIVXbxFhyvID+Cl2+HxUH8ih4I6LQANJSW0WCy4bAYys3ZgugjKgy4NwGFpZ8uSD5ky8WbW
      n2g4c9DWxidP3UXvXmPY13ahq/i/4XHo+eLvT/LgY69Ta+pa52PtbOBo4akuy9lay3j0rQ8B
      I8f37KXN3OUplzlGvvzb7dz32LP8+eln+HLrMX7ORbj4/Sc4VK0l8x9/J/OU7hev6DTXsSLz
      GCG+QnYv/oi3Z8/h3X/M5XiTlVRBFYt3VXChTaBLj5ZQ4kO/MeOIW7/ru2M1eTuoCxzEoLhf
      fsDugFXfRrsygYGxrVQ1dBKdrKCp2kxQrD+66laUsSGY6yqobjGgCY/GVLid+btq4c4Z9Ijy
      p91oR2DSowqPRNdQTZvBRmhMCkE/uIdQIEModNNSU0ZdmwlVUDRJMcG/u+5VoQnnoT++Qz9F
      MR/9czHF/XuSKGqhoqYFeWAUSTHB55xj6WzkVGUjAoWGpIQoLI2NuFQyDEaQ1mxGkD6eIDrZ
      VWhk6t2zSO4RR7ivBln4BJz/WkHDsCeIVl24luzyyiKxnLCIUKSis3MDj5OtmfvoP7gfsstg
      uqCvLcClzCAjUkNRSS1Qy6rZ2ZgxsWv2KmpMtSyZv5JjJSWUVtTQ1tpKZ3sbFXUttJcf5J/v
      vUXmviL0+g6KThZQWLCfeZ8toeO7hYRO9q7aRbvNRWVRHgUFh/jy3wuo/h33CIrANOIiOimv
      rWbZZx9x+Phx1n7xIUfrz1VxamtKyT9ZyOYl89l5/DS753zER1+vo7S+icK8GjL6xCPyCWHy
      qBg2Lp7Hlj2F2NwCBNIIfNStNLQaf6YGvx2/2rQsVdtZtauK0qN7Od3czNEDx7F0W5Gojbzd
      2ykpP0pOUTl7DxziHE+HXE10oJjmmnq0Jg8pfQeS0mcAt40bglwiRBnRj3vvm4KfvYH84/lU
      VtRSVXMK809+a5ezg/yDeZSXV1NTdooO28V6xkuAW49JJ0UjaaZN35/b77mPaSOC2HGi5icF
      rVQWHKO4pJzq8krq242AiyE33s/EYQnYOsT4KEQgUtD3+uk88PB9RDfv46vNR86cLpRg/xl1
      wm9Jl0Mgu7GZ/Pw8mjp1lBYcp9/Y/nw6/wPs2lpO7dpFYmos0m7a17v19eTXRfDIrFsJ9bTi
      /nQjpe0SzPoicnapOdnQRk+TDXVaLzI62sg5vIvhcaNwNleRnVdKisiNj68KMWBqq8WqjGH8
      iFjWr8g+914uHc3tUkZMuxpRbebFf9iLgNNqouDoPloNeTQGj2FqcgqF8i3s3OZLY24Lg6dH
      0FD6wzNsNFS0kjzkBoQKC2fEzwp8VRJAQHSym5I6IwNFnXyzbTetZjsyqxBflQqw4bY40KiV
      F/SZutQCOc1aTpU2kDpoCME+UoKikkiICkETGER8cho9M1JQdVNtnNvlQZ2UwsDUBAKDwomL
      D0Ttl0BspAeTW03/oQOJiQnB2dGKwS5hxNjrSYyLJlYjp8kEyYlJREVEEqzxwycgAl+RHask
      lCGD+hAdFU1sRDjhwaFowsKIiEkkNlyMya2m76CBxMeGofhdSYiE+PgGYDV2ogzvzeQJw/CX
      q0hKiqCtuZOYQdcxPC0YTUAYYWGRBIeHEhYRQ3JqBPoOHYl9r6JHcjzRCbGERYbgIxbhq3ax
      bWcdVw3NIEgpoKSkjOjeYxg3oheC1lx2nNJw7cgMZBfwA+uVQni5ZHhcdjYtnkvY6LsYGOtH
      Q0MTQUEhiLGwesGnJEz8AwOiVV1f6H/AawBeLh0eDw6rGadIhkL6/TDC43ZhMJlR+ajOkU3/
      1pwzeHE4HBiNF3bm7cXLj7Fj/Rn5mU7XecHvfI4BSCQSNBrNBb+xFy/dgW66fuPFy8Why/Ub
      t8NKa0sLJrsbdUAIQX5KHGYdza1ahEoNEcF+dF9/mBt9WxOtOgsCkQT/oBACVL9+N5vLqqPD
      ISNYffnshPvtcaNraaDNYEMokqAJDsPf59dHEHRZOulwKs/uBDt/rIZ2mlo6cQlFBIRE4K+U
      0pVuU9fRgtw3CJnQwe7M7cQMGInSocVodSHz8SUkOLBrAzBWHmHZjkJE+gYKWtW89Nrj7Pzo
      dcod/jTVanny7XfpEdBdOxILWZ++QI54CPHSNmqdKTz/zK2oz/PsppI9FHZE0E+8j39U9Oaf
      0/tf0Np2b8xs/Oh5CtXDiRY20yTtxzNPTOJ812hqj2+nwplGhmUj7zaP5bnBZg4UCblhfN/z
      Or9w6yK+yjGRmiinyRLIE4/eS6Dyl9eZV81/nYF3/JOYzs0cbYmgn6CN5/7vLfr0HEhrQyN9
      Jj/YtQGok4bxWNJwdCVZPPXWMlorDrH+uIt/fPwUZV/8iUWZJ3nrjt501yVviULNxFseZpAg
      h3c/LcSGnqqD1QikFsSh8VhPH6a8zUFs7yH0DrSxbe9RzDYPYcn9SQsIISLEFzou9VN0D2Tq
      ACbNeJie9l28t7AOm0tLRW49CEwoIuMxlB6mUusmsd9Q0tUGtuzJw+4UEJk2iCRVOOESFZx1
      FotlGqIiJDiNzezff5hWq5ABw8YSLGiipKKJjqZGFDH9Gdw77qyjVc6g6yYwY3wq7731LDUd
      RuSGFnbsO446phdD+yVSe3wvx6u0hCb1Y3if+DM3chnZtv40ox65EZmnHsJ78vDDD1N5ZBUr
      953seg4gcNnIWvYRL/97OQnDbiJBrMPuE4pCIcVHJUXXquXCOqv/N2xGLfP/8SxvzN5C/Ii+
      +HqaWPjaexyut6JWemhv0WJsrWT2F6swy1RERQTTcCKbwhY7TUWHOHCs9lI/QrfBom3ks7ef
      5c3Ps0kd1Qelo455r/yb4+1ufGRO2ls7MTSWMHvhBixyNTGRgVTlZVPabqc2by+Hi76PKtdR
      c4LsPaU4TAY69AY66/L4cmEW9acPsWHncYIjVGSvWEiD4dszXLTUlFOQu5NOZwgBAh0Lv1xB
      i9HErvVfsqeoGW17K2ZDIxtmL+L02YVMt9VEgVBO0rfeWnMHhYUnOHS0ktAesecxCZYouW7G
      k7z92h8w5Kwnt0OE2NSC1WbHpLOhDvDruhu5hMhUGh545h3eeP4uWrO2UWUCdVQPJowdQbij
      jh1HK3HiQa/V4fYJRKKrwRp/A/ePT0PUfSc3lwSFJpyHnnuH15+9lZpNmdRawC+uNxNHD8Hf
      WMWu/BrcAtB16PGogqG1HEmvadw5Ouk/zBPd1JccoqiyA0RCDO1aXB4IiEyk38CBBElNOL7T
      mTmpKz7IP1/9mEG3zyJIoKeophaxQEBixkDCfDo4sPs4do8Ap64D09mvssftwSEE6bcVMLSw
      5etP2NYYwuQx6V2/u7VHNrA+rw2FoxVbcDThqaOZlJHFks9m01zjy8MPd9/hD4DDaiRrzZdU
      yZvp8A/DTwoyqQKRWIjHaaXT7EDuo0ImsqE/ncnbs7fSf8J17DtSRrA3LOKPsBu1bFvzJaWi
      BowhMfhKQC5TIhIKcDss6C1OFCp/pCI7upL1vP3FXkbcKOfAscr/OFewG0xY3UJ81Mou3iMZ
      /a+7k1ufsfPqux8Q9uBdDIsKosrgJDrgzGKNQW8hQKFCLvn+SiK5glSLlXKrmxSA0DT+8vzD
      ZC78gM++3t61J9hu6qCmrhm7W4h/SAThgWrshnZqG1oR+4YSG67p1qtA2sZqGjrMCIRiAsKi
      CdWIaKkzEBgRhEjgoL68HJtYiUgsJ9RfSE1tM063AFVAOME+HixuOX5SKy02ORGaCyvM6t64
      aK+roklnRSAUExQZQ5AKWhvNBEUEInDbqK+oxCn1QSBWEKJ2U13XitsjQB0USaDMgV2oQi00
      0uJUESS1oTMLCVB5qKptRKRUIRMo0PgJMNjEBAcoaGtqQR0UgUwM5s42bEIVGl852qZa3Kpg
      VB4TVXXNIFURGRmKqaUGvUuKUigmICoSc3sdSk0YzfsWssUyggfHxdPcoScqNBiHVU9jm8Ur
      hfByBeDUsnTBeq66+XYSgxQ/+pPXALxc0Xi1QF6uaLxaIC9XNN3VhevlCqSzqQm9/eKGo+9y
      GdRp6aSo4CStRhfhSRmkh4k4uDcPo9sNCIjpNZTUMJ+LUNX/Do/LTk3pccqbLESn9yE53K/r
      k34Op4ny0lYiMuJQdF36d4iTmpO5lDbqkfmF0adXOn6Kc1+f+sqTKENTcDZWQ2gcwSrJf7yi
      x+0kZ+NSxL0n0svfws5NWxEm9ebqPolkrV/FwBvuJTHowuqvuuwBLPWlFDTosDQV8t47/+a0
      /sxxl7GZef94jeNt3Tmnlpuawxv5Ys0hbHYDdY3/g6bB2siazzbRzcMgXUCs7Fv9OSXtUHds
      M58s3IThZ3KAZa//jFOtJvJWLyev4ZdDY9jbT7KvTExKkIs1Xyyl2uJC21RLiwnG9w9n/bZj
      2C7w63UeWqDB3JnkpunYRpZtPo5NpGHoNddQn7sKW+goJvY8X2nZJcDewpbVR7jhr39nSKgY
      cNNSvJ9lW/YhC87g5mkTsBTnUFjfTEV5HT3H3c6AMCtb1q2jxqDk+ukz6BEk5HDmag4UlXO6
      TQHY2bViAUdrLKSOuJFJQ5Iu9VNeNCQKFQNGjGNY+CDmvfkax2vHE2c8zPrteQRmjGba+H7n
      nNN26gBLvzmAKCSVaZPH0HYgB1ukP9X1kGDJRDPsD/gJzFS1GUgbM5zBI3oTpVJB5Fj8Nv2T
      au0gUgIvnNag6zmAw0zm1x/x1txNJA0dT6SPB9wmstdn0mfi+asBLwl2C50WDUHfNaAHu1tI
      SEgELQXbWHOwnLoTB6h2RnLzpAx2L96GweHCxzcEjb2M2cv2UXZkDZurNNx5+41E+SsAB0Kp
      P8FqD4vmfY32Uj7fpULkh9rfTnNzMYsX72H0zTcjL17OmvxzA6U5XRAUGkrroS1sOXyK0uxN
      bDzazKBBcdQWOkhPCkDgE8kf/ziNgm2L+eKTxZyo7QRUiHyhRWs49/6/IV2HRnTBqFsf4+3X
      /4j50HqO1lgw1uSRXeFh/IjeF7Ry/zMKP6KDOygu1eJ2O7EaOsjauBNCowgPUmFzuAAxwSHh
      BIYFInG6qDiyh4IOIQnRoTgdDjq1bQQkpxKk8UUiEkJTARsONxMWFYVcyAUP3dcdsenLqW/2
      IybQg4cYIiKiSIoLoK7tp1sYDRzavB2LKoqwQBVuhwuQMWLc9UQFKBGJPLjc4HY5wS+WSXc+
      wNgYC9kHCs6c7vEgvMDBmrvsW5pOZPLFpuN4bHqsMX1JCZaRu3oDguRr6R/TzaeDogAm3HkT
      Hy58h1ypkpSh16OQWjh2JJ8AqxPZz5wiloloKMmnPFaKBwFRqQOp//Aj/nUihJpOGUiV2JqL
      OXHKidPTfUUgFwJLZzML33+VTTIXySNvo098MpURa/jXa6/iwof7no7iyMkfniFCJnZw/Ggu
      YXYHZ1LfiZFKRYCCxAwFO0+3MUxhZ8vSJew9WYlaGczo6XGAAadORLDmEkeFcLuc2B0OPB4B
      IokEiViE22HHJRAhFXdnGdwZPB4PLocdh8uDWCJBiBuH04VQKEQgEiP0uPAIRIiE4HS4EYkF
      OOwOBEIhCERIxAIcdjtuBAgQIpGKcdpteBCCQIBUKunGWqjfEg9Oux2Hy41AKEIqlSDk2/fD
      hUAsRioR43LYEYgk4HKCSIzA7cR+tr2FIjG4XAgkYkQCAQ5tMe9/foiZT9yNn9jB0dx8kpIz
      0Gh8aM9dzeKqJB6b1g/JBWxgrxTCyyXD43FxbPta3CljGRinwWQyI5crwGlk3dp1XHX97UT7
      /1w//dvhNQAvVzReLZCXKxqvFsjLFY1XC+TliqZLA3A5LOTtWMv8hcvIr24/e9RN6f71zP1s
      KfXdfNpQczKb/Fr9L5QwcDz7CNqLq8G6LDmdv5PChl9yTOnJy85Ff26ejAtKZ/1Jls6dy9wv
      FrC/sJ6fUWj8R7o0gLoDy/h4ay09ooXM+/cnVBjd2JoLWLJ0NxuWf0VlN08pfOrQOvad/iV/
      rY7967Jp+x8NwGGtZs3izZh+x4Z0cv8ajlT9UlqsDvas3Y32fzQAi+4Ua5bvxHaeXsa2ypNU
      6wMYO6I3+1fP4Xh91y+lvqmQlZv2nI8a1IhdqCC6Rw8CvlxLbpmW5uJt+PQeTExN2fnVsBtQ
      tGMjR2ubqDpVQe/JjzKhl5I9674mu6wGbbuca50W9qxcwLaCNnqNmcoto0NY98E62kR6avQB
      PP70XQgqD7Fg+VakMUO4+9axNB/dxNKt+cQMmMj0SZEIPArc5iZWf7mYw5WdDLn+PiaNSEL8
      O3MU5G9aw4n2VipLaxl0y2Nckywga/VSDlTX06n3x20zsGP9InYWdzLo+tuYNFTNqn+tp12k
      o8EaztPP3IXpZDZfrtmJT+LV3DNtBBV717Emu5ikYVOYPFKNUCDHpa9j6bIl5NcZGDX5YYbF
      Gti8dT8d9TXYgq9i5n2T8JcACPENCicppS8RmnU0d7SzpyCHtNGjELcUkN8SRIyjgOy8Suqb
      Ghky9Y8MCnEgkUi67gFiR9/DPX2dLFuyhqJmHTZjDev2VDFqcPpl5QBqqzyNM2wwf3vsOnJW
      H+Tkkc3kGNN548XH6BGgwli+nU01MTz7l5loty8it8NEWVELo2c8yCBHBQUVFcx//0uMyiAq
      ti9n84FjrMo8ytAbb2PCsBQEzk5Kjldhd4tQawKJ1LjZtGA1Tdau63a50VRWgjRxDH+deTV7
      1x4md+96isUDef2FR0hUy2kp3MpubSovPH03td8soKDTSEmxlgn3PUjP9kJO1lXy+ftfY/UJ
      pGjDV+zIPcGa7EJG3HQ71w6Kx2Vtp7SwFqdHiG9gMJH+TtbOW0Ojto2iaisz//oUAQ1ZnP5O
      mmunYNca3n/vbSocCfSN8af6dCUmhwtLZyNV9Tq0dRUQOZwXn3+UQ6s+prqhntLyuq57AIFQ
      zLApsxhUlc2J47XEito54HGzfN4c8qtrCNq4m353j8KnOwcHAkCCr58PEpkRCeCw2lFoNOB2
      4cKD22ZD5BuKRCrHV+HEZgOpzAelQoZUIkHgcuBRhjP2xikk3zYFqW8AtjgVBccP8ck3Oh54
      ahwA9cW7ya1RMn3KtbSW5+H5XYZWkeLr64NYJkOCDbvViY/GD1wuXB5wOexIfNWIpXJUMid2
      O8jlqjNtKRaDy4HAN4Zrb5pK3K03I/MPYECQnJMn9vHxZif3PjAAgKpjWRR3BDFtShRN7xXj
      8YBC7YdcLEH6o7xcEhL6DCWSEzRGp+IrF4DDgcPlxKbTnw3cJkShkANiJGI3Z9xfnq4NwNpx
      mrlzVlBvtDN6+h8YMqw/Vw+7Fru2hleffoVJk7v3yy/38UclEyHzUZ1JwiCU4uevJLpHKny6
      iDdrg3ALZWhSRpG2/xNeeXULwcnjuSlMRIm/GpFAgFzti8QvmuvGRLFs3hx2aaK48ZYbaD2c
      zb7iRlQhPVFKJaj9fdAER2FvXMm6XfHI1D6/q+GPXOWPj0yEXKXGLREhEMnw9ZWT1HsgB+ct
      4v/KgnDJVISljyTy8Oe89JqDyJ4T6Bks5qhGhVAgQOHnh8wvjnHDA1n3xWyUATFMuXUClTnZ
      HDndhH/EIJRSKWpfJYFhoegyN7FRFouPvwqJRIZarQSEKNX+SM8qccRSJSFRoUy7cSyrFyxg
      a24AieFOPv/XByREqVDHS8BuYfeKORTukNPvhgcJ0zSg9vF6gr1cIRxdMZtSv7HceV3aj457
      DcDLFYHTZsUlkCCT/ljAec7gxe1243Z3522OXrz8F4jEiPCckwn1Zw3A2xN4uVI4xwDEYjFq
      dTfe5+vFy2+IVwvk5XeH22Wnrb0Dt8eD02ikpLwcN2AxtNNhsP2obJeZ4j0eF63leXy59Buk
      EYmE+coBF0c3zOWDBdnEDxmOuK2IRXNnk3msiaT0FNSy7rJTzMaRdYvYWSUiIzGMtpL97G8U
      kxCqPm8nnr72CO++9SGbsrLYf7SAqJ5DCfilnaCmZlZvyyMuJZb/HBHnxzQUHCS/0UNs2H8Z
      s+iiYGXfsnnsb1XSMy6Y2oI9HOuQExd8flsWt8x7iS+WZ5KVlUWrJI70uMBf+Po6KMzMpM03
      imCf82tFh7WFrG37iIhLorNkB6vydPSOUZC5bB4L12xDEtwDH3MRy/eUM6T395E8uuwB7OZW
      jhQUc2TbZqo6zsR5MVUfZMX2OqoK9tJkNbP4/bex9byF64JLeeuLTLqPHMZJQ9EeNm/ZQ53B
      jq6+lGNVvy42kG/0IF545x3+fMfV2AkmyLeLE6yd5OQWYeui2A/pqD5FcWV3jzjkpK54N+vX
      ZtPq9NBWVURh/fnn8Z0w8w3eeu1ZUpR2AqPCunBAuajNz6W28/xFRS67jvzcY9jNjazdcJJr
      xw/n5JbV1Mr6M2vWDFL8ICx9MPGNuRxs+15k1KULS+YTxg0338DuFevOHvGwb+t2ogcPxlB9
      ApAQFR3GobITFNlMJCZGdKuEGUKZLzcODSJzbxkjzyYmbCjey8o122ixqbn1D/dQs2EVyVNm
      UrHqZVozHmNqXC3rc32YMbUfYgF47DpWbz7IuJsfx99jZMuieewvbSGk93geuTmNdfMXc6yq
      g+irruX+q8PP3tlC5sI57CltQZk4gqdu68Xid9fginJRVu5i5hMPIqvczaJvctG3d5A8sdcl
      a6PzReQTxNRUJet3VdLXA+Ch9sROlq/fiY4gbnt4OiWrVtNv2l0c+/o1XMOeY4xvIdmVwdw2
      oQcVR7ZSFzCGexKVVBzZzIqN+zCrE7j3vtuwF2aydPtRhH5JzHjg1u/uWZ+3mZF6hfEAACAA
      SURBVM/X7sMmCeaO++7GlfMZO3TR6MsLSLz2bqZleFj45WoaOs10CgPR1Z2mOTCaBBVUhGnQ
      7imiVJXITRMHIRMJGT4kgE/2V3DV5GSE/BdzAI+pgs2HWhmQHoXb7cbpsOBGhsvYRl27CfEF
      Tm3/6xEQcdUEpGXbqTn7Rdm0ZDbHavUYanJYvr0edYCDk6crMCCjo/AUpfn7EcfHIxKAx+Pk
      9K7FaMPGMzglFGfNHj5YfhCTRceW+aupd4NIIsLjNpCVuRmd+ezXxeNGKJaC08qOTdtotZrQ
      dni49u4nGRcKZaeL+SKzmMdffp0HJw3m1yccvRQIiRoxGdfxjTQbnXhcTlZ/OZuSZhNtZXtZ
      t7sFhdpM0elK7EpfmvMLKT15EHl0DK7OCjZklXPjrdcidreyes6XlHXaqclZw46TzQiEYoQC
      ISW5e8irbD17Pw9ugQiZUEBD3n4OFDdgaq8jdMBUHrl7FHUlJ8lZu4Xg0ffw4nMziZKDUdeC
      n9ofEZA0bApTx6RQfyKbzxdspNMGgUGhNNc34/juiX4l5tZWguJC2LLiK4rqG9i7dTN7j1Qw
      YNw0brgqktwDx/nlgHiXAJE/g3oEczC3GACJbyS3PvRX3v9iKc/dlEpiQgq1B1ZjD7+dPqpD
      rD2oZnhPfwSApfUUC3fouX/6UJQiQCQkvv8NvPjWv1m19FU4kUWuO4nnn/sL6aE/EP7UHWZ9
      qR+PP/snBiUG4gGEIhkKhQSxWILAA26PEJHIg91m47LxvAgDGJTkw8GCSgAk/rHc+djf+Gje
      Yp64LpHU2HhKD25FHH07KZJdbMsPYlCamp1rviZgxFQGhCkRIMQnMJ77/vwy875eym2pHhav
      L+Kuv73EtBGpZ3U6AB3sWLaD4Q+8wD0T+6PgzHEfHyUisRiREDxuNyKRCJfDhtMFMoUvVseZ
      N7ChogR3cAbXTboBZ/1u2oxOrFYzCtX36Zi6zhNcn8uHHy6jXerD9qVfEPDAY7z08hAcukYC
      JUqumXor8h4+LF3zAXnSIB6edWM3ihYnIigmBYUc0q4agianhJAgH0ZPmsziVXM5sE7O+OkP
      clVsGmLrLpIGpBFw+ghKRxTRZz/JreXHaWqv5v3XXkTpH8pdDz3C5MQ5vPv6q2iiBzFz+kDC
      spYyd0UnoXHJSOU+JMVHIg7tSX9VNgu+MuEXGYtC6kNsShRyICA6Gt/IeO4fU8c/3/g7Yf6B
      xA/p7kvPIkJikvGTQcrVI8g6WkN0kC8Db7qBr5Z9yA6hHxOm30ff5HSEe/JJ6J2ExB2CrzSN
      cEkbK/PrKD+5gJIsEX0mzGTc7SNY/vn/sU0RwpQZ07l2oB8L3v+cmMBgkn2VqGPjQBlI+Kg0
      lnz+IYkR/sQGqPCzpuJRgpQAYqNkDO2XymcLF/CRbxCBMbEER8YjyMqm1Q4Ch47MVSsobdJz
      /fRHifbzkLehkquHTf3uxfdKIbz8vvDYObZ+AaXhN3LbVRFYDQbK6+rI6NEDS0sJcxcf4KE/
      PYDq7EjdawBefnc4LZ3knaygb/9+SH+Q67apLJdGYRz9EgO/O3aOAbhcLhyOi7yp04uXS8TP
      zgE8v89dHF68nMM5BiASiVAounnQWy9efiO8WiAvVyAumipPobW4u9YCuZwWSg9n8eEnS5DF
      9yQmQEnDyWw+nTOPzTsPEdFnGMbC7cybt4gNWUdQxaYRGaDsJhvmrexa8H+8t3gzBw4XIA2L
      Q1i6ip3aGNLCzmZ9d1hobjchFneyaslaYlLS0bV3Iv3BWvF/wmZopdMhQSntTr7vC4WFLXNe
      5+Nlmezdu58OURipcUE/+YK60LW3I5D5IL7An9ZTOxfxwntfsj8nB6MsksToQEQ/eukMrF+0
      EHXiQHx/GF/X48FYfYRl+2pJTxZ23QO4HRZ0Dg8tpfm0meyAlo/e/pjIa+7ntRf+QJTCTqdJ
      xi2PPsvNaQY+X7arG2mBXBg6Wrn5iXf4083prFq7k462Cuq0P1DqWLUUnKzG6rJSU1mFw2ai
      6ETZeTnzDI3FlDZ188BIvxkujAYDt//pHV7940Ty1+2i/ZwyBlZ+8jblFyFtjsFgps+UR3j9
      LzMo3fgVleeEK3JQV3Eay0/WczzAvt05JPcdgJ/Y3LUjTKIIYMjVQ1gze96ZA43HOdYiIKEq
      j436cK4dP5y+I0dhbCxmTlYRPabcct4qyIuJUCxCJBTgAU7uWsmrmyoRZlzPy+P8ycxvZMCQ
      s/mtzG1kHimgz/gw3rrrXZxpQbS2w6MvzGTvK+/RFBtKe2MnNz/0Z0JLtlEcloHm9CKW7G9E
      ZqnGGjWZP98Ry9fzvqa+00nMiClMT27lnfn7EPoGcsudsxiY4H9J2+K/xW7SsWvTCoqs5USO
      GovG0sTcf/yb0yYPPuH9mdjbSeaeI+Sa3mDmgzPI+WoutU45fa65lYiG3XSmTiCt9htmnwrg
      b3cPYP43x3h0XBLzl22kTWui58TH6U8Oy7OqkdKE2Xc0jz80kC3zvqC0QY//Vbfw9B0jfvR+
      CYQixCLQV2czZ7Mvs6aE8NlnB5hxNkqHx2Eka/kiduZX4VHE8fhfHqGssZ4bIwKBlv9iDiAS
      o5AqCAkPo3HvPOZsLqamYBuvvP4ByVOf46EJPbvVxMJm1DL/H8/yzxX53DBhJAogddhknnr8
      Xqxtp8Djwu78YQgyDw6HC/Ag9Yvlnidf5MGhHvYUtSCUarjpwb/yxORkjp4sxe1y4HR78Lgg
      PGMMLzz/ELKaJgoPrWVrQQsuu44Tx0rQG/W4lOEMumoQYf5SLtc1NpFYSkRMAhm907CWV9JQ
      upeKyJv4+9+fp5c1B2PKjVw3chCP//UlBkZ5MBhEpPUeSI/YYFLSIqg6XUReezAD422UFpYS
      FhCL3WLG5RBg07eSe+QUdrebkNSR/O2Nx/Grq0FvMGNxCHA7dBw+fJLvPFU2LZsWvMfLby8m
      +prbiVe7cLrcgAfnD35Pt8uBxWpB4HJSW7ibGq0Rl02ITCqBM2lOfiWB6aQGOpEER5MaLqGp
      rZ6VH8/D5+r7eHDSVail3StGikyl4YFn3uHNl59hbK8oACRSKUKhCIHgl19FgUAIbhu1NWY0
      fgpAiFAIzXVt+Pj8UPAhRCKVIhIKEQoEKNUBZAy/hTf++T5vPTIBZdRI/njPeNxlu1ixs/TC
      PewFRiRTkNJrIAP6JKKvLMcgVuNqacJiNtKslaD2EeHy2DFbrbgdvkx9YhbpvgYWLF1FQHwq
      nYdP0BjoS2//IPJPHCEiNYXcrXtJmvgAT91zHQoPeBCc+X1EZ8bnbUUHaQwfx3N/uJ3QHw7m
      ZRpuuP/PvPXmK9w2NgOJx4PVZEbX3kyL/vthqUlbSU6Fi2de+BNDEwLweHwQyVzYHQ5A0PUk
      2Fify7tvfobNL4DashLk0YOYdm0v9qxfToV8ME/fcRWN1Y00VhwnKyuLMr2a3j2iuh5bXRQ8
      2MxmNLE9CTo753XajAgDkon1F2F1i0mLjcLgVpKeEILD4iYhKR6bU0haih+ZcxZz4FQJir6T
      uX1EOAdXrCIrPxd76BBm3DAUidOIKCiVSKULsV8YsaFKTFYJ/cZdg+x0Fl+t3kaHJIwUXx3L
      lqymURDFlEljCVJdjmmV3GhrK9iwfg17j1Qz6t77GJzRh2DzYRau3EvqTfcxNjkcjdzB+tWb
      8I1P5fjW5eQUaxl70y2kJsYg0VegiL6Kq5KUlDVKGT1mELFRCnZtWE+bNJSU2CQSotVIVaHE
      RKox6QWkjuhP677VlBhVRMUl0TctGjHgsFmQaCKJCzrzIRIq1FTtW0lus5DExBTSUyNxmqwk
      9ByMT2cB6w81EhsfTVKPfnjqitGrE4gPlnulEP+ZBpa+t4exj04nVA7QwcYPNpLx4L0k+Fzq
      unn5r/F40Fcc4KscPXfddp3XALxcibhoOF2KLDL1XANwOp1Yrb/DiK5evPwM5wzVhUIhcrn8
      UtTFi5eLzs8agFDYnRYyvXi5cHjfdC+XLR63gxPHjqC3nk8qGRcV+fuo6vixa7jrDDE2HYe2
      r2f+ir3c/rc3GJ8eRnH2YhZuykck9+WOJ18mXJfDnC9WYRL5MPzmWUwaGP3fPtNvTkfVEeYv
      XEebFSJ7jea+28ah/omr2tBSR4dLTWx4d47Lc+lpLt3HwqVb0FohfuB13DVl5Dmh8TsbajBK
      NEQF//IWT2NrDQ0mJSlxQUAnK198nR1mCWqFjKsn3cNN/YMoKu0goUcC8h9JrTr49J1Pufmx
      56B0PXsrEklO1bN9yWJ2nGxE6hPCpBn3MCjBwCu3vkhnXARSuT/3P/YUGomDFRt38sS91323
      DN11DyAQEZyYisLchsXhBlcjcz/dyIgZT/HGK0+T5Gdl61fzcfWcyptvvMg1GaG/pk0vLG49
      u5atInLCY7zxytOEtO4iq7gNu1lPc2MjTa1aXE4bJ3ZsYPnmw7R3mrBbTbQ0NdLY0oHd5cZu
      MWAwmejo6MR52excvwC4O8lasYHkm57g7y//CWllJvtOd2Az6WhubKS5rROXw8qRTatYuyOP
      dp0Zu8VAS2MjTS0dON0ebGY9RpOJ9o5ObBYzRsu3qjEPTpuamS++w7N3Xs2OPftxeuzodWZc
      bhe69mYaGpvQmWyAG6Neh9PWSebWCkaN70NH6V52Val44fU3uG9MJGu37MSFE3XoQJ557S0e
      GSpm6Z5ygpN641N9gvIfrPF0aQBiqYqU9GSUkrNFtZU0OgNIjvCjeM8mdp88QXGZlT4ZibQU
      5/DNjny6zWKqpYOKugAG9gtHogggIzmCU1VNlOxawNRrhjNs3DR2FVZz6PgJjh/awa6jp6nM
      28DdE0YydPQkVuc2Upj5KR+t28v+nMMYuo/K7+JjbqW2NYx+vUIRK4NIjwvmdG0LBVs/5cZR
      wxg96R4OFFdy8MRJcvfvYF9+FWU5y7l9/NUMGTuZLcVaDq3/mPlb97MvJ4/KE3nknGj47vIO
      WxOLP3ybxTvK6dsrDYGpmq3rT2C0tvLZ83cyePAwHn7pa77N92lpa+CkREW6r5C26hYiU3uj
      loiISUzF3NyKAWipOMicf7/Htho1Q1M0CGX+DIhvJqf4e0/xr58D+EYRIjXRZjCjr9jN5iOd
      RMYpqGtqx9VRwTdbD2PsLl9KZSDJsR0cPFKH3dTG8ZJ6MhIj2Jt3ijeXbmfurBTKjAFMGD2M
      waOnMPWa3pzIzeWhj79h8d9GUd+iA6EQdXgqN04cj+ZKXhzzCSEutIkj+Y04jM2crGglJSqQ
      XSfr+Hj9Tt6ZHkGlNZSJo4YwfNxUbhqZzpG8k/x1/hYWPjWAiiYjiESow9K5aeJYVD8JhCSW
      BjPxpmsw1jcTGxv7nRS9oyoXY/RMcrYvIMGs59skrQKBEKnkjDQiOD6MuqJj6OwuKksL8QkP
      wxcIjO7LtYMTqKix0Ts+GCECRCLBWc3Q2ft29dxnwqJ8TYXBQvuiuQQ88iQP3j+OVQvexegI
      4p4nhxFlULBw6RLeM7qYNH0mmu4ytRaoGTX9DhZ9OZeXVrWhFafwUowaeWw429asIkohQ6MQ
      ERqejn7uMuYpBaTHxLFu4zLig8AvSorMo0HjI0Vw+WkXflsEflwzfRqLv57NC0uaMar6MyFK
      jS0ykI2r1hAmURApFxGdkcbGhUtYJHYTFxPFlnUriPMT458hQWEPwF8pQSAAqVKNv/PbL4oQ
      3+AQIhIH8cj9Dr7cuIHEGYMJDFKjDopD3vkZK3ckIff3Q4wITWAQPgGBhBt01Fg9xKSNZPyp
      r3n7lZfpaGtixIxnwCMhKDKM9GGTiJKtY8WqXcy84yoKK/zpf+P385MrxxPsMpG7Zx/ylKH0
      iPD1vtD/Cy4jB7P3o+k5nNSwSxUFykX17vlsMY5h1sSk7zbDtFcf52i1h7FX90Xyk99YW3mE
      uZm1PPPI1O+GPleOAXj53eF2Wtm/bx89B49Go+hqMOOkcN8WPInX0jP8+z3v5xiA2+3G5TrP
      FN1evFzmnGM2Ho8Hm+3XBPf24uXy5WfDoqhU3Se6pxcvF5Lusl7j5UrE48Hc0YLWdGbE0VBS
      QrPZjMfloL6hEafrwm8e7TpFkttBQ8lh5n+1DmlUCuF+ck4f/oZPP1tMbp2TPr0SkABNxzby
      0j8+xRMxgOTQbrJjxOOhtfwQcz/+lN0nGghLSMBPBi6PEFG3y2PQ3bGye/EHfLJ4PYeKGolK
      SDyzPPyTUge2Lcbul0h99hZafGMJVf3nEAlul42NyxYijsxA2HiEjz76nIPlWuISYjm59Sva
      /HsSHSC/oLvnuk6RZNFSWF5NwZ4d1Got4KrmX28tZdSdswgv+4o5uxtxmur58uv9YCqjqN7Q
      1SUvHrY6lny0jTFPvMLDkwfisJqoPbKJg5XdqI6XDU5aGmq5+Yl3eGCUmtnvzKHOfO4XuqLo
      MG0mOw2FBTTof9l1birfTqmrP6m+Oj6dt5+xd87izinDUckVTLz5Wvat3cKvyJL0X3EeKZJC
      GH/jeLKWrDxzQKghNkbG8cMHaO9QMyTWn8q81WjD+5FMYfeRQQCIfYiMdrP7m0xEQ/qRFqeh
      8EAhpsAbKc3+iqW5WlzNp/EbfCePjg1i3uz5NFmFOJXJPP/cJLZ/Mpe8ej1+GaP40/hoXp+z
      Do3ChtYVzQMP3kzj/jVsPFyOb0QPZtwxhf2r5+NU+uDS9OTq4A5Wbt6PVRbObQ8+SEaI4jLc
      B/zzRPa5gYE7/kJhVSunC5ay41gT8tBUZj50zzll6/M28fma/ViEGm6/fwZtq5dSHxeJm3CS
      9AdJGfEiUpmZ5HAPRw7mMXzCOFJ8fRCKehIqWkFN62Q0ERcuVOevnwPYTTgEUtxWM2anE4ep
      iW2bDpDcKx2bzYnNau4+ojFxAJMfeZRBIW42LfqETUersOhaMdg92ExGFIkjefmxW6gpr6Fk
      /1LMve7i1SfvwmU34XK68IhFuBx6Nu3chdVixigI4d6nX2ZUYAd7d+9je5mVl1//O1cH6sg+
      WE5nQxWeiCFMH53GssULqNXZaDp1kOy86ss2FMrPczazjfE0B3LFPPHyy4wLrWFNbtNPynlw
      ukAiFNBccIhDpxowttVg9u3NHZP7o60WExGiQCALZNpDDxKttnBoxVdszasGxAhkUvSmC/tJ
      /fUGoK8ivxZGXz+J/qEmcg6XIY1PoyV3EwdLWijJ3Udbd8mRZO6guNZA/7E3ML5fAMWnar7/
      m0CEXClHIhIhEAhAIMDlAZfTjsPhxFSyi132Hjzzl8dJj1AAHgQiMWKhi06TFblChsthx+H2
      YLPbEElEoAyld0YsMrEQuSae+//0Ep/M/Yy7h0X/br7+AC2lOzjWGEvP+CA8njPbaC1mGzLJ
      T8f7HWSv2s3VM1/gruv7ofAAqOndrwdKiRS/IDt6owuHsZ0TZY0k9BvByF4aysvO/k4u+9n4
      PReO8wyL8iktLqiprECVPp4RkQbWr9tMm2YIjz0whZFDhzJi+FBUzhaSx9zFoLhusozqtlN2
      aBsLFi+jXpjC7VPGIDG1IIrsTxDt2FWRpAaKqNWLuXrkYIo2fsnuwyeptKm5Zdo1NO/dxOFy
      Hb5h4QxLCmTN2nXkHz2CLOVaplw/jCRpO5/OW4I1bCA3jxuAqaOVqOQ0AlRK4oMkrF26hJ2H
      SwlOzCBCc7kPgVw0FB1j/abNFDVJueW+6aSEh6MR1/L14nXoQoZz53W9MbbVEhzfF4m+DZ+E
      PsSqtaxem4XYP5jopDQ0bguann0IkYtRCRvYViRmcHoAdcd389XSlTSLk5g6ZRwBwjp2721j
      +NhhqH6qafgN8UohzmJvOMY7c1ZicopJGzuNe8f1+fEL21rI68uK+dPjt9Dds3ldLrgszXz+
      2Uom3juLGH8xhYXFxMUlo1QIOblpHgUBE5g+PPaCrtV7DcDLpcPjoeV0ATrfOJJDv89A7rab
      OHiskH79B6KQXFhX1c+mSLLbr+SdH16uJM5ZBhUIBGcmhV68XAF44wJ5uaLxaoG8XHRaq0/T
      2PmTtXKPm8ZTRTToL64SuesUSQ4zhQe28N6HC5El9iE2QMqBtV/w6cKV7D3RQFqfNCr2ruKT
      z79kZ24lsanpBPh0kxQZHgenD25hzueL2H20HP+YBML8ftmr6LabqW834OujoLPiIEv3naJf
      avw55epOfMOLT88mYux4wuQCbNoyPvy/dylyR9I/IfhsKSft9fW45X5c/lmUzHzz0Yt8tDyL
      fTn5SMISiAlSn/fSbu7aFZQRQKyfnaVL1hGbEMWiD/+PVZuzyMktwz82hUDrKVbsqqZHj3ik
      F0mr1XWKJJcNu0SBrrIErdkBrhoWLdrP5IefpK8lm4Xbc1i2JJPR97/ASPUpPt94lG6zncba
      yIalx5n8zGs8de8ENLKuOzxrSynvLF4PgMPSSV3LuYmAwENZQR5xPcTszGvCA7SdyKKj1wzu
      G5v+g3IOWior0P0utle4sVhs3PHnd/jrtFRWr9t7XmmkvkXX3IjWaKPt6Ep0sdcT5Qv19nD+
      9s7/cdsgJZszcwjoMZIoSy7Hay6eVqvrFElyDQOGDGD5ty+PKJK+PaRsXPYV+mo/7p3Zg2N5
      PmxbvZgYp4WKumNoHxhJ0IWu+fkg1dCrt5ClH33GyDGjubpfMIWb5vN5dilSsZxRtz2I//Es
      nEMnMDiqmQX/riMuajd520/xrNXNndcG03rqMO//PY9KaxDPPPcUkSoRmKvIL/LlplmjmD17
      G009RrF0zTccajnBQq7jxOFc0mNVxIyYSOvaPfTtOZSChe+y46QOVdpIZg335esVm2lt1dPj
      rue5e0jkZTUWdTmdiIRC3M5Ovv7gPQoaDDhirubNyf7MfG8PfcLsHGvx49+vPsDh5fPYWWbA
      VNfG+P7Xsn9rI0OfSkTM9155l8uFQCQEJMSHhXG8qIrhCb0vyrP8+nY31XKqRUj/QVcR46On
      oMrNHU+/xP1TRhPhL0Om0dBtptAiNWPufowHpwynZtcSlm05wMr8Dp57/e88dedg8nNyzjll
      8Lg76D9uMu88P5NwHykB8f147Pn/b++846uq7///vHvl3tybvfcmYU9BhgiCitWqqIijtXao
      3b9Kh7V+ba1trVbrxoGDLVM2hE0gQBJCFhnkZu/c3Jt7c/c4vz9CHQUNtFXTmudfPHLP+Zz3
      +XDen/n6vN9/IFvbgNk2KE3sqTtLlc9Ld7cfh+kENkkUty66jllLf84D12Qj8omZtvghFoyJ
      GizU28TZsmB+8uRT/Pr+63AP2HAHxPhcXRSXNXHxwHN44jR38PrvH+GHLxdw682zULsHsLog
      4HdSVlSBAwiOG833fvILRocE6Gyt4qAtiqf+9AfumJWN1O/FZFFiuJAizddVwm8ffpC/7e5h
      0cIZAMhVEly2Ly86+ZAOIAR8uJwu/IEAHrcbn8tCZ1+A2MQkwhRO2not9Fk8REaHc766lQkz
      JzJMTgPAQDeFpfXo4lLJTtBisjiJ8Nlp6LHS296NWK1HLHJjMffTVd+AGRBLJIhtVnrsLvyC
      gEQmQyqWMBgveFDSdq6kltjwIFobe4hUyqhs6fvUY6X6aBIitHw0jJVoEYna6ey2YLEOUFxw
      ioyF9/Lw7bP4b1LJqQzRfPcXT3BtqormdhPu5iLKReP50UP3khyuRgAkUhlSiRixWIRUrkQ2
      YMM0YKPfascvlREe4sLUN/jS0sjx/PqJZeSFeWjtMiMI4Hb6UA0xT/tPMuQk2N5Rxqt/XwXh
      UfQ0G1GlzeWGcWr27sgnkLGIh24dT2vRHlZt3kfC3G+x9NpcZMPlsIlIRF99EWvXb8YWOpm7
      b53HVRPi2LHyfRqERJbePp+oSCnH9+ymRx1HXlwiKaNTiXY3sW7fObLz0lFpQkiNi8LjdhKT
      lI1WIaHNamXWgpu5auIYRqVqGRCCSQxVIQ6OJzVMiSsgIyMtHhkCXpdAVNYYJmZp2btxA2f7
      5NxwdQan8g/h0sWRlJJBVrzhv2AIJOBz+whPHc+cq0fRfKYUTe4M5HV7KesWkZyeyZjMOHxi
      HVlJYfi8AZJHTyJX3cvqD/ahjE4nZ3QeoyJb2V6pY3JmCB6/hJwx45mYHU9ZSRVJWYkUH8kn
      fso84g2KoU36DzAihRjhS0Xwmnnn9ZXMvPM7pIZ9oqUXAvSU57OuUs63F89CLflyGtERBxjh
      S8fU2ohfG0lE8KcdoMt4HiISidR+Oa0/XMIBfD7fiCOM8LXhkmFR1Gr1V2HLCCN86VxSDCeR
      /NdvW44wwmUx/BcfRhjhC2TInWCvy0LBrg28tfYoSx7/EwvTpLz5zF+oNHkR9Jk89ssf4K0/
      xqYNayn1TOXZ3y1FN0ykQARcFG9fy+bCWiSqcK67826uSo/46Of+1jKaRcnoOg+zt0LPg/fN
      +NziLK2nePvDWn78/aVIvm5NR8DB8Y0r2VnSgFQTzaJ772FCguGjn01NZ+mWp5IdHYTP0cfT
      y9/lkQcfwXAZurDOyl1sOCPikaULrsikik2P8eROO0l6BZETr+NHd87hSj+9IR1ALJGRmDce
      /eodePwCdJ1hR62G5557iINP/5QPTt/CXWlxjE0L50CRe3jt67i7OZzfzDefeJwcqR07SgZ6
      e/ErZDhdIPU48Eoh4PPgdPsIeB10dvbg8osIj4pB7rdjHXDidDhRGSKRBHw4nW4CXjt9Az5C
      9Eq62jpwBySEREQSrJYPbdN/K84Ojhzt5Y4nnyANK06pAltPLwGlFJdbjHChLoHBiG8uJ4EL
      X0PAM0BbRw8+kZyIyCikPiv9dg9uhwOFPhKfz4PLJcLvttFnB4NWQld7Fx7khEdGoBIcdFnd
      +F0OpNowogwaRCIRAZ+H+Q88xn1ZZv70+Dpabp1JmM2KSq/HP2AhoNLit/ZgcwXwBMRERkWg
      lPjpam3DJVISGRU5tANIZBqS05JQSS80eaHZ5KlX8vJzL+Hr7MZf1YBmZSSGqAAAIABJREFU
      xjQSwobhSVlFGNNmhrLyqT8wes4N3Dovl/3P/JWSsDhysmeQad3Mqeg0rrtQC67uJg4cLMDc
      1wHB1zAjsppNhVbSoh1UdyTz4P1JgMCRzSto1ExiycxQ8ncdxGztxhUzgWV3X1kL9l+FKoop
      k1Ws+MMfmDD/Zm6Zncq2J/7EuaRURufOJLpjE3WpmYyOvfhWR3ste/cX029qR5d2E9NVh1h5
      Vk6Gwca5nlDuvS6CgM/FnrVvYk2cz4KsAPm7C+k1taLKW8gd4RU8utPN3Eg7h3v1rHj8wU+V
      77b3Y5VI0YhtbH/7fWY89BBdW1fSP+M2zKse43zotdBeStw19zBLUcsHJd2IXRYiRy/8F+YA
      mjgef/ENfv/rhxgdEUx4zGV40VeFWM3Ub36fPz75/wg2buet7cWAlzHX3sPt88bw6fZawNJl
      pO5cPY3GRmrON+ITpCTmXs29378DQ18vLh80ndzC5lIf82aNw9PTTGVdLY0NdZTXtXw17/hl
      IdYwe8mP+OMTP0Ncsor3DpxDJAowaeH93DIr53OGHn5MbeeprTHScN5ITUMHApA4eiZ337+U
      EE8rXj9UHVjL3mYt86ZmYu8wcu58LU3GGiqNg7GGokdNZ8mdt6GWfJzfS/D72Pbqr1j6g2eY
      unQJEZdYu5Eqgph+w508fPe1lFaXcmzTHsrrG+jo6sXqGLiMNKlOC/XGGsx2O62NRkwpYhrO
      tOH3NXGiN5wfXhVLb/N5apt7cFgcNDZ1k5MWccVjsS8EWwe7C8qJiIlCkKtQKeSAmhCDGvFF
      xz4DtFdXY8idy8KoNj48MPjXwSOifKR7T5zyDeYke9ibX8wMVRHSzPncFNPOuor/8XPU/S3s
      OF5DTFwEIqUGlVyGSKQhRK+6dLYdZz81584RFm6g9UwlSTNvIcN1iqNNgz+LPlmpwKhr72Ki
      qondR2tItZxFP+Z6rpOfZU/fJ67n0/eIJFIWff9JJjn2sfPYYXqyr8fr7qaqrJyOulZipoPf
      56a5rgpry1lS42aQpmmkSTSF68eEIVKFD60FclvbOHa4lJicPBR+N8ExSbiaK6jvFVhw972M
      i1VRX1JAnV1HXlIwHq+GpNSo4eEAEhliRw9l5edQJV/FDbPGEKzXExEfh1YuQqrUEhKZQJRB
      gyE8ipwxmfS11hMwJDEuJ4PElFjCIqMID9Gh0YYQlxJHWGgEE6+6CqxWYsdPx99yDsGQxJi8
      TBKjwoe26b8VqZyArYPyyhp0Wdew8KocdHo9EQmxBElBptQSGpVAmEYKIjG6gJ26hlbM3iBm
      XDORjtoa1LGZjM5KJSEhBkNELOHBGoJ0IcQlpRAeEcvU6ZNx9lpIHTcJR3Mtiugs8nLSSYiJ
      QR8WTXxoEPrgEBKiIxGJREiVQYRGJZObm0uExIpLnUhShITG1j7SxkwkNTmSlhO7OG/XEJo0
      hpvmTCQ5bzSe5goa2q2ExaeMSCFG+F/GTem+rWgmLCY95NJXjDjACF9rLpoDeL1eBgYGvgpb
      RhjhS+ciB5DJZBgMhktdO8II/3N83fYzRxjhUwy5DCoIAdxOO063H5lSjUYlJ+B1MWB3IZIp
      0WqUCD4PdrsDv0hGUJAa6TA5ERbweRgYGPgoX4FMFYRW9Vm7tQJelwtBqkAuHWkX/pmAz41t
      wI7/Ql3K1VqClJ+11ifgcTpBrkT+OZoRQfDjcrpRqNR88pMJBLy4XQGUKsVlJzQXhADtZw/T
      pM5iVITiIzsV6iAkfh9StQopfs4f3kpf2o1Mih0se+gjkZ1lvPzC2xQWHmTTnhJGTZlE/uv/
      x/o9R9my7TA5M2ZTs+0Fnlu5m5OH9mIKSiM3MXRYhAJ39BjZuPZtXnrqFYo62vEoohmV+Fnx
      KvwcXf4CFdI0smKGSXj3YcRAZzXrV63ghSdfodzSQ0AdT2bcZw2VPeT/7VkaI8eSFjoYIuHc
      sUN0SfVEaD8OmeD3tvPCH/9O5pQ5aD7RLlk7C3n5hVNMnJmLVOyl7sguuhTJhAd9tkrZa2/l
      3XUFjMnSs2vN+/zlb69R09YBmlAKXnwP+axpRMpkGMJVrH17I5kTxqGWiYfuAZT6RO7/6aME
      uWp49Kd/orbiGBtODfD7F56kdvnPeW9/KZFnqhi76JdMs23mreJz3Hp1Ol/emZ7PRhOZzv3f
      +ymi5pfI/clPmKCV0lTfTGRyPP7+Liw+DSpXDzak9JkGGIz5EMDcVotFFkuUwkb52XN4gmKY
      mBlBfaOFtFHJuDobsUlCiQsfhvKPLwhtTC7feSgGb92rzF72KNmCl8bzzcSkJeDqbcch0iG1
      dmKXyTH32fACMgR6m2twqOORB+uQKKU4eho4WWZEHZrAqEwVPpeV8tPHkGnCmDIxC/lFLacI
      mToMpVpEd3MlHrEGUz8khEFFlZGAOpzxY7OxVR0mkDKd1PQxZDySQq/zdW798Y9JV7l4c90n
      ilMnka23U9FkYnZWxNBzAIlSh4Ye3nv5DYRRC5gU7MCpiUEbpEZvUNLTZmPc1LEUvP8Mf99m
      ZM6MsQxbSZhvgD2b92DxB+ioKeRQSSvn8j/g1TfW02L1An7aqwt5f/MhfPg4tOktTlY1ULDx
      Nfada+PQ2nep6PZyfPdmznV+zRPtefvZvjEfG9BYfowTVW2UbVvN6+9tpcPuA/w0lx1m9c4T
      +ICSY/uobm1n+/vrON/Xj8XUg8MHbvsAAy4rhR+8ypmuSz3IQ/n2XdT1+zm95a/89f39uPxg
      622lsaWV41vfYO/Zdpqry0nKymCoo8QiEcRHimhqNQOXMQl29zfwh0d+hn3MEp5+9D5C9BrE
      9h7cbi8OmweNxs7enUVc/4MneHhhAju3HuG/axFVIGvGTdw0cxQynJw8uB9PWCapES5KDpfR
      Y7GijEgiVB/H3GtTOX30KC3dEnJTIr9qw4chAnmzv8nCaVnIcHB0334k0Tkkh104YShVkpOX
      TN/5airPt+L1gSY0hmlXz2FMrB+z/fNLR6ZlxnU3MXl0LA1lxzC2dGPta6XL4sDldKNSXN64
      QyoT8FwY7g/pAF3FO9jeLidaZOLIwYO0acYzP9XLlrUr2duoZPHCq8hIDqfi2C4One0kMTOJ
      Ly+qyxUilhLs72Lnzt0cPX2OwYiFcoLU/6i4IL7x7e+T0nmSHaVesienoQkOISU5CY1UTFLe
      DAYKluMf9w0i1V/zU3NiKTpPG9u37+J4SR2DSigFQR8N5rXc+dDDhJw/zN7K7sE/eb3YpCpS
      k5Owt5V8ThrVAF3GUnZu30apsfcTj5SgVioQ4cfS3YMuPoOUmFAkIhkxiYk0NLV+hhzfzNGd
      O9h38DRWL/T0SokOH0zIMeRO8EC3kdLa9kEDZErSR41F4+2murYZWXgSuSlRuPq7qKkx4pYG
      k5WTQbByGOlDAz46jK1okuLRSUT0dzZwrtlCaEQIWl0ESrcJjzqCCL0Cc2szPl0UOqGPVquc
      aJ2P2lojTkFJek42dNfy+vIt3P6bX5OhHUbv+GUR8NJa14YhIxENAcxt9VS3DRAeEYLOEI7U
      1kNAH0OYVoqpqQnC41G5uuhyqVEHrEiDw/GbmznfbCIoPJ7M1Ag6m9uJTkzE1n4ewjIJVYHP
      bab8dCV2IDIlG4OrH0lMEgFTPeiTCdVIsXYZqWowYTBoCApPRu+p4pU1dXz/4cVopX6amtoJ
      j49HLQ7Qfv4cxu5+5KpQRuUmsPrVl5iz9MekhSlHpBCXj53TO/IZiBvL7NEJI0lEhhmC38Oh
      jSsQjb2V2RmfsdIn+DDuf4dDvjncc10qMtGIFmiE/xkEAn4/AcRIP2vvQRDw+30gliK5sPEw
      ogUa4WvNiBZohK81I3v+I3ytuazw6N3NtZwpKcXY3kcA8DptNNbV0NLz8WaQy9xGUVER7eYv
      L7b70Pjpa2+4kKHFj6m9gX87BZXXRnOT6VMx/U2ttZTVtw95a8DnpqG1nQvTro/wuWzUVBRR
      VFREUdk5LA7vv2nkF4GfroaqQRuLijB29n9hT/I6TJQVFVFccpbmbut/JNKI22Jk64Z9WHzg
      tfdRWXUOs907tAPY2s7wzvs7qCw5xLNPP0O1KcCRLW/z7G9/zvLdlQAI/gEOvvUiv/rlD1lT
      OPSH8OXhomDN3yjpBHByaNXzlHVffFVDYT67zzTTW72fXSWNn1+ktZzlrxz8OD2QYGP3q3/i
      N39Zh3mI/ymfrYvn3l2DL/DpC23tlbz89gqMRiPG5lbsns9KMuWj/shaDtVZP/c5A21n2ba7
      8j+ceMNJ/jvPsLfYiNFopLv/sxdMnP21bFq3H/fnGeAwsW7jnsFNU3sPG97bTs+Fn/rrj/Hy
      a9s5V3mSN1/8O8XNdrqqj7DtWOW/aLvAqb17EBJS0EsEGo5v5fm/Pc+2081Da4GCokbzk19N
      wtdxmoJ9z9BmdjPvrh9jqSui5MI1fcZidpujuHFs6H9FtpMzBVvpNnlp75dww223oAwNJ0oK
      +e+/x9beBHpMt3DP1Qns2b6Lbp+BeTcuIEzUx5F9+2nqOo8jkPVRWd6OSmr1c7hbW8EJo4t5
      Ef0cre4gwtUMiVfhNRZSXNNF8qQ5TE2UgruP3evfxR2cyfx509DJBlcj9MljWbx4MQB+j4OC
      g5vp7bLj1MQSpzBjtGpYcN1MVPoIYkOCaK4+hUVQ0tZmY2yGgWMHCxlQRLFw7nhObNvAmiMO
      HP7buW5WNmcPbKNhQM81C68hRtzNxk35eHVxXDv/WqKuYD9Drglm9g2LuSoOwEfLmXzK2t2Y
      +t2kJ4VQV91I9uxFjI4MIj4+DnefkeI2G+KuVqInTqbx5CFqOwYYM/NGwkwHWLnyQ9p7rdz8
      jRlEpMXxsbJKSlLu1Sy+Zy5tBat478PjPLwogoSoMJxtpZzsVSLqbiJj3FiK9uyi26dh6rXz
      SJV1sbvEiLenB0NyBgOttQjho7l+bjLltT1cPz8JASiu7mbhopmcKysdugcQSaRYGk/y1z8v
      J3r+t5ie9E8JkAQ3hXv3kzbl6mEhgLscDu/aAJFZRFj2s7PCTHN5AScb7GTkpJOaN5mZubEc
      Wf0uRe0ObE2FrFh7jAOb3qPeH8PMidnI/rEFIAicLy0mNDOXqZMTKCyowGlpY9WqtzA6I4nR
      gdMTQKGCbatfpsHkBq+ItInT8NTtY1thw0c2dZzexrJly3ji2deoazexNz+f+Nw0Wnbtxhqe
      h1BTyPG6dhqOb+ZsV4Dawk28uq6IlOwMxF4nAakcU9kW1p/sJCc7g6TUsUwen0bDwRXsrOjH
      3lTAK5sOcvbDVRilcaQmRSEJBK6o3pzmDpb/aRnLli1jR0kz549tolmWTpjTyOGKASYmBFi1
      4zQWayP795zB0l7FqpXvYAlKIkTix+0HpdTKmjfeRBSSQWx8KrOunUqEyMq2PQWXTLoXFBWG
      t6OdrtrjHK9owd5wnGdX7EIZnYpO7MAtkuPuLmfFxr242krZVdFPZlYY+dv2kJKXRvWW7TT0
      NmPtTyFYJ4GAicYOG3nZYzC31Q3dAzhMlTzxi2eY9sMnuG16DirpP20AWerZduQMrhArpspm
      1MIW2mb8jNhhIZQUI5aKcbpcBPwOrP1qkhQg1ehITk7H16Kh5cJwQySWEhYeSrAkmsRwLYeb
      O1AmTiQ+KZbxKSlUHDxIzrQ8UoKrkDIYq0YQAhSdPMXxlmqalBaaxC5sV81CFTGK6+ZNwdt2
      hoMlVeRkZyEODOD1CRBkIC0lHX9aPAc6zR9ZGj1pEU/+cDDgk9vajVwbQnJKEuGqIGKT01GH
      h9Dn/UT/KtUy5dq5ZMaGc2jNW7Q5EtBrxHR7BMLDQwkOlhITpae2qQZJ0Ezik+LJSsgiWRdJ
      RP4J8neUIr43mfDgy5cuqgzRfPfhP1/oAVwcKhARm5RBnCucdiGenDQ1gTI7n3Sr0LQpzJsx
      it6KXZyqaScvPQTB0448KJRgnYH4lDjUlvpLPzDgx9TQhjIpDYn44+FP+qRrmDgqjY4TKzjT
      ATk6Na5+O6BGGxlPSpKWYH0dqRmpRMkO4PUGEJAgQsBtPEb+8Sq6XW9QX1o9tAN0Fe3hQKeH
      pOJ9vFV7mnk3L6Dqgw3sKWmkvWEDu3N+zMvrtiHxe3ht2Texz715mHz8ACpGz5jDS+//iUq1
      CE/sNG4Lh4tT4w1iiE6n7cONvCH3MefqXF7fW4M0LgJJRDrjkuLZuPJV6qLBIWQAIPj7aPEm
      8uzzjxOtdPPsH35Pq8WOSKlEIQIfAVyWPnosDkRiABEGZzuvv/wsHd1ebv7ubR89u6fyCC+8
      4ICgCObPmTb0q0kkKOSyC3Y46e7oQimWgAgUITEM1L/N2q1qJk+Yj+2DUxiJJVYXR6elnQGn
      j4DHTrftylYEXNZeNq54gdM6yJix8LI0X3KlAgkgEvwM9JnosQcNKjaVQeSqe3npuVXc+81/
      zgjp5dyJPfzdfxqHR8kd35mKqOxjB5CpFEhEIMJHX6eJgXjhQv1+BuoEdNoP6be6qDpQyP3P
      v8M9Y7W0Hn516J1gr6OfHsugTE8klqAPNeDoNeG+sJKh0oWiD1IgEgQG+k0ICj1a1fDRyQgB
      H/1mE06vCJ0hBI1CyoDVjEKjB3c/bokWmd+JV6wgSA5mUx8eqZoInQJznxm3H4KCDailAcxm
      C4JEhlSiIlivRiR4sfW70ARrESPgsFqRKBU4PX4MWg1CwIfVbMYlSFFIQa3R4rb3Y3d6kKl0
      GII1iEWDq0N9fSY8PkAiw6DX43U7CAoKwmm1I9PpCDhsBGRKJN4B/Ao9Yq+NgFSDWi7B67TR
      1+9ArpAhUQahVUiwmnvxiFQYdCoGLH04vQJqnR61yIup34ZIpsJg0CO/7FREAQbMJqzOwRUq
      lS4EleBEUBqQ+Ox4kBEkC2B2CujUYuwDftQqEQ4v6DQqBL8Hc58Zn0SBQgxBumB8Tit9Vg+G
      UB0upxddcBBiBpOz9/ZY8IvEaHQGdBoFPtcAbkGOSuzB5legV8sQfC56es1I5ErEMjnBChFW
      rwSdUsSA3U2QVo2z345cp+Xo2pdxZN3I3DQ9Io0epQQCXueIFGKErwfOnmq27Wtg/uKF6D/R
      Po84wAhfa0a0QCN8rRnRAo3wtWZECzTC15ohl2sCPjf1ZScpb+gjJmsCk0bF47V2U15aiSw2
      l7Gp4fQaSzhQdB6AyFHTmTXqElkSvhJ8tFSWIEucTFSQl6aKMyiTJxOp+TeKdHdzpsLBqAlJ
      yAWBuqpyghMzCZH2U1pmIm9CFoorTPLcWl9GwJBOQsiwPUwKeKk9eYjSJjNKfSzTpk8iXPOv
      hz9oN5bj0aWSFPbpjKS9dSfYcsbNfYtnY2ks43RpHQMfSUOkxI+azNScaFoqCjld00187iRC
      +ss50K7jwVumX3E4niF7AHtnOfmn2onQeVn1wp8pafdRuG8zH7z5HBuOD25glO5czb5aBykp
      KUQbhlOKVTelu1dyzjT476Jdq6jru/iqf2iBOks2svpo9ecXOXCejeuLcAEIAY7u2UZdj5nS
      nas51e2jp+4oO/ZXXJGVpQXbKG764sRl/xnclOzdgEObgqzrJG9sOcFnKZYuh4rC7Zxs/Kd3
      FtwcPXCUnHGj8TYf5+V39iIJCaPj4AEsQfGkpCQRYdAQ6K7g9bUF6OJi6etoIjxrPPrGU5T1
      XbkQZ2gtUPQYHvzuRBzNx1jR18WA28+cW7+HqfLYR1ogk8lEcu5oJk4cf8UGfBUc3PoqLR1u
      6nulfOcnj4BChlLmYMPyFWzviqS+aQm/uSWb9954mxZvBHc/+C3iRJ1sXLmGc50t2AJXf6o8
      a1sppyrk/PjXebiNp9EGqek9t49d5Sa6a2qInXEbt89Kp3L/RtYfOUdY9mTuWjgbb0MByzcf
      pbOvh4V5YDEW8dbqDxHHTubbS2+k5eSHnKhqoq3dzaQpKZQXVzPm+ntYMC7+siOm/SeRKFRk
      5E1kKh52r2xmwNnJ5pdeo1WaxJ1LF2PoO0m9fBzjokQUFheRnRDBgdNl9NbWIM2Yz5KbpmGr
      OshrGw7R1dfFnAyBxuKdrNxyHE3mbB66IZyqrhiuTgmiePle0hZ+l+um6PEcOIAmbzwT4wfF
      Nr6uegS/ntGTJhN5ITbB9IlaVhfUk7co84rG9UNfK4Km4q386ndvMulbv2FW8j8rflxEpObS
      f2oNDyy9l1d3lf1bLcOXwdniU2QvuI+bk43sONtLd0Mltb0SFn3zeuYteYjfLpnBjtdeos4X
      QrC7ltfe2svWVW8hyvsmjz9yO5pPfn22Rt56ZTUkZqKXgqX9PFW1Xdhay2j0JfDt795FecEm
      mk9vY115gEcf/x20Hae2uogXN5fx8989wfUT4vB7bLy18gMWPPBzro1o4LX1xTRUVyHLvo47
      x9sptadw7+JJFO498JUlIvQMmNm76T1eXLmb0eOSOPHSi2iv/xH3zwnltfe2YGsr53yXnYDH
      QVVVGbaeJs62eLjv57/CUbmGc5Ul/G3dKX7y+BPcNDkJwe9lx8495My+hZtnjsLZ0YQ5KYlQ
      cQCrWSDM8I8IfWbe/fNvWLbst6zMr6C6vIaGsnf40Q9+RoFxcJNWGxWPq7KBK83TM2QPYG09
      yWP/t5Zv//kZZmfFXsJjxIye/22m36WlfMNTPL+nkCULRxN8hYZ8MUhQKGX09lnwRljpNOlI
      14BUpSZYrcan+HRsS5FYjNfrIxDwY3MKJI3NZWri1Sh0kRz/8BSJ4ToQ2j79CG0SjyxbQOn6
      rZxoncon8zAEGQwoZUrkMnA4rIREJKKRQEAAr2cAtT4UjViEgIAQ8CGSydCplIjCIwg02RFU
      crQaNVKrGK1ej1JhRy7/6poXiVxFRt4EJiReQ3yshh1H9xETqSHIGoZXMAHg83nxun24Lhxp
      UAXr0chVKBTg9dhR60MJuvDOIrGUG75xB8Vlp3hlxwA/+E4uIo8Xv0hGymgDu8tqmJWSAxi4
      b9mvueZCD+B3xTLvbDnpN/+a6SkXJnR+P4JCccVzgCEdoLeykIq+Pnat+DuHg0O5/dt3cvrV
      5ewvNmIqf4M1CQ+hqDzI6ZZerBYbC+9awrCRAqFkzDWLePGdJznllxI7/nrSDXBcKkMkGkwB
      KxWLEEukSMViwhLz6Nm4kqfdN3Pf/Mk8v3oLxiA9ExcsZtKoLFa89RdKotX4pGM/eoJUKkNh
      SOauO8fz1xUfcMdUJVKpGJFYilQymNdKKpMRnTkZf/6bPPaHM/RanMyKzCTOf5THnvgLgs/M
      VeN0TMmM5eWnfwtSLd94cCHWo6UExCJEEhlSiQiRSIxM+tXJTORqLTEZo8iMBQhw9eKx/O2P
      j7FVrmD6wqXow2o5tfzvdKSk4xfJEIklyKSBC/UkJzg8lSTxbn77xJ8R+XsZnyNQXXyIopo+
      vJIE1NEpRLUdo9czm6x5Syl78y2eenw9DSXlSE2PsUetJG/eHUzmONsP1pPY+RTb9Sn84OF7
      CLQ2EJJ3wxWn5hrZCf6S8Jhb2bl7H539dsxuFQ98534iNF/z4FoXEWDf6hcIZN3BdeNjLvsu
      n62FN175kEU/eZi4K9TkDx/V2v84Um0Y02bOZcDtxxAeg+HrHlnukoiZfu0N7DnTipeYy27N
      240NJM28lth/4UDKRT2AIAgXnVkdYYT/VS7qAfx+P3b7UFFKRxjhf4OLHEAqlRIcPDzWcEYY
      4YtmRAs0wleHIOB12nF6Bndwu+rr6XU6EQJ+rDYbgcAXPxQfMkVSwOug+MAm1m7OpycQTGpC
      OM7eZvK3b6fZYyAlOhif08zR7etYv/MIhKWQEPrviG3+k3ioPrYLqzYDg8pD5dHdOPUZ6JVD
      3/mZOJrZt7+F2LQIpIKApaWc1StXU1DZTlxqOlrF/+rk1s3pbSt5f/NuSutNxCUno71EFPDS
      49vxauPpPnWMPk00oerPXmcRAl52rXkTZ1gWGms1b76+gpI2OwnxkRz54E3cUWOIuYIzy/8K
      Q2uBus5RY4nkjpsmceDNpylo8FBy/BCFe9dzsKIN8HN45TOsqZLzrXtvIzF4OMWG8FJ3ci9N
      VgAP1YV7ablESJ1/aIFaCt7m5V1nP79IZyuHD1bjAQTBxzvvvE32Nbdx0/RE2josnC/YyDvr
      T1/y1u7zh3jxxT18CQ3bF4CXhspixi36LrMTrTz/zJt0ui5+kYpTe2nvd2EsLMDY9/lnjh3N
      hykfyCInxM4br+8hc84NzBqfglgs5xs3XU3+1gNYv+A4O0NrgWLGcuetAs2ntmLxyFApREy+
      6V66S/cNaoH83Rw9YmT07d/AZvcTHjWcxHCXZtNbj9Nt19HQamXpo79D6rXjlljYum4T27sK
      6DPdxc+uieHdlR/Q5dGyaOkDpIkbWbNmK+22bmyBmR+VpRR5qW9sJ35CBuOD7Dz34haOtEuw
      Bu5m8dQoNq9bT4tFyty77qD5w43sONaDW21j6Y3TKNi6huIWBzNvuZ8Zcf28/vJqLMo4br/n
      bkbH6b/CGro0IrEEbXAIudm3MvrUr6hsttDWsI1tR2rRpUziW/fcdNE9HWf3sHzDYfxB8Sy5
      9zZ6tm/FlBSJxaYjw3GExOnLUEnt6FRu2ttNJOdkEROiQyIeR7j7SZp755Mb9e902Z/P0HMA
      wU9F/js89cYBbnj4l0yK+afVWZ+DAbuT9uoSVr70e/767qFLxncZTrS0tDHllgdZMs5OQY0Z
      a08bXXbVx1qgu2aw593lFLc5sLedZeUHh9m5bTPRs+/jiR/dQdCFEAQisZR7H36U4L4yXnvm
      afY3qVh02/XccMv3+NGd81ApJKhVWkTWGtbmN3PN7YuYO/dufvbt2+gp2sCaw/WI7c28v3w7
      xqqjnBPSufnm60kMHc6yaECsQqH0YzVXsyvfxPd++UsmiYv4oKjn4mslcnQaFZ1FhzhU1khP
      /VnOD0Ry641j6akTkxQXhEgVyf0/egBxbwVblr/NoaoOQIFYJcPgVXU8AAACgUlEQVRs+2K/
      piF7APP5fB796xH++v4r5EZoLtZayCPJyYnCNmoGt05T8uv11dgD16IeFtNrGRqtiua2Dtx6
      G8bOEHKCQaJQolEo8ck+/fpisRSX04VPCOAX61iw5F4WjorA5YXdq0pQqWT4vR78F+RoguCi
      q1dg3uL7yQt/nRcOVfGdUQIuj4uAIFC8ZwfujPn8eFIUT5wUgQjcXhcBIUAAGXnX3M4v7pqC
      0+5GLHbxU20Du1a+SOnMB3jgulFfRYVdFubGY1S0xrDk9mCqRFLEYjFSqQS//58DbfWRv2Y3
      efctI0f/Kh0CgJbJ0yeilXsICvFhd/rxOQZo6HIx7ppFiJtPUFBWx9zcGAh4kX/B0o8hJ8Fd
      FYfZVWqkvbqUoydLCE2LZ/tfnuHw+Q66W4149HnMuzqTs3s3k1/ex4I7FzMmPmSYLC9JMERE
      Urh1BdsPVpEx/xamZ0XRVHuWpFHTkZirsejHEx1ox6lNYnxaOIU7NlDQqeD2uens3fAB+wtK
      ICSZyUlB7Ni4nrPNZpTqJCZPS0UueCncvpLVG3dQZgpi6V3Xk6CXU3xgIyXdMkanaCnYu48+
      NwT0Kcwam4zx1GaO1ruYPG0y7Se2sTn/KBYhjEh5G+s/2ItZYmDa9Okkhg+3XMU+zp88yObd
      ByirH2DuHXcyNjkBycBZ1qzdTpssm7tvnEJfczlhaZOhowFF+gSiAk1s3nWcgFROZGoOOpuJ
      4PGTiVZJUXjPc6jJwKRkJWePbGf1hi20uiNZcMM8otRmjh9qZOKcqwm+OHfqf4wRLdAIXxk+
      ewsvvrKNJQ99l0iNiDNnykhPzyYoSEbj/nfY45/Jd+an80Wuq/1//Ol/kd4OM7cAAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q2 - Table' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q3.1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFPElEQVR4nO3ba28UZRyG8Xt2Z7vb7WwrbYPEFKMcRCEGtYl4QI2HmBjfkOg384P4yoQQ
      DAolGkEEOaQJEpESDLRuD3SPMzuPLzBEYnUFYVd6X7+Xm83sf5O5MvPMsxuFEIIAU7EkZVmm
      NE2HPQswcLEkpWmqlZWVYc8CDFxh2AMAwxRv9GIURYOeAxiKvwQQRZGOF2JdaDSGMQ8wMBNx
      vPEV4FyjoaPLrAmwuW0tlVgDwBsBwFrfAEK3pV47lfJMeTfre8BseVHdpbpC7979tbzTVuil
      yrP8wacFHrK+AaTzZ3XrqzmF9g2tnL3W94Crx4+ocf60Vk5f0J/3mNdPnVRWv6Lm9ZYkqbey
      pO7S+oNPDjwEGy6C71VVdbvUvL4qhYrWThxWc+E3JftfVZQk6l46qdHZN5Qu5qrtm1FpZo/G
      Z2e1PHdc6S8XVf/mB43sfOnOB+WZ1o59obUk0fSbu5V1JzUynTzq7wj8rX+1Bijv2Kvuz5eU
      d1pan7+s4vi4otqosoWLimrPqnnqjEozU3ffHzrrCmmk1sWzCuWalPf++LRY4+9+rGTHNilL
      FVJuhzBcfa8AhckpRSOJqrt2qp1OaTR5WY1ry4prk9JIRaV9L6h1LtXIWEWSlNevaunILdVe
      O6hYT6t74nsVk5pKlbIKlSdUKsQK0bQKSUlxpfLIvyDwT6IQQmi1Wnd/CxRFkT5rddgHwKbH
      PgDs9b0FCrdv6NbhOcVP7tTkwVlFBSnkmdZOfq2xF/er/uUxhW5HyVsfKp3/TlmY0OR7B1Uo
      8nsi/P/1vQJkCwtKPjikqbfvnPyS1L3yo7r1ZfXiaW395FMlz+9WaWJMtdffV3ViXa1671HP
      DTwU/W+BxhKtH/1ci0fnlPeCQquu5s2eKlurClmm0FpVlldVSkbVnv9WjV+DRmrcWeHx0H8n
      uFBR9bk9ivK28saq0rWm8ts3tXbmvFo3FtW5+pPKz+xSaC4rL2xReTKofZMNLjwe+q4BStue
      Uq9zXeUDu9W5fE6lvQc09dGM8uY7Urmm0KypUBuVekWVtiQKU6+osn18ELMD/9l9PQYNIfBn
      GWwa9/0YlJMfmw2rVVgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFiLN3rxQC3ReLE46FmAgRovFvU7wNQ5WV/t
      XRwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q3.2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAEi0lEQVR4nO3b32tbZRzH8c9pctKk2RbXZlunc3aywajCwF+7EkQdeOmNf5l/xVBhYxM2
      GHPsShFEWaEw6miZzCWxNU2bnOT8yPFC8KaFOLae0H7er8vn6nuRd3Ke8+QJ8jzPBZgqS1Ka
      pkqSZNqzAIUrS1KSJOp2u9OeBSjczLQHAKapvN9iEARFzwFMxZ4AgiDQw5myVvr9acwDFGrf
      X4Df+n3d+5s9AY4+9gCwRgCwNjmALNY423tWlmeZxll2EDMBhZkcwOaqdp+ne5azVkvDdkvR
      xtpBzAUUYt9N8F5Dbd28rSTuq/7+50of/6jhsx3VP/1M41ZLpfFAWw9/Ue2DT9R4Z+lABwZe
      pf8ZQK7yuctqXG4qWluXmu9qYTlUXJLS4VBxZ6TSiaoGT9YJAIfK5Eeg6oIq9YoqzdcUlGsK
      Ty+pNNpQ99fHKlXnNHv2DYXzJ6WwofrFNwsYGXh1gjzP8yiK/vsvUBAE+joacQ4AC7wGhbWJ
      AYx3Otq8dUO91Q39e3MgV7y+os7tO0r6sbYf3FLrmxsa9Qba/ekHde4+UJZyxQCHw8QABo9W
      VP/4msadJxpnkpJt7axtq/nFNZVrJakyrzNffalKLVDl7StqXAgVteMCRgde3sQAKq+fVu/+
      90rTqoKZXBp0FW/+qfZ336r/R1vp83W1rl/XaFdS1NFo2NTc4mwBowMvb2IAcXtTs0uXpGRb
      Wa+rNFxQ7dS85t5aVNbbUnh+WdVTxxS3n6n786oUxMoibpfhcJh4DlB/7yMNN56qduGi4t8f
      KVy+quMfXtHor77q588pbT1VduasZhcbCpVorEABW2scEi/0GjTPcy7L4Eh5oe9qPvw4anhY
      gTUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgLXyfotXjx/TiVKp6FmAwv0DU83wuLYf4pEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q4.1' width='192'>
      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
      XcQmtPnW+7cAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q4.1 (2)' width='192'>
      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
      XcQmtPnW+7cAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q4.2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q4.3' width='192'>
      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
      s33vCarWPI1rfIS60gza9XRqS7IfuIz2y1/+8pe6rhMIzOnn7cwsC9OyaL3Uittj4g+56O3o
      oaS0mKrHHiddH2d0MkBWYR7Xzl8laAVITPTQ3RsmJz2J9Rs3UJhhsmPPtxSWLyU7LXF2dU0d
      Pwls3rSBYPe3nOg0KcvNJHVRCuVVTXiGOgmnJlFV1UimZ5yxoJexrqvoKS70W9O4qDiH5Y+s
      oaIojTMnj2Am5FNamHXfi8Df34+rKIez35yiclkBA+MuguODJHjCjOvJpCRn89TqCi7e8PPc
      5g0YoQkWlz9KpjtIamFBVAIQHGzj811H6O3vQ00tINnnZcOaWq52TOJL9LLhidW0tbVRmJnC
      kOEmPzMtClX/xNAn8QcshjrP4c2sIGTqhMcH8PlcdI14WJ6rc+L6GDVVy0hwP/iGzPxbA5gh
      Du/eiZJbSW6Gm3PBdmrra0nLyMTn1kjPzSW7MMSeL3aRnVNCYR6cHApSU1FCbqYbtwpWWjFK
      +DRFBffx5lM0crOnfj+zpI5lrbsIaC7SExI5sO9z8ivrWZLpI9HnwZWUx/GT+9G8WZRmZNF+
      axqzc3JISnChJmRgjI5RtbrsgRaBLyMDNTWVksJBcvKLmdRcBPES9BRSlp+N1+VBcSexLNfN
      Z599ySNNjaR5PGi5uVH7g06EvLz8yqtkJoRp7R7n4ren6ewpZu2GJwkMe1CA4qJCPMlpZBtR
      WefcRdUSyMorRDMmKaguprdviMSATu+4SXVpAXmLoKWvizTfdzt0/p9f88Dsut7ZYwAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q5' width='192'>
      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
      dodLAhBq+y/De/M90FUBrgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q6' width='192'>
      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
      xP8HfVScXHrsu5EAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q7' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAQxElEQVR4nO3deXgc5X3A8e87s7OHTluSbVm2JdkUh8PBBCglXG5COV14Sh9anqRJC3kC
      wQaMG5M+HO1DaGn6lNDnCRBCORrI4ZI05nBjQ4BAMRgbcxhMfGHLh+RDstC10mpXe8y8/cPG
      GPAhC+0cO7/P8/gBG5l9tbtfzbwz884qrbVGiJCKABQKBfL5vNdjEcJ1EYB8Pk9fX5/XYxHC
      dYbXAxDCSxKACDUJQISaBCBCTQIQoSYBiFCTAESoSQAlKLmnle3tSQCyqR5eX/YSb7y7kcKB
      5/y1pmNbC53JDACDPe3830sv8t7GVhyt2b5hNWs27URr+HDHNnozBQ++k+KTAErMljWv8uiP
      7+O5t7aDdnhn5SpqphxL5+olPPdO6/6ve3f5s9z/w3t5p7UbCoOseON9mqcfx6pnHuetdatZ
      umwTq59dxK7+Xn63bBVRU3n3TRWRBFBijpl5Lldc9OW9v1EGZ55/MZMrNR+09TCxtnL/133p
      nNlccNaMvb+JlHP+JRdSVuhld0pTbeTRiVqqDM17b68gMzjIoicX0591PPiOiivi9QBEEWnN
      jrWv8tCTK/n6t/6e45tqDvl1a19dxKJVXVw977s01sXpalvC7sQEUl1pMmVjOK0mxfKNe7hk
      5kR3v4ciky1ASdHs2bGFjVt30N62mbY9PTz+6KOceu5XKSQ76Eqm+f0zP6OlK8OOlg1s27mb
      7Zs30t7exk9++TznfeUM+jt2MJBVnHneBQz157j44llE+rvZtKvvE1uQUqG01jqTycjFcCVB
      09HaQntPCoCaiU04yV30pQuAYtLUY3FSnZSPm0xP6yZ6BnMA1E+ZSn9nK+msA5hM/cLxVFkF
      OpNZJtRVk9yzkz1pg+lTJ1FqMwEJQISa7AKJUJMARKhJAKGg2bZpA+m8RjsFtrZsIW/LSliQ
      AEKjdfULLF6+gd7W1fzmxdVoJ8uyZ59k6bK3sR2HbX9YyS9++QTrWju9HqqrZBIcEvl0Fz+6
      778oiylmXz2ftiU/pv+LX6dy7S8YOHY2K55+ku/94wKy6SHqxx3ifMFos3OoXAoKGZSd3fvP
      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
    </thumbnail>
    <thumbnail height='192' name='Q8' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q9' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Year Slicer' width='87'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
